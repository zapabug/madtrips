{"version":3,"file":"connect.cjs.development.js","sources":["../src/rpc.ts","../src/connect.ts","../src/nostr.ts"],"sourcesContent":["import EventEmitter from 'events';\nimport {\n  Event,\n  Filter,\n  getEventHash,\n  getPublicKey,\n  nip04,\n  Relay,\n  relayInit,\n  signEvent,\n  Sub,\n  validateEvent,\n  verifySignature,\n} from 'nostr-tools';\n\nexport interface NostrRPCRequest {\n  id: string;\n  method: string;\n  params: any[];\n}\nexport interface NostrRPCResponse {\n  id: string;\n  result: any;\n  error: any;\n}\n\nexport class NostrRPC {\n  relay: string;\n  self: { pubkey: string; secret: string };\n  event: Event | undefined;\n  // this is for implementing the response handlers for each method\n  [key: string]: any;\n  // events\n  events = new EventEmitter();\n\n  constructor(opts: { relay?: string; secretKey: string }) {\n    this.relay = opts.relay || 'wss://nostr.vulpem.com';\n    this.self = {\n      pubkey: getPublicKey(opts.secretKey),\n      secret: opts.secretKey,\n    };\n  }\n\n  async call(\n    {\n      target,\n      request: { id = randomID(), method, params = [] },\n    }: {\n      target: string;\n      request: {\n        id?: string;\n        method: string;\n        params?: any[];\n      };\n    },\n    opts?: { skipResponse?: boolean; timeout?: number }\n  ): Promise<any> {\n    // connect to relay\n    const relay = await connectToRelay(this.relay);\n\n    // prepare request to be sent\n    const request = prepareRequest(id, method, params);\n    const event = await prepareEvent(this.self.secret, target, request);\n\n    return new Promise<void>(async (resolve, reject) => {\n      const sub = relay.sub([\n        {\n          kinds: [24133],\n          authors: [target],\n          '#p': [this.self.pubkey],\n          limit: 1,\n        } as Filter,\n      ]);\n\n      await broadcastToRelay(relay, event, true);\n\n      // skip waiting for response from remote\n      if (opts && opts.skipResponse === true) resolve();\n\n      sub.on('event', async (event: Event) => {\n        let payload;\n        /* eslint-disable @typescript-eslint/no-unused-vars */\n        try {\n          const plaintext = await nip04.decrypt(\n            this.self.secret,\n            event.pubkey,\n            event.content\n          );\n          if (!plaintext) throw new Error('failed to decrypt event');\n          payload = JSON.parse(plaintext);\n        } catch (ignore) {\n          return;\n        }\n\n        // ignore all the events that are not NostrRPCResponse events\n        if (!isValidResponse(payload)) return;\n\n        // ignore all the events that are not for this request\n        if (payload.id !== id) return;\n\n        // if the response is an error, reject the promise\n        if (payload.error) {\n          reject(payload.error);\n        }\n\n        // if the response is a result, resolve the promise\n        if (payload.result) {\n          resolve(payload.result);\n        }\n      });\n    });\n  }\n\n  async listen(): Promise<Sub> {\n    const relay = await connectToRelay(this.relay);\n\n    const sub = relay.sub([\n      {\n        kinds: [24133],\n        '#p': [this.self.pubkey],\n        since: now(),\n      } as Filter,\n    ]);\n\n    sub.on('event', async (event: Event) => {\n      let payload: NostrRPCRequest;\n      /* eslint-disable @typescript-eslint/no-unused-vars */\n      try {\n        const plaintext = await nip04.decrypt(\n          this.self.secret,\n          event.pubkey,\n          event.content\n        );\n        if (!plaintext) throw new Error('failed to decrypt event');\n        payload = JSON.parse(plaintext);\n      } catch (ignore) {\n        return;\n      }\n\n      // ignore all the events that are not NostrRPCRequest events\n      if (!isValidRequest(payload)) return;\n\n      // handle request\n      if (typeof this[payload.method] !== 'function') Promise.resolve();\n      const response = await this.handleRequest(payload, event);\n\n      const body = prepareResponse(\n        response.id,\n        response.result,\n        response.error\n      );\n\n      const responseEvent = await prepareEvent(\n        this.self.secret,\n        event.pubkey,\n        body\n      );\n\n      // send response via relay\n      relay.publish(responseEvent);\n    });\n\n    return sub;\n  }\n\n  private async handleRequest(\n    request: NostrRPCRequest,\n    event: Event\n  ): Promise<NostrRPCResponse> {\n    const { id, method, params } = request;\n    let result = null;\n    let error = null;\n    try {\n      this.event = event;\n      result = await this[method](...params);\n      this.event = undefined;\n    } catch (e) {\n      if (e instanceof Error) {\n        error = e.message;\n      } else {\n        error = 'unknown error';\n      }\n    }\n    return {\n      id,\n      result,\n      error,\n    };\n  }\n}\n\nexport function now(): number {\n  return Math.floor(Date.now() / 1000);\n}\nexport function randomID(): string {\n  return Math.random()\n    .toString()\n    .slice(2);\n}\nexport function prepareRequest(\n  id: string,\n  method: string,\n  params: any[]\n): string {\n  return JSON.stringify({\n    id,\n    method,\n    params,\n  });\n}\nexport function prepareResponse(id: string, result: any, error: any): string {\n  return JSON.stringify({\n    id,\n    result,\n    error,\n  });\n}\nexport async function prepareEvent(\n  secretKey: string,\n  pubkey: string,\n  content: string\n): Promise<Event> {\n  const cipherText = await nip04.encrypt(secretKey, pubkey, content);\n\n  const event: Event = {\n    kind: 24133,\n    created_at: now(),\n    pubkey: getPublicKey(secretKey),\n    tags: [['p', pubkey]],\n    content: cipherText,\n    id: '',\n    sig: '',\n  };\n\n  const id = getEventHash(event);\n  const sig = signEvent(event, secretKey);\n\n  const signedEvent = { ...event, id, sig };\n  const ok = validateEvent(signedEvent);\n  const veryOk = verifySignature(signedEvent);\n  if (!ok || !veryOk) {\n    throw new Error('Event is not valid');\n  }\n\n  return signedEvent;\n}\n\nexport function isValidRequest(payload: any): boolean {\n  if (!payload) return false;\n\n  const keys = Object.keys(payload);\n  if (\n    !keys.includes('id') ||\n    !keys.includes('method') ||\n    !keys.includes('params')\n  )\n    return false;\n\n  return true;\n}\n\nexport function isValidResponse(payload: any): boolean {\n  if (!payload) return false;\n\n  const keys = Object.keys(payload);\n  if (\n    !keys.includes('id') ||\n    !keys.includes('result') ||\n    !keys.includes('error')\n  )\n    return false;\n\n  return true;\n}\n\nexport async function connectToRelay(realayURL: string) {\n  const relay = relayInit(realayURL);\n  await relay.connect();\n  await new Promise<void>((resolve, reject) => {\n    relay.on('connect', () => {\n      resolve();\n    });\n    relay.on('error', () => {\n      reject(new Error(`not possible to connect to ${relay.url}`));\n    });\n  });\n  return relay;\n}\nexport async function broadcastToRelay(\n  relay: Relay,\n  event: Event,\n  skipSeen: boolean = false\n) {\n  // send request via relay\n  return await new Promise<void>((resolve, reject) => {\n    relay.on('error', () => {\n      reject(new Error(`failed to connect to ${relay.url}`));\n    });\n    const pub = relay.publish(event);\n    if (skipSeen) resolve();\n    pub.on('failed', (reason: any) => {\n      reject(reason);\n    });\n    pub.on('ok', () => {\n      resolve();\n    });\n  });\n}\n","import EventEmitter from 'events';\nimport { Event, getPublicKey, nip04, Kind } from 'nostr-tools';\nimport { nip26 } from 'nostr-tools';\n\nimport { isValidRequest, NostrRPC } from './rpc';\n\nexport interface Metadata {\n  name: string;\n  url?: string;\n  description?: string;\n  icons?: string[];\n}\n\nexport enum TimeRanges {\n  FIVE_MINS = '5mins',\n  ONE_HR = '1hour',\n  ONE_DAY = '1day',\n  ONE_WEEK = '1week',\n  ONE_MONTH = '1month',\n  ONE_YEAR = '1year',\n}\nexport const TimeRangeToUnix: Record<TimeRanges, number> = {\n  [TimeRanges.FIVE_MINS]: Math.round(Date.now() / 1000) + 60 * 5,\n  [TimeRanges.ONE_HR]: Math.round(Date.now() / 1000) + 60 * 60,\n  [TimeRanges.ONE_DAY]: Math.round(Date.now() / 1000) + 60 * 60 * 24,\n  [TimeRanges.ONE_WEEK]: Math.round(Date.now() / 1000) + 60 * 60 * 24 * 7,\n  [TimeRanges.ONE_MONTH]: Math.round(Date.now() / 1000) + 60 * 60 * 24 * 30,\n  [TimeRanges.ONE_YEAR]: Math.round(Date.now() / 1000) + 60 * 60 * 24 * 365,\n};\n\nexport class ConnectURI {\n  target: string;\n  metadata: Metadata;\n  relay: string;\n\n  static fromURI(uri: string): ConnectURI {\n    const url = new URL(uri);\n    const target = url.hostname || url.pathname.substring(2);\n    if (!target) throw new Error('Invalid connect URI: missing target');\n    const relay = url.searchParams.get('relay');\n    if (!relay) {\n      throw new Error('Invalid connect URI: missing relay');\n    }\n    const metadata = url.searchParams.get('metadata');\n    if (!metadata) {\n      throw new Error('Invalid connect URI: missing metadata');\n    }\n\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    try {\n      const md = JSON.parse(metadata);\n      return new ConnectURI({ target, metadata: md, relay });\n    } catch (ignore) {\n      throw new Error('Invalid connect URI: metadata is not valid JSON');\n    }\n  }\n\n  constructor({\n    target,\n    metadata,\n    relay,\n  }: {\n    target: string;\n    metadata: Metadata;\n    relay: string;\n  }) {\n    this.target = target;\n    this.metadata = metadata;\n    this.relay = relay;\n  }\n\n  toString() {\n    return `nostrconnect://${this.target}?metadata=${encodeURIComponent(\n      JSON.stringify(this.metadata)\n    )}&relay=${encodeURIComponent(this.relay)}`;\n  }\n\n  async approve(secretKey: string): Promise<void> {\n    const rpc = new NostrRPC({\n      relay: this.relay,\n      secretKey,\n    });\n    await rpc.call(\n      {\n        target: this.target,\n        request: {\n          method: 'connect',\n          params: [getPublicKey(secretKey)],\n        },\n      },\n      { skipResponse: true }\n    );\n  }\n\n  async reject(secretKey: string): Promise<void> {\n    const rpc = new NostrRPC({\n      relay: this.relay,\n      secretKey,\n    });\n    await rpc.call(\n      {\n        target: this.target,\n        request: {\n          method: 'disconnect',\n          params: [],\n        },\n      },\n      { skipResponse: true }\n    );\n  }\n}\n\nexport class Connect {\n  rpc: NostrRPC;\n  target?: string;\n  events = new EventEmitter();\n\n  constructor({\n    target,\n    relay,\n    secretKey,\n  }: {\n    secretKey: string;\n    target?: string;\n    relay?: string;\n  }) {\n    this.rpc = new NostrRPC({ relay, secretKey });\n    if (target) {\n      this.target = target;\n    }\n  }\n\n  async init() {\n    const sub = await this.rpc.listen();\n    sub.on('event', async (event: Event) => {\n      let payload;\n      /* eslint-disable @typescript-eslint/no-unused-vars */\n      try {\n        const plaintext = await nip04.decrypt(\n          this.rpc.self.secret,\n          event.pubkey,\n          event.content\n        );\n        if (!plaintext) throw new Error('failed to decrypt event');\n        payload = JSON.parse(plaintext);\n      } catch (ignore) {\n        return;\n      }\n\n      // ignore all the events that are not NostrRPCRequest events\n      if (!isValidRequest(payload)) return;\n\n      switch (payload.method) {\n        case 'connect': {\n          if (!payload.params || payload.params.length !== 1)\n            throw new Error('connect: missing pubkey');\n          const [pubkey] = payload.params;\n          this.target = pubkey;\n          this.events.emit('connect', pubkey);\n          break;\n        }\n        case 'disconnect': {\n          this.target = undefined;\n          this.events.emit('disconnect');\n          break;\n        }\n        default:\n      }\n    });\n  }\n\n  on(evt: 'connect' | 'disconnect', cb: (...args: any[]) => void) {\n    this.events.on(evt, cb);\n  }\n  off(evt: 'connect' | 'disconnect', cb: (...args: any[]) => void) {\n    this.events.off(evt, cb);\n  }\n\n  async disconnect(): Promise<void> {\n    if (!this.target) throw new Error('Not connected');\n\n    // notify the UI that we are disconnecting\n    this.events.emit('disconnect');\n\n    try {\n      await this.rpc.call(\n        {\n          target: this.target,\n          request: {\n            method: 'disconnect',\n            params: [],\n          },\n        },\n        { skipResponse: true }\n      );\n    } catch (error) {\n      throw new Error('Failed to disconnect');\n    }\n\n    this.target = undefined;\n  }\n\n  async getPublicKey(): Promise<string> {\n    if (!this.target) throw new Error('Not connected');\n\n    const response = await this.rpc.call({\n      target: this.target,\n      request: {\n        method: 'get_public_key',\n        params: [],\n      },\n    });\n    return response as string;\n  }\n\n  async signEvent(event: {\n    kind: Kind;\n    tags: string[][];\n    pubkey: string;\n    content: string;\n    created_at: number;\n  }): Promise<Event> {\n    if (!this.target) throw new Error('Not connected');\n\n    const eventWithSig = await this.rpc.call({\n      target: this.target,\n      request: {\n        method: 'sign_event',\n        params: [event],\n      },\n    });\n\n    return eventWithSig as Event;\n  }\n\n  async describe(): Promise<string[]> {\n    if (!this.target) throw new Error('Not connected');\n\n    const response = await this.rpc.call({\n      target: this.target,\n      request: {\n        method: 'describe',\n        params: [],\n      },\n    });\n    return response as string[];\n  }\n\n  async delegate(\n    delegatee: string = this.rpc.self.pubkey,\n    conditions: {\n      kind?: number;\n      until?: number | TimeRanges;\n      since?: number | TimeRanges;\n    }\n  ): Promise<nip26.Delegation> {\n    if (!this.target) throw new Error('Not connected');\n\n    if (conditions.until && typeof conditions.until !== 'number') {\n      if (!Object.keys(TimeRangeToUnix).includes(conditions.until))\n        throw new Error(\n          'conditions.until must be either a number or a valid TimeRange'\n        );\n      conditions.until = TimeRangeToUnix[conditions.until];\n    }\n    if (conditions.since && typeof conditions.since !== 'number') {\n      if (!Object.keys(TimeRangeToUnix).includes(conditions.since))\n        throw new Error(\n          'conditions.since must be either a number or a valid TimeRange'\n        );\n      conditions.since = TimeRangeToUnix[conditions.since];\n    }\n\n    const delegation = await this.rpc.call({\n      target: this.target,\n      request: {\n        method: 'delegate',\n        params: [delegatee, conditions],\n      },\n    });\n    return delegation as nip26.Delegation;\n  }\n\n  async getRelays(): Promise<{\n    [url: string]: { read: boolean; write: boolean };\n  }> {\n    throw new Error('Not implemented');\n  }\n\n  nip04 = {\n    encrypt: async (_pubkey: string, _plaintext: string): Promise<string> => {\n      throw new Error('Not implemented');\n    },\n    decrypt: async (_pubkey: string, _ciphertext: string): Promise<string> => {\n      throw new Error('Not implemented');\n    },\n  };\n}\n","import { NostrRPC } from './rpc';\n\nexport class NostrSigner extends NostrRPC {\n  async disconnect(): Promise<null> {\n    this.events.emit('disconnect');\n    return null;\n  }\n  isConnected(): boolean {\n    throw new Error('Method not implemented yet.');\n  }\n}\n"],"names":["NostrRPC","opts","EventEmitter","relay","self","pubkey","getPublicKey","secretKey","secret","call","target","request","id","randomID","method","params","connectToRelay","prepareRequest","prepareEvent","event","Promise","resolve","reject","sub","kinds","authors","limit","broadcastToRelay","skipResponse","on","nip04","decrypt","content","plaintext","Error","payload","JSON","parse","isValidResponse","error","result","listen","since","now","isValidRequest","handleRequest","response","body","prepareResponse","responseEvent","publish","undefined","message","Math","floor","Date","random","toString","slice","stringify","encrypt","cipherText","kind","created_at","tags","sig","getEventHash","signEvent","signedEvent","ok","validateEvent","veryOk","verifySignature","keys","Object","includes","realayURL","relayInit","connect","url","skipSeen","pub","reason","TimeRanges","TimeRangeToUnix","FIVE_MINS","round","ONE_HR","ONE_DAY","ONE_WEEK","ONE_MONTH","ONE_YEAR","ConnectURI","metadata","fromURI","uri","URL","hostname","pathname","substring","searchParams","get","md","ignore","encodeURIComponent","approve","rpc","Connect","_pubkey","_plaintext","_ciphertext","init","length","events","emit","evt","cb","off","disconnect","eventWithSig","describe","delegate","delegatee","conditions","until","delegation","getRelays","NostrSigner","isConnected"],"mappings":"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"}