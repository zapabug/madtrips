var ac = Object.defineProperty;
var cc = (t, e, r) => e in t ? ac(t, e, { enumerable: !0, configurable: !0, writable: !0, value: r }) : t[e] = r;
var I = (t, e, r) => (cc(t, typeof e != "symbol" ? e + "" : e, r), r);
import Vo, { useRef as Go, useState as Sn, useEffect as uc, createContext as lc, useContext as fc } from "react";
var S = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {};
function Et(t) {
  var e = t.default;
  if (typeof e == "function") {
    var r = function() {
      return e.apply(this, arguments);
    };
    r.prototype = e.prototype;
  } else
    r = {};
  return Object.defineProperty(r, "__esModule", { value: !0 }), Object.keys(t).forEach(function(n) {
    var i = Object.getOwnPropertyDescriptor(t, n);
    Object.defineProperty(r, n, i.get ? i : {
      enumerable: !0,
      get: function() {
        return t[n];
      }
    });
  }), r;
}
var On = { exports: {} }, en, qi;
function hc() {
  if (qi)
    return en;
  qi = 1;
  var t = 1e3, e = t * 60, r = e * 60, n = r * 24, i = n * 7, s = n * 365.25;
  en = function(f, u) {
    u = u || {};
    var h = typeof f;
    if (h === "string" && f.length > 0)
      return o(f);
    if (h === "number" && isFinite(f))
      return u.long ? c(f) : a(f);
    throw new Error(
      "val is not a non-empty string or a valid number. val=" + JSON.stringify(f)
    );
  };
  function o(f) {
    if (f = String(f), !(f.length > 100)) {
      var u = /^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(
        f
      );
      if (!!u) {
        var h = parseFloat(u[1]), d = (u[2] || "ms").toLowerCase();
        switch (d) {
          case "years":
          case "year":
          case "yrs":
          case "yr":
          case "y":
            return h * s;
          case "weeks":
          case "week":
          case "w":
            return h * i;
          case "days":
          case "day":
          case "d":
            return h * n;
          case "hours":
          case "hour":
          case "hrs":
          case "hr":
          case "h":
            return h * r;
          case "minutes":
          case "minute":
          case "mins":
          case "min":
          case "m":
            return h * e;
          case "seconds":
          case "second":
          case "secs":
          case "sec":
          case "s":
            return h * t;
          case "milliseconds":
          case "millisecond":
          case "msecs":
          case "msec":
          case "ms":
            return h;
          default:
            return;
        }
      }
    }
  }
  function a(f) {
    var u = Math.abs(f);
    return u >= n ? Math.round(f / n) + "d" : u >= r ? Math.round(f / r) + "h" : u >= e ? Math.round(f / e) + "m" : u >= t ? Math.round(f / t) + "s" : f + "ms";
  }
  function c(f) {
    var u = Math.abs(f);
    return u >= n ? l(f, u, n, "day") : u >= r ? l(f, u, r, "hour") : u >= e ? l(f, u, e, "minute") : u >= t ? l(f, u, t, "second") : f + " ms";
  }
  function l(f, u, h, d) {
    var p = u >= h * 1.5;
    return Math.round(f / h) + " " + d + (p ? "s" : "");
  }
  return en;
}
function dc(t) {
  r.debug = r, r.default = r, r.coerce = c, r.disable = s, r.enable = i, r.enabled = o, r.humanize = hc(), r.destroy = l, Object.keys(t).forEach((f) => {
    r[f] = t[f];
  }), r.names = [], r.skips = [], r.formatters = {};
  function e(f) {
    let u = 0;
    for (let h = 0; h < f.length; h++)
      u = (u << 5) - u + f.charCodeAt(h), u |= 0;
    return r.colors[Math.abs(u) % r.colors.length];
  }
  r.selectColor = e;
  function r(f) {
    let u, h = null, d, p;
    function y(...g) {
      if (!y.enabled)
        return;
      const v = y, _ = Number(new Date()), m = _ - (u || _);
      v.diff = m, v.prev = u, v.curr = _, u = _, g[0] = r.coerce(g[0]), typeof g[0] != "string" && g.unshift("%O");
      let C = 0;
      g[0] = g[0].replace(/%([a-zA-Z%])/g, (w, x) => {
        if (w === "%%")
          return "%";
        C++;
        const A = r.formatters[x];
        if (typeof A == "function") {
          const B = g[C];
          w = A.call(v, B), g.splice(C, 1), C--;
        }
        return w;
      }), r.formatArgs.call(v, g), (v.log || r.log).apply(v, g);
    }
    return y.namespace = f, y.useColors = r.useColors(), y.color = r.selectColor(f), y.extend = n, y.destroy = r.destroy, Object.defineProperty(y, "enabled", {
      enumerable: !0,
      configurable: !1,
      get: () => h !== null ? h : (d !== r.namespaces && (d = r.namespaces, p = r.enabled(f)), p),
      set: (g) => {
        h = g;
      }
    }), typeof r.init == "function" && r.init(y), y;
  }
  function n(f, u) {
    const h = r(this.namespace + (typeof u > "u" ? ":" : u) + f);
    return h.log = this.log, h;
  }
  function i(f) {
    r.save(f), r.namespaces = f, r.names = [], r.skips = [];
    let u;
    const h = (typeof f == "string" ? f : "").split(/[\s,]+/), d = h.length;
    for (u = 0; u < d; u++)
      !h[u] || (f = h[u].replace(/\*/g, ".*?"), f[0] === "-" ? r.skips.push(new RegExp("^" + f.slice(1) + "$")) : r.names.push(new RegExp("^" + f + "$")));
  }
  function s() {
    const f = [
      ...r.names.map(a),
      ...r.skips.map(a).map((u) => "-" + u)
    ].join(",");
    return r.enable(""), f;
  }
  function o(f) {
    if (f[f.length - 1] === "*")
      return !0;
    let u, h;
    for (u = 0, h = r.skips.length; u < h; u++)
      if (r.skips[u].test(f))
        return !1;
    for (u = 0, h = r.names.length; u < h; u++)
      if (r.names[u].test(f))
        return !0;
    return !1;
  }
  function a(f) {
    return f.toString().substring(2, f.toString().length - 2).replace(/\.\*\?$/, "*");
  }
  function c(f) {
    return f instanceof Error ? f.stack || f.message : f;
  }
  function l() {
    console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.");
  }
  return r.enable(r.load()), r;
}
var pc = dc;
(function(t, e) {
  e.formatArgs = n, e.save = i, e.load = s, e.useColors = r, e.storage = o(), e.destroy = (() => {
    let c = !1;
    return () => {
      c || (c = !0, console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`."));
    };
  })(), e.colors = [
    "#0000CC",
    "#0000FF",
    "#0033CC",
    "#0033FF",
    "#0066CC",
    "#0066FF",
    "#0099CC",
    "#0099FF",
    "#00CC00",
    "#00CC33",
    "#00CC66",
    "#00CC99",
    "#00CCCC",
    "#00CCFF",
    "#3300CC",
    "#3300FF",
    "#3333CC",
    "#3333FF",
    "#3366CC",
    "#3366FF",
    "#3399CC",
    "#3399FF",
    "#33CC00",
    "#33CC33",
    "#33CC66",
    "#33CC99",
    "#33CCCC",
    "#33CCFF",
    "#6600CC",
    "#6600FF",
    "#6633CC",
    "#6633FF",
    "#66CC00",
    "#66CC33",
    "#9900CC",
    "#9900FF",
    "#9933CC",
    "#9933FF",
    "#99CC00",
    "#99CC33",
    "#CC0000",
    "#CC0033",
    "#CC0066",
    "#CC0099",
    "#CC00CC",
    "#CC00FF",
    "#CC3300",
    "#CC3333",
    "#CC3366",
    "#CC3399",
    "#CC33CC",
    "#CC33FF",
    "#CC6600",
    "#CC6633",
    "#CC9900",
    "#CC9933",
    "#CCCC00",
    "#CCCC33",
    "#FF0000",
    "#FF0033",
    "#FF0066",
    "#FF0099",
    "#FF00CC",
    "#FF00FF",
    "#FF3300",
    "#FF3333",
    "#FF3366",
    "#FF3399",
    "#FF33CC",
    "#FF33FF",
    "#FF6600",
    "#FF6633",
    "#FF9900",
    "#FF9933",
    "#FFCC00",
    "#FFCC33"
  ];
  function r() {
    return typeof window < "u" && window.process && (window.process.type === "renderer" || window.process.__nwjs) ? !0 : typeof navigator < "u" && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/) ? !1 : typeof document < "u" && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || typeof window < "u" && window.console && (window.console.firebug || window.console.exception && window.console.table) || typeof navigator < "u" && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31 || typeof navigator < "u" && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/);
  }
  function n(c) {
    if (c[0] = (this.useColors ? "%c" : "") + this.namespace + (this.useColors ? " %c" : " ") + c[0] + (this.useColors ? "%c " : " ") + "+" + t.exports.humanize(this.diff), !this.useColors)
      return;
    const l = "color: " + this.color;
    c.splice(1, 0, l, "color: inherit");
    let f = 0, u = 0;
    c[0].replace(/%[a-zA-Z%]/g, (h) => {
      h !== "%%" && (f++, h === "%c" && (u = f));
    }), c.splice(u, 0, l);
  }
  e.log = console.debug || console.log || (() => {
  });
  function i(c) {
    try {
      c ? e.storage.setItem("debug", c) : e.storage.removeItem("debug");
    } catch {
    }
  }
  function s() {
    let c;
    try {
      c = e.storage.getItem("debug");
    } catch {
    }
    return !c && typeof process < "u" && "env" in process && (c = process.env.DEBUG), c;
  }
  function o() {
    try {
      return localStorage;
    } catch {
    }
  }
  t.exports = pc(e);
  const { formatters: a } = t.exports;
  a.j = function(c) {
    try {
      return JSON.stringify(c);
    } catch (l) {
      return "[UnexpectedJSONParseError]: " + l.message;
    }
  };
})(On, On.exports);
const Mn = On.exports;
var Zo = { exports: {} };
(function(t) {
  var e = Object.prototype.hasOwnProperty, r = "~";
  function n() {
  }
  Object.create && (n.prototype = /* @__PURE__ */ Object.create(null), new n().__proto__ || (r = !1));
  function i(c, l, f) {
    this.fn = c, this.context = l, this.once = f || !1;
  }
  function s(c, l, f, u, h) {
    if (typeof f != "function")
      throw new TypeError("The listener must be a function");
    var d = new i(f, u || c, h), p = r ? r + l : l;
    return c._events[p] ? c._events[p].fn ? c._events[p] = [c._events[p], d] : c._events[p].push(d) : (c._events[p] = d, c._eventsCount++), c;
  }
  function o(c, l) {
    --c._eventsCount === 0 ? c._events = new n() : delete c._events[l];
  }
  function a() {
    this._events = new n(), this._eventsCount = 0;
  }
  a.prototype.eventNames = function() {
    var l = [], f, u;
    if (this._eventsCount === 0)
      return l;
    for (u in f = this._events)
      e.call(f, u) && l.push(r ? u.slice(1) : u);
    return Object.getOwnPropertySymbols ? l.concat(Object.getOwnPropertySymbols(f)) : l;
  }, a.prototype.listeners = function(l) {
    var f = r ? r + l : l, u = this._events[f];
    if (!u)
      return [];
    if (u.fn)
      return [u.fn];
    for (var h = 0, d = u.length, p = new Array(d); h < d; h++)
      p[h] = u[h].fn;
    return p;
  }, a.prototype.listenerCount = function(l) {
    var f = r ? r + l : l, u = this._events[f];
    return u ? u.fn ? 1 : u.length : 0;
  }, a.prototype.emit = function(l, f, u, h, d, p) {
    var y = r ? r + l : l;
    if (!this._events[y])
      return !1;
    var g = this._events[y], v = arguments.length, _, m;
    if (g.fn) {
      switch (g.once && this.removeListener(l, g.fn, void 0, !0), v) {
        case 1:
          return g.fn.call(g.context), !0;
        case 2:
          return g.fn.call(g.context, f), !0;
        case 3:
          return g.fn.call(g.context, f, u), !0;
        case 4:
          return g.fn.call(g.context, f, u, h), !0;
        case 5:
          return g.fn.call(g.context, f, u, h, d), !0;
        case 6:
          return g.fn.call(g.context, f, u, h, d, p), !0;
      }
      for (m = 1, _ = new Array(v - 1); m < v; m++)
        _[m - 1] = arguments[m];
      g.fn.apply(g.context, _);
    } else {
      var C = g.length, O;
      for (m = 0; m < C; m++)
        switch (g[m].once && this.removeListener(l, g[m].fn, void 0, !0), v) {
          case 1:
            g[m].fn.call(g[m].context);
            break;
          case 2:
            g[m].fn.call(g[m].context, f);
            break;
          case 3:
            g[m].fn.call(g[m].context, f, u);
            break;
          case 4:
            g[m].fn.call(g[m].context, f, u, h);
            break;
          default:
            if (!_)
              for (O = 1, _ = new Array(v - 1); O < v; O++)
                _[O - 1] = arguments[O];
            g[m].fn.apply(g[m].context, _);
        }
    }
    return !0;
  }, a.prototype.on = function(l, f, u) {
    return s(this, l, f, u, !1);
  }, a.prototype.once = function(l, f, u) {
    return s(this, l, f, u, !0);
  }, a.prototype.removeListener = function(l, f, u, h) {
    var d = r ? r + l : l;
    if (!this._events[d])
      return this;
    if (!f)
      return o(this, d), this;
    var p = this._events[d];
    if (p.fn)
      p.fn === f && (!h || p.once) && (!u || p.context === u) && o(this, d);
    else {
      for (var y = 0, g = [], v = p.length; y < v; y++)
        (p[y].fn !== f || h && !p[y].once || u && p[y].context !== u) && g.push(p[y]);
      g.length ? this._events[d] = g.length === 1 ? g[0] : g : o(this, d);
    }
    return this;
  }, a.prototype.removeAllListeners = function(l) {
    var f;
    return l ? (f = r ? r + l : l, this._events[f] && o(this, f)) : (this._events = new n(), this._eventsCount = 0), this;
  }, a.prototype.off = a.prototype.removeListener, a.prototype.addListener = a.prototype.on, a.prefixed = r, a.EventEmitter = a, t.exports = a;
})(Zo);
const dt = Zo.exports;
function An(t) {
  if (!Number.isSafeInteger(t) || t < 0)
    throw new Error(`Wrong positive integer: ${t}`);
}
function yc(t) {
  if (typeof t != "boolean")
    throw new Error(`Expected boolean, not ${t}`);
}
function Yo(t, ...e) {
  if (!(t instanceof Uint8Array))
    throw new TypeError("Expected Uint8Array");
  if (e.length > 0 && !e.includes(t.length))
    throw new TypeError(`Expected Uint8Array of length ${e}, not of length=${t.length}`);
}
function gc(t) {
  if (typeof t != "function" || typeof t.create != "function")
    throw new Error("Hash should be wrapped by utils.wrapConstructor");
  An(t.outputLen), An(t.blockLen);
}
function bc(t, e = !0) {
  if (t.destroyed)
    throw new Error("Hash instance has been destroyed");
  if (e && t.finished)
    throw new Error("Hash#digest() has already been called");
}
function vc(t, e) {
  Yo(t);
  const r = e.outputLen;
  if (t.length < r)
    throw new Error(`digestInto() expects output buffer of length at least ${r}`);
}
const ut = {
  number: An,
  bool: yc,
  bytes: Yo,
  hash: gc,
  exists: bc,
  output: vc
}, tn = typeof globalThis == "object" && "crypto" in globalThis ? globalThis.crypto : void 0;
/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */
const rn = (t) => new DataView(t.buffer, t.byteOffset, t.byteLength), Ae = (t, e) => t << 32 - e | t >>> e, wc = new Uint8Array(new Uint32Array([287454020]).buffer)[0] === 68;
if (!wc)
  throw new Error("Non little-endian hardware is not supported");
Array.from({ length: 256 }, (t, e) => e.toString(16).padStart(2, "0"));
function _c(t) {
  if (typeof t != "string")
    throw new TypeError(`utf8ToBytes expected string, got ${typeof t}`);
  return new TextEncoder().encode(t);
}
function Dn(t) {
  if (typeof t == "string" && (t = _c(t)), !(t instanceof Uint8Array))
    throw new TypeError(`Expected input type is Uint8Array (got ${typeof t})`);
  return t;
}
function mc(...t) {
  if (!t.every((n) => n instanceof Uint8Array))
    throw new Error("Uint8Array list expected");
  if (t.length === 1)
    return t[0];
  const e = t.reduce((n, i) => n + i.length, 0), r = new Uint8Array(e);
  for (let n = 0, i = 0; n < t.length; n++) {
    const s = t[n];
    r.set(s, i), i += s.length;
  }
  return r;
}
class Jo {
  clone() {
    return this._cloneInto();
  }
}
function Xo(t) {
  const e = (n) => t().update(Dn(n)).digest(), r = t();
  return e.outputLen = r.outputLen, e.blockLen = r.blockLen, e.create = () => t(), e;
}
function Qo(t = 32) {
  if (tn && typeof tn.getRandomValues == "function")
    return tn.getRandomValues(new Uint8Array(t));
  throw new Error("crypto.getRandomValues must be defined");
}
function xc(t, e, r, n) {
  if (typeof t.setBigUint64 == "function")
    return t.setBigUint64(e, r, n);
  const i = BigInt(32), s = BigInt(4294967295), o = Number(r >> i & s), a = Number(r & s), c = n ? 4 : 0, l = n ? 0 : 4;
  t.setUint32(e + c, o, n), t.setUint32(e + l, a, n);
}
class Ec extends Jo {
  constructor(e, r, n, i) {
    super(), this.blockLen = e, this.outputLen = r, this.padOffset = n, this.isLE = i, this.finished = !1, this.length = 0, this.pos = 0, this.destroyed = !1, this.buffer = new Uint8Array(e), this.view = rn(this.buffer);
  }
  update(e) {
    ut.exists(this);
    const { view: r, buffer: n, blockLen: i } = this;
    e = Dn(e);
    const s = e.length;
    for (let o = 0; o < s; ) {
      const a = Math.min(i - this.pos, s - o);
      if (a === i) {
        const c = rn(e);
        for (; i <= s - o; o += i)
          this.process(c, o);
        continue;
      }
      n.set(e.subarray(o, o + a), this.pos), this.pos += a, o += a, this.pos === i && (this.process(r, 0), this.pos = 0);
    }
    return this.length += e.length, this.roundClean(), this;
  }
  digestInto(e) {
    ut.exists(this), ut.output(e, this), this.finished = !0;
    const { buffer: r, view: n, blockLen: i, isLE: s } = this;
    let { pos: o } = this;
    r[o++] = 128, this.buffer.subarray(o).fill(0), this.padOffset > i - o && (this.process(n, 0), o = 0);
    for (let u = o; u < i; u++)
      r[u] = 0;
    xc(n, i - 8, BigInt(this.length * 8), s), this.process(n, 0);
    const a = rn(e), c = this.outputLen;
    if (c % 4)
      throw new Error("_sha2: outputLen should be aligned to 32bit");
    const l = c / 4, f = this.get();
    if (l > f.length)
      throw new Error("_sha2: outputLen bigger than state");
    for (let u = 0; u < l; u++)
      a.setUint32(4 * u, f[u], s);
  }
  digest() {
    const { buffer: e, outputLen: r } = this;
    this.digestInto(e);
    const n = e.slice(0, r);
    return this.destroy(), n;
  }
  _cloneInto(e) {
    e || (e = new this.constructor()), e.set(...this.get());
    const { blockLen: r, buffer: n, length: i, finished: s, destroyed: o, pos: a } = this;
    return e.length = i, e.pos = a, e.finished = s, e.destroyed = o, i % r && e.buffer.set(n), e;
  }
}
const kc = (t, e, r) => t & e ^ ~t & r, Sc = (t, e, r) => t & e ^ t & r ^ e & r, Oc = new Uint32Array([
  1116352408,
  1899447441,
  3049323471,
  3921009573,
  961987163,
  1508970993,
  2453635748,
  2870763221,
  3624381080,
  310598401,
  607225278,
  1426881987,
  1925078388,
  2162078206,
  2614888103,
  3248222580,
  3835390401,
  4022224774,
  264347078,
  604807628,
  770255983,
  1249150122,
  1555081692,
  1996064986,
  2554220882,
  2821834349,
  2952996808,
  3210313671,
  3336571891,
  3584528711,
  113926993,
  338241895,
  666307205,
  773529912,
  1294757372,
  1396182291,
  1695183700,
  1986661051,
  2177026350,
  2456956037,
  2730485921,
  2820302411,
  3259730800,
  3345764771,
  3516065817,
  3600352804,
  4094571909,
  275423344,
  430227734,
  506948616,
  659060556,
  883997877,
  958139571,
  1322822218,
  1537002063,
  1747873779,
  1955562222,
  2024104815,
  2227730452,
  2361852424,
  2428436474,
  2756734187,
  3204031479,
  3329325298
]), Me = new Uint32Array([
  1779033703,
  3144134277,
  1013904242,
  2773480762,
  1359893119,
  2600822924,
  528734635,
  1541459225
]), De = new Uint32Array(64);
class es extends Ec {
  constructor() {
    super(64, 32, 8, !1), this.A = Me[0] | 0, this.B = Me[1] | 0, this.C = Me[2] | 0, this.D = Me[3] | 0, this.E = Me[4] | 0, this.F = Me[5] | 0, this.G = Me[6] | 0, this.H = Me[7] | 0;
  }
  get() {
    const { A: e, B: r, C: n, D: i, E: s, F: o, G: a, H: c } = this;
    return [e, r, n, i, s, o, a, c];
  }
  set(e, r, n, i, s, o, a, c) {
    this.A = e | 0, this.B = r | 0, this.C = n | 0, this.D = i | 0, this.E = s | 0, this.F = o | 0, this.G = a | 0, this.H = c | 0;
  }
  process(e, r) {
    for (let u = 0; u < 16; u++, r += 4)
      De[u] = e.getUint32(r, !1);
    for (let u = 16; u < 64; u++) {
      const h = De[u - 15], d = De[u - 2], p = Ae(h, 7) ^ Ae(h, 18) ^ h >>> 3, y = Ae(d, 17) ^ Ae(d, 19) ^ d >>> 10;
      De[u] = y + De[u - 7] + p + De[u - 16] | 0;
    }
    let { A: n, B: i, C: s, D: o, E: a, F: c, G: l, H: f } = this;
    for (let u = 0; u < 64; u++) {
      const h = Ae(a, 6) ^ Ae(a, 11) ^ Ae(a, 25), d = f + h + kc(a, c, l) + Oc[u] + De[u] | 0, y = (Ae(n, 2) ^ Ae(n, 13) ^ Ae(n, 22)) + Sc(n, i, s) | 0;
      f = l, l = c, c = a, a = o + d | 0, o = s, s = i, i = n, n = d + y | 0;
    }
    n = n + this.A | 0, i = i + this.B | 0, s = s + this.C | 0, o = o + this.D | 0, a = a + this.E | 0, c = c + this.F | 0, l = l + this.G | 0, f = f + this.H | 0, this.set(n, i, s, o, a, c, l, f);
  }
  roundClean() {
    De.fill(0);
  }
  destroy() {
    this.set(0, 0, 0, 0, 0, 0, 0, 0), this.buffer.fill(0);
  }
}
class Ac extends es {
  constructor() {
    super(), this.A = -1056596264, this.B = 914150663, this.C = 812702999, this.D = -150054599, this.E = -4191439, this.F = 1750603025, this.G = 1694076839, this.H = -1090891868, this.outputLen = 28;
  }
}
const Or = Xo(() => new es());
Xo(() => new Ac());
/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
const ts = BigInt(0), Lr = BigInt(1), Cc = BigInt(2), $r = (t) => t instanceof Uint8Array, Ic = Array.from({ length: 256 }, (t, e) => e.toString(16).padStart(2, "0"));
function vt(t) {
  if (!$r(t))
    throw new Error("Uint8Array expected");
  let e = "";
  for (let r = 0; r < t.length; r++)
    e += Ic[t[r]];
  return e;
}
function rs(t) {
  const e = t.toString(16);
  return e.length & 1 ? `0${e}` : e;
}
function zn(t) {
  if (typeof t != "string")
    throw new Error("hex string expected, got " + typeof t);
  return BigInt(t === "" ? "0" : `0x${t}`);
}
function wt(t) {
  if (typeof t != "string")
    throw new Error("hex string expected, got " + typeof t);
  if (t.length % 2)
    throw new Error("hex string is invalid: unpadded " + t.length);
  const e = new Uint8Array(t.length / 2);
  for (let r = 0; r < e.length; r++) {
    const n = r * 2, i = t.slice(n, n + 2), s = Number.parseInt(i, 16);
    if (Number.isNaN(s) || s < 0)
      throw new Error("invalid byte sequence");
    e[r] = s;
  }
  return e;
}
function le(t) {
  return zn(vt(t));
}
function Fn(t) {
  if (!$r(t))
    throw new Error("Uint8Array expected");
  return zn(vt(Uint8Array.from(t).reverse()));
}
const et = (t, e) => wt(t.toString(16).padStart(e * 2, "0")), ns = (t, e) => et(t, e).reverse(), Rc = (t) => wt(rs(t));
function ee(t, e, r) {
  let n;
  if (typeof e == "string")
    try {
      n = wt(e);
    } catch (s) {
      throw new Error(`${t} must be valid hex string, got "${e}". Cause: ${s}`);
    }
  else if ($r(e))
    n = Uint8Array.from(e);
  else
    throw new Error(`${t} must be hex string or Uint8Array`);
  const i = n.length;
  if (typeof r == "number" && i !== r)
    throw new Error(`${t} expected ${r} bytes, got ${i}`);
  return n;
}
function he(...t) {
  const e = new Uint8Array(t.reduce((n, i) => n + i.length, 0));
  let r = 0;
  return t.forEach((n) => {
    if (!$r(n))
      throw new Error("Uint8Array expected");
    e.set(n, r), r += n.length;
  }), e;
}
function Tc(t, e) {
  if (t.length !== e.length)
    return !1;
  for (let r = 0; r < t.length; r++)
    if (t[r] !== e[r])
      return !1;
  return !0;
}
function qr(t) {
  if (typeof t != "string")
    throw new Error(`utf8ToBytes expected string, got ${typeof t}`);
  return new TextEncoder().encode(t);
}
function Pc(t) {
  let e;
  for (e = 0; t > ts; t >>= Lr, e += 1)
    ;
  return e;
}
const Bc = (t, e) => t >> BigInt(e) & Lr, Lc = (t, e, r) => t | (r ? Lr : ts) << BigInt(e), Kn = (t) => (Cc << BigInt(t - 1)) - Lr, nn = (t) => new Uint8Array(t), Ni = (t) => Uint8Array.from(t);
function is(t, e, r) {
  if (typeof t != "number" || t < 2)
    throw new Error("hashLen must be a number");
  if (typeof e != "number" || e < 2)
    throw new Error("qByteLen must be a number");
  if (typeof r != "function")
    throw new Error("hmacFn must be a function");
  let n = nn(t), i = nn(t), s = 0;
  const o = () => {
    n.fill(1), i.fill(0), s = 0;
  }, a = (...u) => r(i, n, ...u), c = (u = nn()) => {
    i = a(Ni([0]), u), n = a(), u.length !== 0 && (i = a(Ni([1]), u), n = a());
  }, l = () => {
    if (s++ >= 1e3)
      throw new Error("drbg: tried 1000 values");
    let u = 0;
    const h = [];
    for (; u < e; ) {
      n = a();
      const d = n.slice();
      h.push(d), u += n.length;
    }
    return he(...h);
  };
  return (u, h) => {
    o(), c(u);
    let d;
    for (; !(d = h(l())); )
      c();
    return o(), d;
  };
}
const $c = {
  bigint: (t) => typeof t == "bigint",
  function: (t) => typeof t == "function",
  boolean: (t) => typeof t == "boolean",
  string: (t) => typeof t == "string",
  isSafeInteger: (t) => Number.isSafeInteger(t),
  array: (t) => Array.isArray(t),
  field: (t, e) => e.Fp.isValid(t),
  hash: (t) => typeof t == "function" && Number.isSafeInteger(t.outputLen)
};
function kt(t, e, r = {}) {
  const n = (i, s, o) => {
    const a = $c[s];
    if (typeof a != "function")
      throw new Error(`Invalid validator "${s}", expected function`);
    const c = t[i];
    if (!(o && c === void 0) && !a(c, t))
      throw new Error(`Invalid param ${String(i)}=${c} (${typeof c}), expected ${s}`);
  };
  for (const [i, s] of Object.entries(e))
    n(i, s, !1);
  for (const [i, s] of Object.entries(r))
    n(i, s, !0);
  return t;
}
const qc = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  bytesToHex: vt,
  numberToHexUnpadded: rs,
  hexToNumber: zn,
  hexToBytes: wt,
  bytesToNumberBE: le,
  bytesToNumberLE: Fn,
  numberToBytesBE: et,
  numberToBytesLE: ns,
  numberToVarBytesBE: Rc,
  ensureBytes: ee,
  concatBytes: he,
  equalBytes: Tc,
  utf8ToBytes: qr,
  bitLen: Pc,
  bitGet: Bc,
  bitSet: Lc,
  bitMask: Kn,
  createHmacDrbg: is,
  validateObject: kt
}, Symbol.toStringTag, { value: "Module" }));
/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
const Q = BigInt(0), V = BigInt(1), at = BigInt(2), Nc = BigInt(3), Cn = BigInt(4), Ui = BigInt(5), ji = BigInt(8);
BigInt(9);
BigInt(16);
function J(t, e) {
  const r = t % e;
  return r >= Q ? r : e + r;
}
function Uc(t, e, r) {
  if (r <= Q || e < Q)
    throw new Error("Expected power/modulo > 0");
  if (r === V)
    return Q;
  let n = V;
  for (; e > Q; )
    e & V && (n = n * t % r), t = t * t % r, e >>= V;
  return n;
}
function be(t, e, r) {
  let n = t;
  for (; e-- > Q; )
    n *= n, n %= r;
  return n;
}
function In(t, e) {
  if (t === Q || e <= Q)
    throw new Error(`invert: expected positive integers, got n=${t} mod=${e}`);
  let r = J(t, e), n = e, i = Q, s = V;
  for (; r !== Q; ) {
    const a = n / r, c = n % r, l = i - s * a;
    n = r, r = c, i = s, s = l;
  }
  if (n !== V)
    throw new Error("invert: does not exist");
  return J(i, e);
}
function jc(t) {
  const e = (t - V) / at;
  let r, n, i;
  for (r = t - V, n = 0; r % at === Q; r /= at, n++)
    ;
  for (i = at; i < t && Uc(i, e, t) !== t - V; i++)
    ;
  if (n === 1) {
    const o = (t + V) / Cn;
    return function(c, l) {
      const f = c.pow(l, o);
      if (!c.eql(c.sqr(f), l))
        throw new Error("Cannot find square root");
      return f;
    };
  }
  const s = (r + V) / at;
  return function(a, c) {
    if (a.pow(c, e) === a.neg(a.ONE))
      throw new Error("Cannot find square root");
    let l = n, f = a.pow(a.mul(a.ONE, i), r), u = a.pow(c, s), h = a.pow(c, r);
    for (; !a.eql(h, a.ONE); ) {
      if (a.eql(h, a.ZERO))
        return a.ZERO;
      let d = 1;
      for (let y = a.sqr(h); d < l && !a.eql(y, a.ONE); d++)
        y = a.sqr(y);
      const p = a.pow(f, V << BigInt(l - d - 1));
      f = a.sqr(p), u = a.mul(u, p), h = a.mul(h, f), l = d;
    }
    return u;
  };
}
function Hc(t) {
  if (t % Cn === Nc) {
    const e = (t + V) / Cn;
    return function(n, i) {
      const s = n.pow(i, e);
      if (!n.eql(n.sqr(s), i))
        throw new Error("Cannot find square root");
      return s;
    };
  }
  if (t % ji === Ui) {
    const e = (t - Ui) / ji;
    return function(n, i) {
      const s = n.mul(i, at), o = n.pow(s, e), a = n.mul(i, o), c = n.mul(n.mul(a, at), o), l = n.mul(a, n.sub(c, n.ONE));
      if (!n.eql(n.sqr(l), i))
        throw new Error("Cannot find square root");
      return l;
    };
  }
  return jc(t);
}
const Mc = [
  "create",
  "isValid",
  "is0",
  "neg",
  "inv",
  "sqrt",
  "sqr",
  "eql",
  "add",
  "sub",
  "mul",
  "pow",
  "div",
  "addN",
  "subN",
  "mulN",
  "sqrN"
];
function os(t) {
  const e = {
    ORDER: "bigint",
    MASK: "bigint",
    BYTES: "isSafeInteger",
    BITS: "isSafeInteger"
  }, r = Mc.reduce((n, i) => (n[i] = "function", n), e);
  return kt(t, r);
}
function Dc(t, e, r) {
  if (r < Q)
    throw new Error("Expected power > 0");
  if (r === Q)
    return t.ONE;
  if (r === V)
    return e;
  let n = t.ONE, i = e;
  for (; r > Q; )
    r & V && (n = t.mul(n, i)), i = t.sqr(i), r >>= V;
  return n;
}
function zc(t, e) {
  const r = new Array(e.length), n = e.reduce((s, o, a) => t.is0(o) ? s : (r[a] = s, t.mul(s, o)), t.ONE), i = t.inv(n);
  return e.reduceRight((s, o, a) => t.is0(o) ? s : (r[a] = t.mul(s, r[a]), t.mul(s, o)), i), r;
}
function Wn(t, e) {
  const r = e !== void 0 ? e : t.toString(2).length, n = Math.ceil(r / 8);
  return { nBitLength: r, nByteLength: n };
}
function Fc(t, e, r = !1, n = {}) {
  if (t <= Q)
    throw new Error(`Expected Fp ORDER > 0, got ${t}`);
  const { nBitLength: i, nByteLength: s } = Wn(t, e);
  if (s > 2048)
    throw new Error("Field lengths over 2048 bytes are not supported");
  const o = Hc(t), a = Object.freeze({
    ORDER: t,
    BITS: i,
    BYTES: s,
    MASK: Kn(i),
    ZERO: Q,
    ONE: V,
    create: (c) => J(c, t),
    isValid: (c) => {
      if (typeof c != "bigint")
        throw new Error(`Invalid field element: expected bigint, got ${typeof c}`);
      return Q <= c && c < t;
    },
    is0: (c) => c === Q,
    isOdd: (c) => (c & V) === V,
    neg: (c) => J(-c, t),
    eql: (c, l) => c === l,
    sqr: (c) => J(c * c, t),
    add: (c, l) => J(c + l, t),
    sub: (c, l) => J(c - l, t),
    mul: (c, l) => J(c * l, t),
    pow: (c, l) => Dc(a, c, l),
    div: (c, l) => J(c * In(l, t), t),
    sqrN: (c) => c * c,
    addN: (c, l) => c + l,
    subN: (c, l) => c - l,
    mulN: (c, l) => c * l,
    inv: (c) => In(c, t),
    sqrt: n.sqrt || ((c) => o(a, c)),
    invertBatch: (c) => zc(a, c),
    cmov: (c, l, f) => f ? l : c,
    toBytes: (c) => r ? ns(c, s) : et(c, s),
    fromBytes: (c) => {
      if (c.length !== s)
        throw new Error(`Fp.fromBytes: expected ${s}, got ${c.length}`);
      return r ? Fn(c) : le(c);
    }
  });
  return Object.freeze(a);
}
function Kc(t, e, r = !1) {
  t = ee("privateHash", t);
  const n = t.length, i = Wn(e).nByteLength + 8;
  if (i < 24 || n < i || n > 1024)
    throw new Error(`hashToPrivateScalar: expected ${i}-1024 bytes of input, got ${n}`);
  const s = r ? Fn(t) : le(t);
  return J(s, e - V) + V;
}
/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
const Wc = BigInt(0), on = BigInt(1);
function Vc(t, e) {
  const r = (i, s) => {
    const o = s.negate();
    return i ? o : s;
  }, n = (i) => {
    const s = Math.ceil(e / i) + 1, o = 2 ** (i - 1);
    return { windows: s, windowSize: o };
  };
  return {
    constTimeNegate: r,
    unsafeLadder(i, s) {
      let o = t.ZERO, a = i;
      for (; s > Wc; )
        s & on && (o = o.add(a)), a = a.double(), s >>= on;
      return o;
    },
    precomputeWindow(i, s) {
      const { windows: o, windowSize: a } = n(s), c = [];
      let l = i, f = l;
      for (let u = 0; u < o; u++) {
        f = l, c.push(f);
        for (let h = 1; h < a; h++)
          f = f.add(l), c.push(f);
        l = f.double();
      }
      return c;
    },
    wNAF(i, s, o) {
      const { windows: a, windowSize: c } = n(i);
      let l = t.ZERO, f = t.BASE;
      const u = BigInt(2 ** i - 1), h = 2 ** i, d = BigInt(i);
      for (let p = 0; p < a; p++) {
        const y = p * c;
        let g = Number(o & u);
        o >>= d, g > c && (g -= h, o += on);
        const v = y, _ = y + Math.abs(g) - 1, m = p % 2 !== 0, C = g < 0;
        g === 0 ? f = f.add(r(m, s[v])) : l = l.add(r(C, s[_]));
      }
      return { p: l, f };
    },
    wNAFCached(i, s, o, a) {
      const c = i._WINDOW_SIZE || 1;
      let l = s.get(i);
      return l || (l = this.precomputeWindow(i, c), c !== 1 && s.set(i, a(l))), this.wNAF(c, l, o);
    }
  };
}
function ss(t) {
  return os(t.Fp), kt(t, {
    n: "bigint",
    h: "bigint",
    Gx: "field",
    Gy: "field"
  }, {
    nBitLength: "isSafeInteger",
    nByteLength: "isSafeInteger"
  }), Object.freeze({
    ...Wn(t.n, t.nBitLength),
    ...t,
    p: t.Fp.ORDER
  });
}
/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
function Gc(t) {
  const e = ss(t);
  kt(e, {
    a: "field",
    b: "field"
  }, {
    allowedPrivateKeyLengths: "array",
    wrapPrivateKey: "boolean",
    isTorsionFree: "function",
    clearCofactor: "function",
    allowInfinityPoint: "boolean",
    fromBytes: "function",
    toBytes: "function"
  });
  const { endo: r, Fp: n, a: i } = e;
  if (r) {
    if (!n.eql(i, n.ZERO))
      throw new Error("Endomorphism can only be defined for Koblitz curves that have a=0");
    if (typeof r != "object" || typeof r.beta != "bigint" || typeof r.splitScalar != "function")
      throw new Error("Expected endomorphism with beta: bigint and splitScalar: function");
  }
  return Object.freeze({ ...e });
}
const { bytesToNumberBE: Zc, hexToBytes: Yc } = qc, lt = {
  Err: class extends Error {
    constructor(e = "") {
      super(e);
    }
  },
  _parseInt(t) {
    const { Err: e } = lt;
    if (t.length < 2 || t[0] !== 2)
      throw new e("Invalid signature integer tag");
    const r = t[1], n = t.subarray(2, r + 2);
    if (!r || n.length !== r)
      throw new e("Invalid signature integer: wrong length");
    if (n[0] & 128)
      throw new e("Invalid signature integer: negative");
    if (n[0] === 0 && !(n[1] & 128))
      throw new e("Invalid signature integer: unnecessary leading zero");
    return { d: Zc(n), l: t.subarray(r + 2) };
  },
  toSig(t) {
    const { Err: e } = lt, r = typeof t == "string" ? Yc(t) : t;
    if (!(r instanceof Uint8Array))
      throw new Error("ui8a expected");
    let n = r.length;
    if (n < 2 || r[0] != 48)
      throw new e("Invalid signature tag");
    if (r[1] !== n - 2)
      throw new e("Invalid signature: incorrect length");
    const { d: i, l: s } = lt._parseInt(r.subarray(2)), { d: o, l: a } = lt._parseInt(s);
    if (a.length)
      throw new e("Invalid signature: left bytes after parsing");
    return { r: i, s: o };
  },
  hexFromSig(t) {
    const e = (l) => Number.parseInt(l[0], 16) & 8 ? "00" + l : l, r = (l) => {
      const f = l.toString(16);
      return f.length & 1 ? `0${f}` : f;
    }, n = e(r(t.s)), i = e(r(t.r)), s = n.length / 2, o = i.length / 2, a = r(s), c = r(o);
    return `30${r(o + s + 4)}02${c}${i}02${a}${n}`;
  }
}, ke = BigInt(0), Y = BigInt(1), $e = BigInt(2), Ar = BigInt(3), Hi = BigInt(4);
function Jc(t) {
  const e = Gc(t), { Fp: r } = e, n = e.toBytes || ((p, y, g) => {
    const v = y.toAffine();
    return he(Uint8Array.from([4]), r.toBytes(v.x), r.toBytes(v.y));
  }), i = e.fromBytes || ((p) => {
    const y = p.subarray(1), g = r.fromBytes(y.subarray(0, r.BYTES)), v = r.fromBytes(y.subarray(r.BYTES, 2 * r.BYTES));
    return { x: g, y: v };
  });
  function s(p) {
    const { a: y, b: g } = e, v = r.sqr(p), _ = r.mul(v, p);
    return r.add(r.add(_, r.mul(p, y)), g);
  }
  if (!r.eql(r.sqr(e.Gy), s(e.Gx)))
    throw new Error("bad generator point: equation left != right");
  function o(p) {
    return typeof p == "bigint" && ke < p && p < e.n;
  }
  function a(p) {
    if (!o(p))
      throw new Error("Expected valid bigint: 0 < bigint < curve.n");
  }
  function c(p) {
    const { allowedPrivateKeyLengths: y, nByteLength: g, wrapPrivateKey: v, n: _ } = e;
    if (y && typeof p != "bigint") {
      if (p instanceof Uint8Array && (p = vt(p)), typeof p != "string" || !y.includes(p.length))
        throw new Error("Invalid key");
      p = p.padStart(g * 2, "0");
    }
    let m;
    try {
      m = typeof p == "bigint" ? p : le(ee("private key", p, g));
    } catch {
      throw new Error(`private key must be ${g} bytes, hex or bigint, not ${typeof p}`);
    }
    return v && (m = J(m, _)), a(m), m;
  }
  const l = /* @__PURE__ */ new Map();
  function f(p) {
    if (!(p instanceof u))
      throw new Error("ProjectivePoint expected");
  }
  class u {
    constructor(y, g, v) {
      if (this.px = y, this.py = g, this.pz = v, y == null || !r.isValid(y))
        throw new Error("x required");
      if (g == null || !r.isValid(g))
        throw new Error("y required");
      if (v == null || !r.isValid(v))
        throw new Error("z required");
    }
    static fromAffine(y) {
      const { x: g, y: v } = y || {};
      if (!y || !r.isValid(g) || !r.isValid(v))
        throw new Error("invalid affine point");
      if (y instanceof u)
        throw new Error("projective point not allowed");
      const _ = (m) => r.eql(m, r.ZERO);
      return _(g) && _(v) ? u.ZERO : new u(g, v, r.ONE);
    }
    get x() {
      return this.toAffine().x;
    }
    get y() {
      return this.toAffine().y;
    }
    static normalizeZ(y) {
      const g = r.invertBatch(y.map((v) => v.pz));
      return y.map((v, _) => v.toAffine(g[_])).map(u.fromAffine);
    }
    static fromHex(y) {
      const g = u.fromAffine(i(ee("pointHex", y)));
      return g.assertValidity(), g;
    }
    static fromPrivateKey(y) {
      return u.BASE.multiply(c(y));
    }
    _setWindowSize(y) {
      this._WINDOW_SIZE = y, l.delete(this);
    }
    assertValidity() {
      if (this.is0()) {
        if (e.allowInfinityPoint)
          return;
        throw new Error("bad point: ZERO");
      }
      const { x: y, y: g } = this.toAffine();
      if (!r.isValid(y) || !r.isValid(g))
        throw new Error("bad point: x or y not FE");
      const v = r.sqr(g), _ = s(y);
      if (!r.eql(v, _))
        throw new Error("bad point: equation left != right");
      if (!this.isTorsionFree())
        throw new Error("bad point: not in prime-order subgroup");
    }
    hasEvenY() {
      const { y } = this.toAffine();
      if (r.isOdd)
        return !r.isOdd(y);
      throw new Error("Field doesn't support isOdd");
    }
    equals(y) {
      f(y);
      const { px: g, py: v, pz: _ } = this, { px: m, py: C, pz: O } = y, w = r.eql(r.mul(g, O), r.mul(m, _)), x = r.eql(r.mul(v, O), r.mul(C, _));
      return w && x;
    }
    negate() {
      return new u(this.px, r.neg(this.py), this.pz);
    }
    double() {
      const { a: y, b: g } = e, v = r.mul(g, Ar), { px: _, py: m, pz: C } = this;
      let O = r.ZERO, w = r.ZERO, x = r.ZERO, A = r.mul(_, _), B = r.mul(m, m), L = r.mul(C, C), P = r.mul(_, m);
      return P = r.add(P, P), x = r.mul(_, C), x = r.add(x, x), O = r.mul(y, x), w = r.mul(v, L), w = r.add(O, w), O = r.sub(B, w), w = r.add(B, w), w = r.mul(O, w), O = r.mul(P, O), x = r.mul(v, x), L = r.mul(y, L), P = r.sub(A, L), P = r.mul(y, P), P = r.add(P, x), x = r.add(A, A), A = r.add(x, A), A = r.add(A, L), A = r.mul(A, P), w = r.add(w, A), L = r.mul(m, C), L = r.add(L, L), A = r.mul(L, P), O = r.sub(O, A), x = r.mul(L, B), x = r.add(x, x), x = r.add(x, x), new u(O, w, x);
    }
    add(y) {
      f(y);
      const { px: g, py: v, pz: _ } = this, { px: m, py: C, pz: O } = y;
      let w = r.ZERO, x = r.ZERO, A = r.ZERO;
      const B = e.a, L = r.mul(e.b, Ar);
      let P = r.mul(g, m), F = r.mul(v, C), z = r.mul(_, O), G = r.add(g, v), E = r.add(m, C);
      G = r.mul(G, E), E = r.add(P, F), G = r.sub(G, E), E = r.add(g, _);
      let R = r.add(m, O);
      return E = r.mul(E, R), R = r.add(P, z), E = r.sub(E, R), R = r.add(v, _), w = r.add(C, O), R = r.mul(R, w), w = r.add(F, z), R = r.sub(R, w), A = r.mul(B, E), w = r.mul(L, z), A = r.add(w, A), w = r.sub(F, A), A = r.add(F, A), x = r.mul(w, A), F = r.add(P, P), F = r.add(F, P), z = r.mul(B, z), E = r.mul(L, E), F = r.add(F, z), z = r.sub(P, z), z = r.mul(B, z), E = r.add(E, z), P = r.mul(F, E), x = r.add(x, P), P = r.mul(R, E), w = r.mul(G, w), w = r.sub(w, P), P = r.mul(G, F), A = r.mul(R, A), A = r.add(A, P), new u(w, x, A);
    }
    subtract(y) {
      return this.add(y.negate());
    }
    is0() {
      return this.equals(u.ZERO);
    }
    wNAF(y) {
      return d.wNAFCached(this, l, y, (g) => {
        const v = r.invertBatch(g.map((_) => _.pz));
        return g.map((_, m) => _.toAffine(v[m])).map(u.fromAffine);
      });
    }
    multiplyUnsafe(y) {
      const g = u.ZERO;
      if (y === ke)
        return g;
      if (a(y), y === Y)
        return this;
      const { endo: v } = e;
      if (!v)
        return d.unsafeLadder(this, y);
      let { k1neg: _, k1: m, k2neg: C, k2: O } = v.splitScalar(y), w = g, x = g, A = this;
      for (; m > ke || O > ke; )
        m & Y && (w = w.add(A)), O & Y && (x = x.add(A)), A = A.double(), m >>= Y, O >>= Y;
      return _ && (w = w.negate()), C && (x = x.negate()), x = new u(r.mul(x.px, v.beta), x.py, x.pz), w.add(x);
    }
    multiply(y) {
      a(y);
      let g = y, v, _;
      const { endo: m } = e;
      if (m) {
        const { k1neg: C, k1: O, k2neg: w, k2: x } = m.splitScalar(g);
        let { p: A, f: B } = this.wNAF(O), { p: L, f: P } = this.wNAF(x);
        A = d.constTimeNegate(C, A), L = d.constTimeNegate(w, L), L = new u(r.mul(L.px, m.beta), L.py, L.pz), v = A.add(L), _ = B.add(P);
      } else {
        const { p: C, f: O } = this.wNAF(g);
        v = C, _ = O;
      }
      return u.normalizeZ([v, _])[0];
    }
    multiplyAndAddUnsafe(y, g, v) {
      const _ = u.BASE, m = (O, w) => w === ke || w === Y || !O.equals(_) ? O.multiplyUnsafe(w) : O.multiply(w), C = m(this, g).add(m(y, v));
      return C.is0() ? void 0 : C;
    }
    toAffine(y) {
      const { px: g, py: v, pz: _ } = this, m = this.is0();
      y == null && (y = m ? r.ONE : r.inv(_));
      const C = r.mul(g, y), O = r.mul(v, y), w = r.mul(_, y);
      if (m)
        return { x: r.ZERO, y: r.ZERO };
      if (!r.eql(w, r.ONE))
        throw new Error("invZ was invalid");
      return { x: C, y: O };
    }
    isTorsionFree() {
      const { h: y, isTorsionFree: g } = e;
      if (y === Y)
        return !0;
      if (g)
        return g(u, this);
      throw new Error("isTorsionFree() has not been declared for the elliptic curve");
    }
    clearCofactor() {
      const { h: y, clearCofactor: g } = e;
      return y === Y ? this : g ? g(u, this) : this.multiplyUnsafe(e.h);
    }
    toRawBytes(y = !0) {
      return this.assertValidity(), n(u, this, y);
    }
    toHex(y = !0) {
      return vt(this.toRawBytes(y));
    }
  }
  u.BASE = new u(e.Gx, e.Gy, r.ONE), u.ZERO = new u(r.ZERO, r.ONE, r.ZERO);
  const h = e.nBitLength, d = Vc(u, e.endo ? Math.ceil(h / 2) : h);
  return {
    CURVE: e,
    ProjectivePoint: u,
    normPrivateKeyToScalar: c,
    weierstrassEquation: s,
    isWithinCurveOrder: o
  };
}
function Xc(t) {
  const e = ss(t);
  return kt(e, {
    hash: "hash",
    hmac: "function",
    randomBytes: "function"
  }, {
    bits2int: "function",
    bits2int_modN: "function",
    lowS: "boolean"
  }), Object.freeze({ lowS: !0, ...e });
}
function Qc(t) {
  const e = Xc(t), { Fp: r, n } = e, i = r.BYTES + 1, s = 2 * r.BYTES + 1;
  function o(E) {
    return ke < E && E < r.ORDER;
  }
  function a(E) {
    return J(E, n);
  }
  function c(E) {
    return In(E, n);
  }
  const { ProjectivePoint: l, normPrivateKeyToScalar: f, weierstrassEquation: u, isWithinCurveOrder: h } = Jc({
    ...e,
    toBytes(E, R, q) {
      const H = R.toAffine(), D = r.toBytes(H.x), X = he;
      return q ? X(Uint8Array.from([R.hasEvenY() ? 2 : 3]), D) : X(Uint8Array.from([4]), D, r.toBytes(H.y));
    },
    fromBytes(E) {
      const R = E.length, q = E[0], H = E.subarray(1);
      if (R === i && (q === 2 || q === 3)) {
        const D = le(H);
        if (!o(D))
          throw new Error("Point is not on curve");
        const X = u(D);
        let oe = r.sqrt(X);
        const re = (oe & Y) === Y;
        return (q & 1) === 1 !== re && (oe = r.neg(oe)), { x: D, y: oe };
      } else if (R === s && q === 4) {
        const D = r.fromBytes(H.subarray(0, r.BYTES)), X = r.fromBytes(H.subarray(r.BYTES, 2 * r.BYTES));
        return { x: D, y: X };
      } else
        throw new Error(`Point of length ${R} was invalid. Expected ${i} compressed bytes or ${s} uncompressed bytes`);
    }
  }), d = (E) => vt(et(E, e.nByteLength));
  function p(E) {
    const R = n >> Y;
    return E > R;
  }
  function y(E) {
    return p(E) ? a(-E) : E;
  }
  const g = (E, R, q) => le(E.slice(R, q));
  class v {
    constructor(R, q, H) {
      this.r = R, this.s = q, this.recovery = H, this.assertValidity();
    }
    static fromCompact(R) {
      const q = e.nByteLength;
      return R = ee("compactSignature", R, q * 2), new v(g(R, 0, q), g(R, q, 2 * q));
    }
    static fromDER(R) {
      const { r: q, s: H } = lt.toSig(ee("DER", R));
      return new v(q, H);
    }
    assertValidity() {
      if (!h(this.r))
        throw new Error("r must be 0 < r < CURVE.n");
      if (!h(this.s))
        throw new Error("s must be 0 < s < CURVE.n");
    }
    addRecoveryBit(R) {
      return new v(this.r, this.s, R);
    }
    recoverPublicKey(R) {
      const { r: q, s: H, recovery: D } = this, X = x(ee("msgHash", R));
      if (D == null || ![0, 1, 2, 3].includes(D))
        throw new Error("recovery id invalid");
      const oe = D === 2 || D === 3 ? q + e.n : q;
      if (oe >= r.ORDER)
        throw new Error("recovery id 2 or 3 invalid");
      const re = (D & 1) === 0 ? "02" : "03", _e = l.fromHex(re + d(oe)), Oe = c(oe), Ue = a(-X * Oe), Pe = a(H * Oe), ye = l.BASE.multiplyAndAddUnsafe(_e, Ue, Pe);
      if (!ye)
        throw new Error("point at infinify");
      return ye.assertValidity(), ye;
    }
    hasHighS() {
      return p(this.s);
    }
    normalizeS() {
      return this.hasHighS() ? new v(this.r, a(-this.s), this.recovery) : this;
    }
    toDERRawBytes() {
      return wt(this.toDERHex());
    }
    toDERHex() {
      return lt.hexFromSig({ r: this.r, s: this.s });
    }
    toCompactRawBytes() {
      return wt(this.toCompactHex());
    }
    toCompactHex() {
      return d(this.r) + d(this.s);
    }
  }
  const _ = {
    isValidPrivateKey(E) {
      try {
        return f(E), !0;
      } catch {
        return !1;
      }
    },
    normPrivateKeyToScalar: f,
    randomPrivateKey: () => {
      const E = e.randomBytes(r.BYTES + 8), R = Kc(E, n);
      return et(R, e.nByteLength);
    },
    precompute(E = 8, R = l.BASE) {
      return R._setWindowSize(E), R.multiply(BigInt(3)), R;
    }
  };
  function m(E, R = !0) {
    return l.fromPrivateKey(E).toRawBytes(R);
  }
  function C(E) {
    const R = E instanceof Uint8Array, q = typeof E == "string", H = (R || q) && E.length;
    return R ? H === i || H === s : q ? H === 2 * i || H === 2 * s : E instanceof l;
  }
  function O(E, R, q = !0) {
    if (C(E))
      throw new Error("first arg must be private key");
    if (!C(R))
      throw new Error("second arg must be public key");
    return l.fromHex(R).multiply(f(E)).toRawBytes(q);
  }
  const w = e.bits2int || function(E) {
    const R = le(E), q = E.length * 8 - e.nBitLength;
    return q > 0 ? R >> BigInt(q) : R;
  }, x = e.bits2int_modN || function(E) {
    return a(w(E));
  }, A = Kn(e.nBitLength);
  function B(E) {
    if (typeof E != "bigint")
      throw new Error("bigint expected");
    if (!(ke <= E && E < A))
      throw new Error(`bigint expected < 2^${e.nBitLength}`);
    return et(E, e.nByteLength);
  }
  function L(E, R, q = P) {
    if (["recovered", "canonical"].some((me) => me in q))
      throw new Error("sign() legacy options not supported");
    const { hash: H, randomBytes: D } = e;
    let { lowS: X, prehash: oe, extraEntropy: re } = q;
    X == null && (X = !0), E = ee("msgHash", E), oe && (E = ee("prehashed msgHash", H(E)));
    const _e = x(E), Oe = f(R), Ue = [B(Oe), B(_e)];
    if (re != null) {
      const me = re === !0 ? D(r.BYTES) : re;
      Ue.push(ee("extraEntropy", me, r.BYTES));
    }
    const Pe = he(...Ue), ye = _e;
    function je(me) {
      const xe = w(me);
      if (!h(xe))
        return;
      const lr = c(xe), Be = l.BASE.multiply(xe).toAffine(), fe = a(Be.x);
      if (fe === ke)
        return;
      const He = a(lr * a(ye + fe * Oe));
      if (He === ke)
        return;
      let it = (Be.x === fe ? 0 : 2) | Number(Be.y & Y), ot = He;
      return X && p(He) && (ot = y(He), it ^= 1), new v(fe, ot, it);
    }
    return { seed: Pe, k2sig: je };
  }
  const P = { lowS: e.lowS, prehash: !1 }, F = { lowS: e.lowS, prehash: !1 };
  function z(E, R, q = P) {
    const { seed: H, k2sig: D } = L(E, R, q);
    return is(e.hash.outputLen, e.nByteLength, e.hmac)(H, D);
  }
  l.BASE._setWindowSize(8);
  function G(E, R, q, H = F) {
    var Be;
    const D = E;
    if (R = ee("msgHash", R), q = ee("publicKey", q), "strict" in H)
      throw new Error("options.strict was renamed to lowS");
    const { lowS: X, prehash: oe } = H;
    let re, _e;
    try {
      if (typeof D == "string" || D instanceof Uint8Array)
        try {
          re = v.fromDER(D);
        } catch (fe) {
          if (!(fe instanceof lt.Err))
            throw fe;
          re = v.fromCompact(D);
        }
      else if (typeof D == "object" && typeof D.r == "bigint" && typeof D.s == "bigint") {
        const { r: fe, s: He } = D;
        re = new v(fe, He);
      } else
        throw new Error("PARSE");
      _e = l.fromHex(q);
    } catch (fe) {
      if (fe.message === "PARSE")
        throw new Error("signature must be Signature instance, Uint8Array or hex string");
      return !1;
    }
    if (X && re.hasHighS())
      return !1;
    oe && (R = e.hash(R));
    const { r: Oe, s: Ue } = re, Pe = x(R), ye = c(Ue), je = a(Pe * ye), me = a(Oe * ye), xe = (Be = l.BASE.multiplyAndAddUnsafe(_e, je, me)) == null ? void 0 : Be.toAffine();
    return xe ? a(xe.x) === Oe : !1;
  }
  return {
    CURVE: e,
    getPublicKey: m,
    getSharedSecret: O,
    sign: z,
    verify: G,
    ProjectivePoint: l,
    Signature: v,
    utils: _
  };
}
function eu(t, e) {
  const r = t.ORDER;
  let n = ke;
  for (let h = r - Y; h % $e === ke; h /= $e)
    n += Y;
  const i = n, s = (r - Y) / $e ** i, o = (s - Y) / $e, a = $e ** i - Y, c = $e ** (i - Y), l = t.pow(e, s), f = t.pow(e, (s + Y) / $e);
  let u = (h, d) => {
    let p = l, y = t.pow(d, a), g = t.sqr(y);
    g = t.mul(g, d);
    let v = t.mul(h, g);
    v = t.pow(v, o), v = t.mul(v, y), y = t.mul(v, d), g = t.mul(v, h);
    let _ = t.mul(g, y);
    v = t.pow(_, c);
    let m = t.eql(v, t.ONE);
    y = t.mul(g, f), v = t.mul(_, p), g = t.cmov(y, g, m), _ = t.cmov(v, _, m);
    for (let C = i; C > Y; C--) {
      let O = $e ** (C - $e), w = t.pow(_, O);
      const x = t.eql(w, t.ONE);
      y = t.mul(g, p), p = t.mul(p, p), w = t.mul(_, p), g = t.cmov(y, g, x), _ = t.cmov(w, _, x);
    }
    return { isValid: m, value: g };
  };
  if (t.ORDER % Hi === Ar) {
    const h = (t.ORDER - Ar) / Hi, d = t.sqrt(t.neg(e));
    u = (p, y) => {
      let g = t.sqr(y);
      const v = t.mul(p, y);
      g = t.mul(g, v);
      let _ = t.pow(g, h);
      _ = t.mul(_, v);
      const m = t.mul(_, d), C = t.mul(t.sqr(_), y), O = t.eql(C, p);
      let w = t.cmov(m, _, O);
      return { isValid: O, value: w };
    };
  }
  return u;
}
function tu(t, e) {
  if (os(t), !t.isValid(e.A) || !t.isValid(e.B) || !t.isValid(e.Z))
    throw new Error("mapToCurveSimpleSWU: invalid opts");
  const r = eu(t, e.Z);
  if (!t.isOdd)
    throw new Error("Fp.isOdd is not implemented!");
  return (n) => {
    let i, s, o, a, c, l, f, u;
    i = t.sqr(n), i = t.mul(i, e.Z), s = t.sqr(i), s = t.add(s, i), o = t.add(s, t.ONE), o = t.mul(o, e.B), a = t.cmov(e.Z, t.neg(s), !t.eql(s, t.ZERO)), a = t.mul(a, e.A), s = t.sqr(o), l = t.sqr(a), c = t.mul(l, e.A), s = t.add(s, c), s = t.mul(s, o), l = t.mul(l, a), c = t.mul(l, e.B), s = t.add(s, c), f = t.mul(i, o);
    const { isValid: h, value: d } = r(s, l);
    u = t.mul(i, n), u = t.mul(u, d), f = t.cmov(f, o, h), u = t.cmov(u, d, h);
    const p = t.isOdd(n) === t.isOdd(u);
    return u = t.cmov(t.neg(u), u, p), f = t.div(f, a), { x: f, y: u };
  };
}
function ru(t) {
  if (t instanceof Uint8Array)
    return t;
  if (typeof t == "string")
    return qr(t);
  throw new Error("DST must be Uint8Array or string");
}
const nu = le;
function Ze(t, e) {
  if (t < 0 || t >= 1 << 8 * e)
    throw new Error(`bad I2OSP call: value=${t} length=${e}`);
  const r = Array.from({ length: e }).fill(0);
  for (let n = e - 1; n >= 0; n--)
    r[n] = t & 255, t >>>= 8;
  return new Uint8Array(r);
}
function iu(t, e) {
  const r = new Uint8Array(t.length);
  for (let n = 0; n < t.length; n++)
    r[n] = t[n] ^ e[n];
  return r;
}
function tr(t) {
  if (!(t instanceof Uint8Array))
    throw new Error("Uint8Array expected");
}
function Vn(t) {
  if (!Number.isSafeInteger(t))
    throw new Error("number expected");
}
function ou(t, e, r, n) {
  tr(t), tr(e), Vn(r), e.length > 255 && (e = n(he(qr("H2C-OVERSIZE-DST-"), e)));
  const { outputLen: i, blockLen: s } = n, o = Math.ceil(r / i);
  if (o > 255)
    throw new Error("Invalid xmd length");
  const a = he(e, Ze(e.length, 1)), c = Ze(0, s), l = Ze(r, 2), f = new Array(o), u = n(he(c, t, l, Ze(0, 1), a));
  f[0] = n(he(u, Ze(1, 1), a));
  for (let d = 1; d <= o; d++) {
    const p = [iu(u, f[d - 1]), Ze(d + 1, 1), a];
    f[d] = n(he(...p));
  }
  return he(...f).slice(0, r);
}
function su(t, e, r, n, i) {
  if (tr(t), tr(e), Vn(r), e.length > 255) {
    const s = Math.ceil(2 * n / 8);
    e = i.create({ dkLen: s }).update(qr("H2C-OVERSIZE-DST-")).update(e).digest();
  }
  if (r > 65535 || e.length > 255)
    throw new Error("expand_message_xof: invalid lenInBytes");
  return i.create({ dkLen: r }).update(t).update(Ze(r, 2)).update(e).update(Ze(e.length, 1)).digest();
}
function Mi(t, e, r) {
  kt(r, {
    DST: "string",
    p: "bigint",
    m: "isSafeInteger",
    k: "isSafeInteger",
    hash: "hash"
  });
  const { p: n, k: i, m: s, hash: o, expand: a, DST: c } = r;
  tr(t), Vn(e);
  const l = ru(c), f = n.toString(2).length, u = Math.ceil((f + i) / 8), h = e * s * u;
  let d;
  if (a === "xmd")
    d = ou(t, l, h, o);
  else if (a === "xof")
    d = su(t, l, h, i, o);
  else if (a === "_internal_pass")
    d = t;
  else
    throw new Error('expand must be "xmd" or "xof"');
  const p = new Array(e);
  for (let y = 0; y < e; y++) {
    const g = new Array(s);
    for (let v = 0; v < s; v++) {
      const _ = u * (v + y * s), m = d.subarray(_, _ + u);
      g[v] = J(nu(m), n);
    }
    p[y] = g;
  }
  return p;
}
function au(t, e) {
  const r = e.map((n) => Array.from(n).reverse());
  return (n, i) => {
    const [s, o, a, c] = r.map((l) => l.reduce((f, u) => t.add(t.mul(f, n), u)));
    return n = t.div(s, o), i = t.mul(i, t.div(a, c)), { x: n, y: i };
  };
}
function cu(t, e, r) {
  if (typeof e != "function")
    throw new Error("mapToCurve() must be defined");
  return {
    hashToCurve(n, i) {
      const s = Mi(n, 2, { ...r, DST: r.DST, ...i }), o = t.fromAffine(e(s[0])), a = t.fromAffine(e(s[1])), c = o.add(a).clearCofactor();
      return c.assertValidity(), c;
    },
    encodeToCurve(n, i) {
      const s = Mi(n, 1, { ...r, DST: r.encodeDST, ...i }), o = t.fromAffine(e(s[0])).clearCofactor();
      return o.assertValidity(), o;
    }
  };
}
class as extends Jo {
  constructor(e, r) {
    super(), this.finished = !1, this.destroyed = !1, ut.hash(e);
    const n = Dn(r);
    if (this.iHash = e.create(), typeof this.iHash.update != "function")
      throw new TypeError("Expected instance of class which extends utils.Hash");
    this.blockLen = this.iHash.blockLen, this.outputLen = this.iHash.outputLen;
    const i = this.blockLen, s = new Uint8Array(i);
    s.set(n.length > i ? e.create().update(n).digest() : n);
    for (let o = 0; o < s.length; o++)
      s[o] ^= 54;
    this.iHash.update(s), this.oHash = e.create();
    for (let o = 0; o < s.length; o++)
      s[o] ^= 106;
    this.oHash.update(s), s.fill(0);
  }
  update(e) {
    return ut.exists(this), this.iHash.update(e), this;
  }
  digestInto(e) {
    ut.exists(this), ut.bytes(e, this.outputLen), this.finished = !0, this.iHash.digestInto(e), this.oHash.update(e), this.oHash.digestInto(e), this.destroy();
  }
  digest() {
    const e = new Uint8Array(this.oHash.outputLen);
    return this.digestInto(e), e;
  }
  _cloneInto(e) {
    e || (e = Object.create(Object.getPrototypeOf(this), {}));
    const { oHash: r, iHash: n, finished: i, destroyed: s, blockLen: o, outputLen: a } = this;
    return e = e, e.finished = i, e.destroyed = s, e.blockLen = o, e.outputLen = a, e.oHash = r._cloneInto(e.oHash), e.iHash = n._cloneInto(e.iHash), e;
  }
  destroy() {
    this.destroyed = !0, this.oHash.destroy(), this.iHash.destroy();
  }
}
const cs = (t, e, r) => new as(t, e).update(r).digest();
cs.create = (t, e) => new as(t, e);
/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
function uu(t) {
  return {
    hash: t,
    hmac: (e, ...r) => cs(t, e, mc(...r)),
    randomBytes: Qo
  };
}
function lu(t, e) {
  const r = (n) => Qc({ ...t, ...uu(n) });
  return Object.freeze({ ...r(e), create: r });
}
/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
const Nr = BigInt("0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f"), Cr = BigInt("0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141"), us = BigInt(1), Ir = BigInt(2), Di = (t, e) => (t + e / Ir) / e;
function ls(t) {
  const e = Nr, r = BigInt(3), n = BigInt(6), i = BigInt(11), s = BigInt(22), o = BigInt(23), a = BigInt(44), c = BigInt(88), l = t * t * t % e, f = l * l * t % e, u = be(f, r, e) * f % e, h = be(u, r, e) * f % e, d = be(h, Ir, e) * l % e, p = be(d, i, e) * d % e, y = be(p, s, e) * p % e, g = be(y, a, e) * y % e, v = be(g, c, e) * g % e, _ = be(v, a, e) * y % e, m = be(_, r, e) * f % e, C = be(m, o, e) * p % e, O = be(C, n, e) * l % e, w = be(O, Ir, e);
  if (!tt.eql(tt.sqr(w), t))
    throw new Error("Cannot find square root");
  return w;
}
const tt = Fc(Nr, void 0, void 0, { sqrt: ls }), ue = lu({
  a: BigInt(0),
  b: BigInt(7),
  Fp: tt,
  n: Cr,
  Gx: BigInt("55066263022277343669578718895168534326250603453777594175500187360389116729240"),
  Gy: BigInt("32670510020758816978083085130507043184471273380659243275938904335757337482424"),
  h: BigInt(1),
  lowS: !0,
  endo: {
    beta: BigInt("0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee"),
    splitScalar: (t) => {
      const e = Cr, r = BigInt("0x3086d221a7d46bcde86c90e49284eb15"), n = -us * BigInt("0xe4437ed6010e88286f547fa90abfe4c3"), i = BigInt("0x114ca50f7a8e2f3f657c1108d9d44cfd8"), s = r, o = BigInt("0x100000000000000000000000000000000"), a = Di(s * t, e), c = Di(-n * t, e);
      let l = J(t - a * r - c * i, e), f = J(-a * n - c * s, e);
      const u = l > o, h = f > o;
      if (u && (l = e - l), h && (f = e - f), l > o || f > o)
        throw new Error("splitScalar: Endomorphism failed, k=" + t);
      return { k1neg: u, k1: l, k2neg: h, k2: f };
    }
  }
}, Or), Ur = BigInt(0), fs = (t) => typeof t == "bigint" && Ur < t && t < Nr, fu = (t) => typeof t == "bigint" && Ur < t && t < Cr, zi = {};
function Rr(t, ...e) {
  let r = zi[t];
  if (r === void 0) {
    const n = Or(Uint8Array.from(t, (i) => i.charCodeAt(0)));
    r = he(n, n), zi[t] = r;
  }
  return Or(he(r, ...e));
}
const Gn = (t) => t.toRawBytes(!0).slice(1), Rn = (t) => et(t, 32), sn = (t) => J(t, Nr), rr = (t) => J(t, Cr), Zn = ue.ProjectivePoint, hu = (t, e, r) => Zn.BASE.multiplyAndAddUnsafe(t, e, r);
function Tn(t) {
  let e = ue.utils.normPrivateKeyToScalar(t), r = Zn.fromPrivateKey(e);
  return { scalar: r.hasEvenY() ? e : rr(-e), bytes: Gn(r) };
}
function hs(t) {
  if (!fs(t))
    throw new Error("bad x: need 0 < x < p");
  const e = sn(t * t), r = sn(e * t + BigInt(7));
  let n = ls(r);
  n % Ir !== Ur && (n = sn(-n));
  const i = new Zn(t, n, us);
  return i.assertValidity(), i;
}
function ds(...t) {
  return rr(le(Rr("BIP0340/challenge", ...t)));
}
function du(t) {
  return Tn(t).bytes;
}
function pu(t, e, r = Qo(32)) {
  const n = ee("message", t), { bytes: i, scalar: s } = Tn(e), o = ee("auxRand", r, 32), a = Rn(s ^ le(Rr("BIP0340/aux", o))), c = Rr("BIP0340/nonce", a, i, n), l = rr(le(c));
  if (l === Ur)
    throw new Error("sign failed: k is zero");
  const { bytes: f, scalar: u } = Tn(l), h = ds(f, i, n), d = new Uint8Array(64);
  if (d.set(f, 0), d.set(Rn(rr(u + h * s)), 32), !ps(d, n, i))
    throw new Error("sign: Invalid signature produced");
  return d;
}
function ps(t, e, r) {
  const n = ee("signature", t, 64), i = ee("message", e), s = ee("publicKey", r, 32);
  try {
    const o = hs(le(s)), a = le(n.subarray(0, 32));
    if (!fs(a))
      return !1;
    const c = le(n.subarray(32, 64));
    if (!fu(c))
      return !1;
    const l = ds(Rn(a), Gn(o), i), f = hu(o, c, rr(-l));
    return !(!f || !f.hasEvenY() || f.toAffine().x !== a);
  } catch {
    return !1;
  }
}
const St = {
  getPublicKey: du,
  sign: pu,
  verify: ps,
  utils: {
    randomPrivateKey: ue.utils.randomPrivateKey,
    lift_x: hs,
    pointToBytes: Gn,
    numberToBytesBE: et,
    bytesToNumberBE: le,
    taggedHash: Rr,
    mod: J
  }
}, yu = au(tt, [
  [
    "0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa8c7",
    "0x7d3d4c80bc321d5b9f315cea7fd44c5d595d2fc0bf63b92dfff1044f17c6581",
    "0x534c328d23f234e6e2a413deca25caece4506144037c40314ecbd0b53d9dd262",
    "0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa88c"
  ],
  [
    "0xd35771193d94918a9ca34ccbb7b640dd86cd409542f8487d9fe6b745781eb49b",
    "0xedadc6f64383dc1df7c4b2d51b54225406d36b641f5e41bbc52a56612a8c6d14",
    "0x0000000000000000000000000000000000000000000000000000000000000001"
  ],
  [
    "0x4bda12f684bda12f684bda12f684bda12f684bda12f684bda12f684b8e38e23c",
    "0xc75e0c32d5cb7c0fa9d0a54b12a0a6d5647ab046d686da6fdffc90fc201d71a3",
    "0x29a6194691f91a73715209ef6512e576722830a201be2018a765e85a9ecee931",
    "0x2f684bda12f684bda12f684bda12f684bda12f684bda12f684bda12f38e38d84"
  ],
  [
    "0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffff93b",
    "0x7a06534bb8bdb49fd5e9e6632722c2989467c1bfc8e8d978dfb425d2685c2573",
    "0x6484aa716545ca2cf3a70c3fa8fe337e0a3d21162f0d6299a7bf8192bfd2a76f",
    "0x0000000000000000000000000000000000000000000000000000000000000001"
  ]
].map((t) => t.map((e) => BigInt(e)))), gu = tu(tt, {
  A: BigInt("0x3f8731abdd661adca08a5558f0f5d272e953d363cb6f0e5d405447c01a444533"),
  B: BigInt("1771"),
  Z: tt.create(BigInt("-11"))
});
cu(ue.ProjectivePoint, (t) => {
  const { x: e, y: r } = gu(tt.create(t[0]));
  return yu(e, r);
}, {
  DST: "secp256k1_XMD:SHA-256_SSWU_RO_",
  encodeDST: "secp256k1_XMD:SHA-256_SSWU_NU_",
  p: tt.ORDER,
  m: 1,
  k: 128,
  expand: "xmd",
  hash: Or
});
const an = typeof globalThis == "object" && "crypto" in globalThis ? globalThis.crypto : void 0;
/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */
const cn = (t) => new DataView(t.buffer, t.byteOffset, t.byteLength), Ce = (t, e) => t << 32 - e | t >>> e, bu = new Uint8Array(new Uint32Array([287454020]).buffer)[0] === 68;
if (!bu)
  throw new Error("Non little-endian hardware is not supported");
const vu = Array.from({ length: 256 }, (t, e) => e.toString(16).padStart(2, "0"));
function ve(t) {
  if (!(t instanceof Uint8Array))
    throw new Error("Uint8Array expected");
  let e = "";
  for (let r = 0; r < t.length; r++)
    e += vu[t[r]];
  return e;
}
function _t(t) {
  if (typeof t != "string")
    throw new TypeError("hexToBytes: expected string, got " + typeof t);
  if (t.length % 2)
    throw new Error("hexToBytes: received invalid unpadded hex");
  const e = new Uint8Array(t.length / 2);
  for (let r = 0; r < e.length; r++) {
    const n = r * 2, i = t.slice(n, n + 2), s = Number.parseInt(i, 16);
    if (Number.isNaN(s) || s < 0)
      throw new Error("Invalid byte sequence");
    e[r] = s;
  }
  return e;
}
function wu(t) {
  if (typeof t != "string")
    throw new TypeError(`utf8ToBytes expected string, got ${typeof t}`);
  return new TextEncoder().encode(t);
}
function ys(t) {
  if (typeof t == "string" && (t = wu(t)), !(t instanceof Uint8Array))
    throw new TypeError(`Expected input type is Uint8Array (got ${typeof t})`);
  return t;
}
function _u(...t) {
  if (!t.every((n) => n instanceof Uint8Array))
    throw new Error("Uint8Array list expected");
  if (t.length === 1)
    return t[0];
  const e = t.reduce((n, i) => n + i.length, 0), r = new Uint8Array(e);
  for (let n = 0, i = 0; n < t.length; n++) {
    const s = t[n];
    r.set(s, i), i += s.length;
  }
  return r;
}
class mu {
  clone() {
    return this._cloneInto();
  }
}
function gs(t) {
  const e = (n) => t().update(ys(n)).digest(), r = t();
  return e.outputLen = r.outputLen, e.blockLen = r.blockLen, e.create = () => t(), e;
}
function xu(t = 32) {
  if (an && typeof an.getRandomValues == "function")
    return an.getRandomValues(new Uint8Array(t));
  throw new Error("crypto.getRandomValues must be defined");
}
function Pn(t) {
  if (!Number.isSafeInteger(t) || t < 0)
    throw new Error(`Wrong positive integer: ${t}`);
}
function Eu(t) {
  if (typeof t != "boolean")
    throw new Error(`Expected boolean, not ${t}`);
}
function bs(t, ...e) {
  if (!(t instanceof Uint8Array))
    throw new TypeError("Expected Uint8Array");
  if (e.length > 0 && !e.includes(t.length))
    throw new TypeError(`Expected Uint8Array of length ${e}, not of length=${t.length}`);
}
function ku(t) {
  if (typeof t != "function" || typeof t.create != "function")
    throw new Error("Hash should be wrapped by utils.wrapConstructor");
  Pn(t.outputLen), Pn(t.blockLen);
}
function Su(t, e = !0) {
  if (t.destroyed)
    throw new Error("Hash instance has been destroyed");
  if (e && t.finished)
    throw new Error("Hash#digest() has already been called");
}
function Ou(t, e) {
  bs(t);
  const r = e.outputLen;
  if (t.length < r)
    throw new Error(`digestInto() expects output buffer of length at least ${r}`);
}
const un = {
  number: Pn,
  bool: Eu,
  bytes: bs,
  hash: ku,
  exists: Su,
  output: Ou
};
function Au(t, e, r, n) {
  if (typeof t.setBigUint64 == "function")
    return t.setBigUint64(e, r, n);
  const i = BigInt(32), s = BigInt(4294967295), o = Number(r >> i & s), a = Number(r & s), c = n ? 4 : 0, l = n ? 0 : 4;
  t.setUint32(e + c, o, n), t.setUint32(e + l, a, n);
}
class Cu extends mu {
  constructor(e, r, n, i) {
    super(), this.blockLen = e, this.outputLen = r, this.padOffset = n, this.isLE = i, this.finished = !1, this.length = 0, this.pos = 0, this.destroyed = !1, this.buffer = new Uint8Array(e), this.view = cn(this.buffer);
  }
  update(e) {
    un.exists(this);
    const { view: r, buffer: n, blockLen: i } = this;
    e = ys(e);
    const s = e.length;
    for (let o = 0; o < s; ) {
      const a = Math.min(i - this.pos, s - o);
      if (a === i) {
        const c = cn(e);
        for (; i <= s - o; o += i)
          this.process(c, o);
        continue;
      }
      n.set(e.subarray(o, o + a), this.pos), this.pos += a, o += a, this.pos === i && (this.process(r, 0), this.pos = 0);
    }
    return this.length += e.length, this.roundClean(), this;
  }
  digestInto(e) {
    un.exists(this), un.output(e, this), this.finished = !0;
    const { buffer: r, view: n, blockLen: i, isLE: s } = this;
    let { pos: o } = this;
    r[o++] = 128, this.buffer.subarray(o).fill(0), this.padOffset > i - o && (this.process(n, 0), o = 0);
    for (let u = o; u < i; u++)
      r[u] = 0;
    Au(n, i - 8, BigInt(this.length * 8), s), this.process(n, 0);
    const a = cn(e), c = this.outputLen;
    if (c % 4)
      throw new Error("_sha2: outputLen should be aligned to 32bit");
    const l = c / 4, f = this.get();
    if (l > f.length)
      throw new Error("_sha2: outputLen bigger than state");
    for (let u = 0; u < l; u++)
      a.setUint32(4 * u, f[u], s);
  }
  digest() {
    const { buffer: e, outputLen: r } = this;
    this.digestInto(e);
    const n = e.slice(0, r);
    return this.destroy(), n;
  }
  _cloneInto(e) {
    e || (e = new this.constructor()), e.set(...this.get());
    const { blockLen: r, buffer: n, length: i, finished: s, destroyed: o, pos: a } = this;
    return e.length = i, e.pos = a, e.finished = s, e.destroyed = o, i % r && e.buffer.set(n), e;
  }
}
const Iu = (t, e, r) => t & e ^ ~t & r, Ru = (t, e, r) => t & e ^ t & r ^ e & r, Tu = new Uint32Array([
  1116352408,
  1899447441,
  3049323471,
  3921009573,
  961987163,
  1508970993,
  2453635748,
  2870763221,
  3624381080,
  310598401,
  607225278,
  1426881987,
  1925078388,
  2162078206,
  2614888103,
  3248222580,
  3835390401,
  4022224774,
  264347078,
  604807628,
  770255983,
  1249150122,
  1555081692,
  1996064986,
  2554220882,
  2821834349,
  2952996808,
  3210313671,
  3336571891,
  3584528711,
  113926993,
  338241895,
  666307205,
  773529912,
  1294757372,
  1396182291,
  1695183700,
  1986661051,
  2177026350,
  2456956037,
  2730485921,
  2820302411,
  3259730800,
  3345764771,
  3516065817,
  3600352804,
  4094571909,
  275423344,
  430227734,
  506948616,
  659060556,
  883997877,
  958139571,
  1322822218,
  1537002063,
  1747873779,
  1955562222,
  2024104815,
  2227730452,
  2361852424,
  2428436474,
  2756734187,
  3204031479,
  3329325298
]), ze = new Uint32Array([
  1779033703,
  3144134277,
  1013904242,
  2773480762,
  1359893119,
  2600822924,
  528734635,
  1541459225
]), Fe = new Uint32Array(64);
class vs extends Cu {
  constructor() {
    super(64, 32, 8, !1), this.A = ze[0] | 0, this.B = ze[1] | 0, this.C = ze[2] | 0, this.D = ze[3] | 0, this.E = ze[4] | 0, this.F = ze[5] | 0, this.G = ze[6] | 0, this.H = ze[7] | 0;
  }
  get() {
    const { A: e, B: r, C: n, D: i, E: s, F: o, G: a, H: c } = this;
    return [e, r, n, i, s, o, a, c];
  }
  set(e, r, n, i, s, o, a, c) {
    this.A = e | 0, this.B = r | 0, this.C = n | 0, this.D = i | 0, this.E = s | 0, this.F = o | 0, this.G = a | 0, this.H = c | 0;
  }
  process(e, r) {
    for (let u = 0; u < 16; u++, r += 4)
      Fe[u] = e.getUint32(r, !1);
    for (let u = 16; u < 64; u++) {
      const h = Fe[u - 15], d = Fe[u - 2], p = Ce(h, 7) ^ Ce(h, 18) ^ h >>> 3, y = Ce(d, 17) ^ Ce(d, 19) ^ d >>> 10;
      Fe[u] = y + Fe[u - 7] + p + Fe[u - 16] | 0;
    }
    let { A: n, B: i, C: s, D: o, E: a, F: c, G: l, H: f } = this;
    for (let u = 0; u < 64; u++) {
      const h = Ce(a, 6) ^ Ce(a, 11) ^ Ce(a, 25), d = f + h + Iu(a, c, l) + Tu[u] + Fe[u] | 0, y = (Ce(n, 2) ^ Ce(n, 13) ^ Ce(n, 22)) + Ru(n, i, s) | 0;
      f = l, l = c, c = a, a = o + d | 0, o = s, s = i, i = n, n = d + y | 0;
    }
    n = n + this.A | 0, i = i + this.B | 0, s = s + this.C | 0, o = o + this.D | 0, a = a + this.E | 0, c = c + this.F | 0, l = l + this.G | 0, f = f + this.H | 0, this.set(n, i, s, o, a, c, l, f);
  }
  roundClean() {
    Fe.fill(0);
  }
  destroy() {
    this.set(0, 0, 0, 0, 0, 0, 0, 0), this.buffer.fill(0);
  }
}
class Pu extends vs {
  constructor() {
    super(), this.A = -1056596264, this.B = 914150663, this.C = 812702999, this.D = -150054599, this.E = -4191439, this.F = 1750603025, this.G = 1694076839, this.H = -1090891868, this.outputLen = 28;
  }
}
const Yn = gs(() => new vs());
gs(() => new Pu());
/*! scure-base - MIT License (c) 2022 Paul Miller (paulmillr.com) */
function rt(t) {
  if (!Number.isSafeInteger(t))
    throw new Error(`Wrong integer: ${t}`);
}
function Se(...t) {
  const e = (i, s) => (o) => i(s(o)), r = Array.from(t).reverse().reduce((i, s) => i ? e(i, s.encode) : s.encode, void 0), n = t.reduce((i, s) => i ? e(i, s.decode) : s.decode, void 0);
  return { encode: r, decode: n };
}
function Re(t) {
  return {
    encode: (e) => {
      if (!Array.isArray(e) || e.length && typeof e[0] != "number")
        throw new Error("alphabet.encode input should be an array of numbers");
      return e.map((r) => {
        if (rt(r), r < 0 || r >= t.length)
          throw new Error(`Digit index outside alphabet: ${r} (alphabet: ${t.length})`);
        return t[r];
      });
    },
    decode: (e) => {
      if (!Array.isArray(e) || e.length && typeof e[0] != "string")
        throw new Error("alphabet.decode input should be array of strings");
      return e.map((r) => {
        if (typeof r != "string")
          throw new Error(`alphabet.decode: not string element=${r}`);
        const n = t.indexOf(r);
        if (n === -1)
          throw new Error(`Unknown letter: "${r}". Allowed: ${t}`);
        return n;
      });
    }
  };
}
function Te(t = "") {
  if (typeof t != "string")
    throw new Error("join separator should be string");
  return {
    encode: (e) => {
      if (!Array.isArray(e) || e.length && typeof e[0] != "string")
        throw new Error("join.encode input should be array of strings");
      for (let r of e)
        if (typeof r != "string")
          throw new Error(`join.encode: non-string input=${r}`);
      return e.join(t);
    },
    decode: (e) => {
      if (typeof e != "string")
        throw new Error("join.decode input should be string");
      return e.split(t);
    }
  };
}
function sr(t, e = "=") {
  if (rt(t), typeof e != "string")
    throw new Error("padding chr should be string");
  return {
    encode(r) {
      if (!Array.isArray(r) || r.length && typeof r[0] != "string")
        throw new Error("padding.encode input should be array of strings");
      for (let n of r)
        if (typeof n != "string")
          throw new Error(`padding.encode: non-string input=${n}`);
      for (; r.length * t % 8; )
        r.push(e);
      return r;
    },
    decode(r) {
      if (!Array.isArray(r) || r.length && typeof r[0] != "string")
        throw new Error("padding.encode input should be array of strings");
      for (let i of r)
        if (typeof i != "string")
          throw new Error(`padding.decode: non-string input=${i}`);
      let n = r.length;
      if (n * t % 8)
        throw new Error("Invalid padding: string should have whole number of bytes");
      for (; n > 0 && r[n - 1] === e; n--)
        if (!((n - 1) * t % 8))
          throw new Error("Invalid padding: string has too much padding");
      return r.slice(0, n);
    }
  };
}
function ws(t) {
  if (typeof t != "function")
    throw new Error("normalize fn should be function");
  return { encode: (e) => e, decode: (e) => t(e) };
}
function Fi(t, e, r) {
  if (e < 2)
    throw new Error(`convertRadix: wrong from=${e}, base cannot be less than 2`);
  if (r < 2)
    throw new Error(`convertRadix: wrong to=${r}, base cannot be less than 2`);
  if (!Array.isArray(t))
    throw new Error("convertRadix: data should be array");
  if (!t.length)
    return [];
  let n = 0;
  const i = [], s = Array.from(t);
  for (s.forEach((o) => {
    if (rt(o), o < 0 || o >= e)
      throw new Error(`Wrong integer: ${o}`);
  }); ; ) {
    let o = 0, a = !0;
    for (let c = n; c < s.length; c++) {
      const l = s[c], f = e * o + l;
      if (!Number.isSafeInteger(f) || e * o / e !== o || f - l !== e * o)
        throw new Error("convertRadix: carry overflow");
      if (o = f % r, s[c] = Math.floor(f / r), !Number.isSafeInteger(s[c]) || s[c] * r + o !== f)
        throw new Error("convertRadix: carry overflow");
      if (a)
        s[c] ? a = !1 : n = c;
      else
        continue;
    }
    if (i.push(o), a)
      break;
  }
  for (let o = 0; o < t.length - 1 && t[o] === 0; o++)
    i.push(0);
  return i.reverse();
}
const _s = (t, e) => e ? _s(e, t % e) : t, Tr = (t, e) => t + (e - _s(t, e));
function Bn(t, e, r, n) {
  if (!Array.isArray(t))
    throw new Error("convertRadix2: data should be array");
  if (e <= 0 || e > 32)
    throw new Error(`convertRadix2: wrong from=${e}`);
  if (r <= 0 || r > 32)
    throw new Error(`convertRadix2: wrong to=${r}`);
  if (Tr(e, r) > 32)
    throw new Error(`convertRadix2: carry overflow from=${e} to=${r} carryBits=${Tr(e, r)}`);
  let i = 0, s = 0;
  const o = 2 ** r - 1, a = [];
  for (const c of t) {
    if (rt(c), c >= 2 ** e)
      throw new Error(`convertRadix2: invalid data word=${c} from=${e}`);
    if (i = i << e | c, s + e > 32)
      throw new Error(`convertRadix2: carry overflow pos=${s} from=${e}`);
    for (s += e; s >= r; s -= r)
      a.push((i >> s - r & o) >>> 0);
    i &= 2 ** s - 1;
  }
  if (i = i << r - s & o, !n && s >= e)
    throw new Error("Excess padding");
  if (!n && i)
    throw new Error(`Non-zero padding: ${i}`);
  return n && s > 0 && a.push(i >>> 0), a;
}
function ms(t) {
  return rt(t), {
    encode: (e) => {
      if (!(e instanceof Uint8Array))
        throw new Error("radix.encode input should be Uint8Array");
      return Fi(Array.from(e), 2 ** 8, t);
    },
    decode: (e) => {
      if (!Array.isArray(e) || e.length && typeof e[0] != "number")
        throw new Error("radix.decode input should be array of strings");
      return Uint8Array.from(Fi(e, t, 2 ** 8));
    }
  };
}
function Ne(t, e = !1) {
  if (rt(t), t <= 0 || t > 32)
    throw new Error("radix2: bits should be in (0..32]");
  if (Tr(8, t) > 32 || Tr(t, 8) > 32)
    throw new Error("radix2: carry overflow");
  return {
    encode: (r) => {
      if (!(r instanceof Uint8Array))
        throw new Error("radix2.encode input should be Uint8Array");
      return Bn(Array.from(r), 8, t, !e);
    },
    decode: (r) => {
      if (!Array.isArray(r) || r.length && typeof r[0] != "number")
        throw new Error("radix2.decode input should be array of strings");
      return Uint8Array.from(Bn(r, t, 8, e));
    }
  };
}
function Ki(t) {
  if (typeof t != "function")
    throw new Error("unsafeWrapper fn should be function");
  return function(...e) {
    try {
      return t.apply(null, e);
    } catch {
    }
  };
}
function xs(t, e) {
  if (rt(t), typeof e != "function")
    throw new Error("checksum fn should be function");
  return {
    encode(r) {
      if (!(r instanceof Uint8Array))
        throw new Error("checksum.encode: input should be Uint8Array");
      const n = e(r).slice(0, t), i = new Uint8Array(r.length + t);
      return i.set(r), i.set(n, r.length), i;
    },
    decode(r) {
      if (!(r instanceof Uint8Array))
        throw new Error("checksum.decode: input should be Uint8Array");
      const n = r.slice(0, -t), i = e(n).slice(0, t), s = r.slice(-t);
      for (let o = 0; o < t; o++)
        if (i[o] !== s[o])
          throw new Error("Invalid checksum");
      return n;
    }
  };
}
const Bu = { alphabet: Re, chain: Se, checksum: xs, radix: ms, radix2: Ne, join: Te, padding: sr }, Es = Se(Ne(4), Re("0123456789ABCDEF"), Te("")), ks = Se(Ne(5), Re("ABCDEFGHIJKLMNOPQRSTUVWXYZ234567"), sr(5), Te("")), Lu = Se(Ne(5), Re("0123456789ABCDEFGHIJKLMNOPQRSTUV"), sr(5), Te("")), $u = Se(Ne(5), Re("0123456789ABCDEFGHJKMNPQRSTVWXYZ"), Te(""), ws((t) => t.toUpperCase().replace(/O/g, "0").replace(/[IL]/g, "1"))), mt = Se(Ne(6), Re("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"), sr(6), Te("")), Ss = Se(Ne(6), Re("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_"), sr(6), Te("")), Jn = (t) => Se(ms(58), Re(t), Te("")), nr = Jn("123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"), qu = Jn("123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"), Nu = Jn("rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz"), Wi = [0, 2, 3, 5, 6, 7, 9, 10, 11], Os = {
  encode(t) {
    let e = "";
    for (let r = 0; r < t.length; r += 8) {
      const n = t.subarray(r, r + 8);
      e += nr.encode(n).padStart(Wi[n.length], "1");
    }
    return e;
  },
  decode(t) {
    let e = [];
    for (let r = 0; r < t.length; r += 11) {
      const n = t.slice(r, r + 11), i = Wi.indexOf(n.length), s = nr.decode(n);
      for (let o = 0; o < s.length - i; o++)
        if (s[o] !== 0)
          throw new Error("base58xmr: wrong padding");
      e = e.concat(Array.from(s.slice(s.length - i)));
    }
    return Uint8Array.from(e);
  }
}, As = (t) => Se(xs(4, (e) => t(t(e))), nr), Ln = Se(Re("qpzry9x8gf2tvdw0s3jn54khce6mua7l"), Te("")), Vi = [996825010, 642813549, 513874426, 1027748829, 705979059];
function It(t) {
  const e = t >> 25;
  let r = (t & 33554431) << 5;
  for (let n = 0; n < Vi.length; n++)
    (e >> n & 1) === 1 && (r ^= Vi[n]);
  return r;
}
function Gi(t, e, r = 1) {
  const n = t.length;
  let i = 1;
  for (let s = 0; s < n; s++) {
    const o = t.charCodeAt(s);
    if (o < 33 || o > 126)
      throw new Error(`Invalid prefix (${t})`);
    i = It(i) ^ o >> 5;
  }
  i = It(i);
  for (let s = 0; s < n; s++)
    i = It(i) ^ t.charCodeAt(s) & 31;
  for (let s of e)
    i = It(i) ^ s;
  for (let s = 0; s < 6; s++)
    i = It(i);
  return i ^= r, Ln.encode(Bn([i % 2 ** 30], 30, 5, !1));
}
function Cs(t) {
  const e = t === "bech32" ? 1 : 734539939, r = Ne(5), n = r.decode, i = r.encode, s = Ki(n);
  function o(f, u, h = 90) {
    if (typeof f != "string")
      throw new Error(`bech32.encode prefix should be string, not ${typeof f}`);
    if (!Array.isArray(u) || u.length && typeof u[0] != "number")
      throw new Error(`bech32.encode words should be array of numbers, not ${typeof u}`);
    const d = f.length + 7 + u.length;
    if (h !== !1 && d > h)
      throw new TypeError(`Length ${d} exceeds limit ${h}`);
    return f = f.toLowerCase(), `${f}1${Ln.encode(u)}${Gi(f, u, e)}`;
  }
  function a(f, u = 90) {
    if (typeof f != "string")
      throw new Error(`bech32.decode input should be string, not ${typeof f}`);
    if (f.length < 8 || u !== !1 && f.length > u)
      throw new TypeError(`Wrong string length: ${f.length} (${f}). Expected (8..${u})`);
    const h = f.toLowerCase();
    if (f !== h && f !== f.toUpperCase())
      throw new Error("String must be lowercase or uppercase");
    f = h;
    const d = f.lastIndexOf("1");
    if (d === 0 || d === -1)
      throw new Error('Letter "1" must be present between prefix and data only');
    const p = f.slice(0, d), y = f.slice(d + 1);
    if (y.length < 6)
      throw new Error("Data must be at least 6 characters long");
    const g = Ln.decode(y).slice(0, -6), v = Gi(p, g, e);
    if (!y.endsWith(v))
      throw new Error(`Invalid checksum in ${f}: expected "${v}"`);
    return { prefix: p, words: g };
  }
  const c = Ki(a);
  function l(f) {
    const { prefix: u, words: h } = a(f, !1);
    return { prefix: u, words: h, bytes: n(h) };
  }
  return { encode: o, decode: a, decodeToBytes: l, decodeUnsafe: c, fromWords: n, fromWordsUnsafe: s, toWords: i };
}
const te = Cs("bech32"), Uu = Cs("bech32m"), Is = {
  encode: (t) => new TextDecoder().decode(t),
  decode: (t) => new TextEncoder().encode(t)
}, Rs = Se(Ne(4), Re("0123456789abcdef"), Te(""), ws((t) => {
  if (typeof t != "string" || t.length % 2)
    throw new TypeError(`hex.decode: expected string, got ${typeof t} with length ${t.length}`);
  return t.toLowerCase();
})), ir = {
  utf8: Is,
  hex: Rs,
  base16: Es,
  base32: ks,
  base64: mt,
  base64url: Ss,
  base58: nr,
  base58xmr: Os
}, Ts = `Invalid encoding type. Available types: ${Object.keys(ir).join(", ")}`, Ps = (t, e) => {
  if (typeof t != "string" || !ir.hasOwnProperty(t))
    throw new TypeError(Ts);
  if (!(e instanceof Uint8Array))
    throw new TypeError("bytesToString() expects Uint8Array");
  return ir[t].encode(e);
}, ju = Ps, Bs = (t, e) => {
  if (!ir.hasOwnProperty(t))
    throw new TypeError(Ts);
  if (typeof e != "string")
    throw new TypeError("stringToBytes() expects string");
  return ir[t].decode(e);
}, Hu = Bs, Mu = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  assertNumber: rt,
  utils: Bu,
  base16: Es,
  base32: ks,
  base32hex: Lu,
  base32crockford: $u,
  base64: mt,
  base64url: Ss,
  base58: nr,
  base58flickr: qu,
  base58xrp: Nu,
  base58xmr: Os,
  base58check: As,
  bech32: te,
  bech32m: Uu,
  utf8: Is,
  hex: Rs,
  bytesToString: Ps,
  str: ju,
  stringToBytes: Bs,
  bytes: Hu
}, Symbol.toStringTag, { value: "Module" }));
var Xn = {};
Object.defineProperty(Xn, "__esModule", { value: !0 });
var Qn = Xn.wordlist = void 0;
Qn = Xn.wordlist = `abandon
ability
able
about
above
absent
absorb
abstract
absurd
abuse
access
accident
account
accuse
achieve
acid
acoustic
acquire
across
act
action
actor
actress
actual
adapt
add
addict
address
adjust
admit
adult
advance
advice
aerobic
affair
afford
afraid
again
age
agent
agree
ahead
aim
air
airport
aisle
alarm
album
alcohol
alert
alien
all
alley
allow
almost
alone
alpha
already
also
alter
always
amateur
amazing
among
amount
amused
analyst
anchor
ancient
anger
angle
angry
animal
ankle
announce
annual
another
answer
antenna
antique
anxiety
any
apart
apology
appear
apple
approve
april
arch
arctic
area
arena
argue
arm
armed
armor
army
around
arrange
arrest
arrive
arrow
art
artefact
artist
artwork
ask
aspect
assault
asset
assist
assume
asthma
athlete
atom
attack
attend
attitude
attract
auction
audit
august
aunt
author
auto
autumn
average
avocado
avoid
awake
aware
away
awesome
awful
awkward
axis
baby
bachelor
bacon
badge
bag
balance
balcony
ball
bamboo
banana
banner
bar
barely
bargain
barrel
base
basic
basket
battle
beach
bean
beauty
because
become
beef
before
begin
behave
behind
believe
below
belt
bench
benefit
best
betray
better
between
beyond
bicycle
bid
bike
bind
biology
bird
birth
bitter
black
blade
blame
blanket
blast
bleak
bless
blind
blood
blossom
blouse
blue
blur
blush
board
boat
body
boil
bomb
bone
bonus
book
boost
border
boring
borrow
boss
bottom
bounce
box
boy
bracket
brain
brand
brass
brave
bread
breeze
brick
bridge
brief
bright
bring
brisk
broccoli
broken
bronze
broom
brother
brown
brush
bubble
buddy
budget
buffalo
build
bulb
bulk
bullet
bundle
bunker
burden
burger
burst
bus
business
busy
butter
buyer
buzz
cabbage
cabin
cable
cactus
cage
cake
call
calm
camera
camp
can
canal
cancel
candy
cannon
canoe
canvas
canyon
capable
capital
captain
car
carbon
card
cargo
carpet
carry
cart
case
cash
casino
castle
casual
cat
catalog
catch
category
cattle
caught
cause
caution
cave
ceiling
celery
cement
census
century
cereal
certain
chair
chalk
champion
change
chaos
chapter
charge
chase
chat
cheap
check
cheese
chef
cherry
chest
chicken
chief
child
chimney
choice
choose
chronic
chuckle
chunk
churn
cigar
cinnamon
circle
citizen
city
civil
claim
clap
clarify
claw
clay
clean
clerk
clever
click
client
cliff
climb
clinic
clip
clock
clog
close
cloth
cloud
clown
club
clump
cluster
clutch
coach
coast
coconut
code
coffee
coil
coin
collect
color
column
combine
come
comfort
comic
common
company
concert
conduct
confirm
congress
connect
consider
control
convince
cook
cool
copper
copy
coral
core
corn
correct
cost
cotton
couch
country
couple
course
cousin
cover
coyote
crack
cradle
craft
cram
crane
crash
crater
crawl
crazy
cream
credit
creek
crew
cricket
crime
crisp
critic
crop
cross
crouch
crowd
crucial
cruel
cruise
crumble
crunch
crush
cry
crystal
cube
culture
cup
cupboard
curious
current
curtain
curve
cushion
custom
cute
cycle
dad
damage
damp
dance
danger
daring
dash
daughter
dawn
day
deal
debate
debris
decade
december
decide
decline
decorate
decrease
deer
defense
define
defy
degree
delay
deliver
demand
demise
denial
dentist
deny
depart
depend
deposit
depth
deputy
derive
describe
desert
design
desk
despair
destroy
detail
detect
develop
device
devote
diagram
dial
diamond
diary
dice
diesel
diet
differ
digital
dignity
dilemma
dinner
dinosaur
direct
dirt
disagree
discover
disease
dish
dismiss
disorder
display
distance
divert
divide
divorce
dizzy
doctor
document
dog
doll
dolphin
domain
donate
donkey
donor
door
dose
double
dove
draft
dragon
drama
drastic
draw
dream
dress
drift
drill
drink
drip
drive
drop
drum
dry
duck
dumb
dune
during
dust
dutch
duty
dwarf
dynamic
eager
eagle
early
earn
earth
easily
east
easy
echo
ecology
economy
edge
edit
educate
effort
egg
eight
either
elbow
elder
electric
elegant
element
elephant
elevator
elite
else
embark
embody
embrace
emerge
emotion
employ
empower
empty
enable
enact
end
endless
endorse
enemy
energy
enforce
engage
engine
enhance
enjoy
enlist
enough
enrich
enroll
ensure
enter
entire
entry
envelope
episode
equal
equip
era
erase
erode
erosion
error
erupt
escape
essay
essence
estate
eternal
ethics
evidence
evil
evoke
evolve
exact
example
excess
exchange
excite
exclude
excuse
execute
exercise
exhaust
exhibit
exile
exist
exit
exotic
expand
expect
expire
explain
expose
express
extend
extra
eye
eyebrow
fabric
face
faculty
fade
faint
faith
fall
false
fame
family
famous
fan
fancy
fantasy
farm
fashion
fat
fatal
father
fatigue
fault
favorite
feature
february
federal
fee
feed
feel
female
fence
festival
fetch
fever
few
fiber
fiction
field
figure
file
film
filter
final
find
fine
finger
finish
fire
firm
first
fiscal
fish
fit
fitness
fix
flag
flame
flash
flat
flavor
flee
flight
flip
float
flock
floor
flower
fluid
flush
fly
foam
focus
fog
foil
fold
follow
food
foot
force
forest
forget
fork
fortune
forum
forward
fossil
foster
found
fox
fragile
frame
frequent
fresh
friend
fringe
frog
front
frost
frown
frozen
fruit
fuel
fun
funny
furnace
fury
future
gadget
gain
galaxy
gallery
game
gap
garage
garbage
garden
garlic
garment
gas
gasp
gate
gather
gauge
gaze
general
genius
genre
gentle
genuine
gesture
ghost
giant
gift
giggle
ginger
giraffe
girl
give
glad
glance
glare
glass
glide
glimpse
globe
gloom
glory
glove
glow
glue
goat
goddess
gold
good
goose
gorilla
gospel
gossip
govern
gown
grab
grace
grain
grant
grape
grass
gravity
great
green
grid
grief
grit
grocery
group
grow
grunt
guard
guess
guide
guilt
guitar
gun
gym
habit
hair
half
hammer
hamster
hand
happy
harbor
hard
harsh
harvest
hat
have
hawk
hazard
head
health
heart
heavy
hedgehog
height
hello
helmet
help
hen
hero
hidden
high
hill
hint
hip
hire
history
hobby
hockey
hold
hole
holiday
hollow
home
honey
hood
hope
horn
horror
horse
hospital
host
hotel
hour
hover
hub
huge
human
humble
humor
hundred
hungry
hunt
hurdle
hurry
hurt
husband
hybrid
ice
icon
idea
identify
idle
ignore
ill
illegal
illness
image
imitate
immense
immune
impact
impose
improve
impulse
inch
include
income
increase
index
indicate
indoor
industry
infant
inflict
inform
inhale
inherit
initial
inject
injury
inmate
inner
innocent
input
inquiry
insane
insect
inside
inspire
install
intact
interest
into
invest
invite
involve
iron
island
isolate
issue
item
ivory
jacket
jaguar
jar
jazz
jealous
jeans
jelly
jewel
job
join
joke
journey
joy
judge
juice
jump
jungle
junior
junk
just
kangaroo
keen
keep
ketchup
key
kick
kid
kidney
kind
kingdom
kiss
kit
kitchen
kite
kitten
kiwi
knee
knife
knock
know
lab
label
labor
ladder
lady
lake
lamp
language
laptop
large
later
latin
laugh
laundry
lava
law
lawn
lawsuit
layer
lazy
leader
leaf
learn
leave
lecture
left
leg
legal
legend
leisure
lemon
lend
length
lens
leopard
lesson
letter
level
liar
liberty
library
license
life
lift
light
like
limb
limit
link
lion
liquid
list
little
live
lizard
load
loan
lobster
local
lock
logic
lonely
long
loop
lottery
loud
lounge
love
loyal
lucky
luggage
lumber
lunar
lunch
luxury
lyrics
machine
mad
magic
magnet
maid
mail
main
major
make
mammal
man
manage
mandate
mango
mansion
manual
maple
marble
march
margin
marine
market
marriage
mask
mass
master
match
material
math
matrix
matter
maximum
maze
meadow
mean
measure
meat
mechanic
medal
media
melody
melt
member
memory
mention
menu
mercy
merge
merit
merry
mesh
message
metal
method
middle
midnight
milk
million
mimic
mind
minimum
minor
minute
miracle
mirror
misery
miss
mistake
mix
mixed
mixture
mobile
model
modify
mom
moment
monitor
monkey
monster
month
moon
moral
more
morning
mosquito
mother
motion
motor
mountain
mouse
move
movie
much
muffin
mule
multiply
muscle
museum
mushroom
music
must
mutual
myself
mystery
myth
naive
name
napkin
narrow
nasty
nation
nature
near
neck
need
negative
neglect
neither
nephew
nerve
nest
net
network
neutral
never
news
next
nice
night
noble
noise
nominee
noodle
normal
north
nose
notable
note
nothing
notice
novel
now
nuclear
number
nurse
nut
oak
obey
object
oblige
obscure
observe
obtain
obvious
occur
ocean
october
odor
off
offer
office
often
oil
okay
old
olive
olympic
omit
once
one
onion
online
only
open
opera
opinion
oppose
option
orange
orbit
orchard
order
ordinary
organ
orient
original
orphan
ostrich
other
outdoor
outer
output
outside
oval
oven
over
own
owner
oxygen
oyster
ozone
pact
paddle
page
pair
palace
palm
panda
panel
panic
panther
paper
parade
parent
park
parrot
party
pass
patch
path
patient
patrol
pattern
pause
pave
payment
peace
peanut
pear
peasant
pelican
pen
penalty
pencil
people
pepper
perfect
permit
person
pet
phone
photo
phrase
physical
piano
picnic
picture
piece
pig
pigeon
pill
pilot
pink
pioneer
pipe
pistol
pitch
pizza
place
planet
plastic
plate
play
please
pledge
pluck
plug
plunge
poem
poet
point
polar
pole
police
pond
pony
pool
popular
portion
position
possible
post
potato
pottery
poverty
powder
power
practice
praise
predict
prefer
prepare
present
pretty
prevent
price
pride
primary
print
priority
prison
private
prize
problem
process
produce
profit
program
project
promote
proof
property
prosper
protect
proud
provide
public
pudding
pull
pulp
pulse
pumpkin
punch
pupil
puppy
purchase
purity
purpose
purse
push
put
puzzle
pyramid
quality
quantum
quarter
question
quick
quit
quiz
quote
rabbit
raccoon
race
rack
radar
radio
rail
rain
raise
rally
ramp
ranch
random
range
rapid
rare
rate
rather
raven
raw
razor
ready
real
reason
rebel
rebuild
recall
receive
recipe
record
recycle
reduce
reflect
reform
refuse
region
regret
regular
reject
relax
release
relief
rely
remain
remember
remind
remove
render
renew
rent
reopen
repair
repeat
replace
report
require
rescue
resemble
resist
resource
response
result
retire
retreat
return
reunion
reveal
review
reward
rhythm
rib
ribbon
rice
rich
ride
ridge
rifle
right
rigid
ring
riot
ripple
risk
ritual
rival
river
road
roast
robot
robust
rocket
romance
roof
rookie
room
rose
rotate
rough
round
route
royal
rubber
rude
rug
rule
run
runway
rural
sad
saddle
sadness
safe
sail
salad
salmon
salon
salt
salute
same
sample
sand
satisfy
satoshi
sauce
sausage
save
say
scale
scan
scare
scatter
scene
scheme
school
science
scissors
scorpion
scout
scrap
screen
script
scrub
sea
search
season
seat
second
secret
section
security
seed
seek
segment
select
sell
seminar
senior
sense
sentence
series
service
session
settle
setup
seven
shadow
shaft
shallow
share
shed
shell
sheriff
shield
shift
shine
ship
shiver
shock
shoe
shoot
shop
short
shoulder
shove
shrimp
shrug
shuffle
shy
sibling
sick
side
siege
sight
sign
silent
silk
silly
silver
similar
simple
since
sing
siren
sister
situate
six
size
skate
sketch
ski
skill
skin
skirt
skull
slab
slam
sleep
slender
slice
slide
slight
slim
slogan
slot
slow
slush
small
smart
smile
smoke
smooth
snack
snake
snap
sniff
snow
soap
soccer
social
sock
soda
soft
solar
soldier
solid
solution
solve
someone
song
soon
sorry
sort
soul
sound
soup
source
south
space
spare
spatial
spawn
speak
special
speed
spell
spend
sphere
spice
spider
spike
spin
spirit
split
spoil
sponsor
spoon
sport
spot
spray
spread
spring
spy
square
squeeze
squirrel
stable
stadium
staff
stage
stairs
stamp
stand
start
state
stay
steak
steel
stem
step
stereo
stick
still
sting
stock
stomach
stone
stool
story
stove
strategy
street
strike
strong
struggle
student
stuff
stumble
style
subject
submit
subway
success
such
sudden
suffer
sugar
suggest
suit
summer
sun
sunny
sunset
super
supply
supreme
sure
surface
surge
surprise
surround
survey
suspect
sustain
swallow
swamp
swap
swarm
swear
sweet
swift
swim
swing
switch
sword
symbol
symptom
syrup
system
table
tackle
tag
tail
talent
talk
tank
tape
target
task
taste
tattoo
taxi
teach
team
tell
ten
tenant
tennis
tent
term
test
text
thank
that
theme
then
theory
there
they
thing
this
thought
three
thrive
throw
thumb
thunder
ticket
tide
tiger
tilt
timber
time
tiny
tip
tired
tissue
title
toast
tobacco
today
toddler
toe
together
toilet
token
tomato
tomorrow
tone
tongue
tonight
tool
tooth
top
topic
topple
torch
tornado
tortoise
toss
total
tourist
toward
tower
town
toy
track
trade
traffic
tragic
train
transfer
trap
trash
travel
tray
treat
tree
trend
trial
tribe
trick
trigger
trim
trip
trophy
trouble
truck
true
truly
trumpet
trust
truth
try
tube
tuition
tumble
tuna
tunnel
turkey
turn
turtle
twelve
twenty
twice
twin
twist
two
type
typical
ugly
umbrella
unable
unaware
uncle
uncover
under
undo
unfair
unfold
unhappy
uniform
unique
unit
universe
unknown
unlock
until
unusual
unveil
update
upgrade
uphold
upon
upper
upset
urban
urge
usage
use
used
useful
useless
usual
utility
vacant
vacuum
vague
valid
valley
valve
van
vanish
vapor
various
vast
vault
vehicle
velvet
vendor
venture
venue
verb
verify
version
very
vessel
veteran
viable
vibrant
vicious
victory
video
view
village
vintage
violin
virtual
virus
visa
visit
visual
vital
vivid
vocal
voice
void
volcano
volume
vote
voyage
wage
wagon
wait
walk
wall
walnut
want
warfare
warm
warrior
wash
wasp
waste
water
wave
way
wealth
weapon
wear
weasel
weather
web
wedding
weekend
weird
welcome
west
wet
whale
what
wheat
wheel
when
where
whip
whisper
wide
width
wife
wild
will
win
window
wine
wing
wink
winner
winter
wire
wisdom
wise
wish
witness
wolf
woman
wonder
wood
wool
word
work
world
worry
worth
wrap
wreck
wrestle
wrist
write
wrong
yard
year
yellow
you
young
youth
zebra
zero
zone
zoo`.split(`
`);
var de = {};
function Pr(t) {
  if (!Number.isSafeInteger(t) || t < 0)
    throw new Error(`Wrong positive integer: ${t}`);
}
function Ls(t) {
  if (typeof t != "boolean")
    throw new Error(`Expected boolean, not ${t}`);
}
function Ye(t, ...e) {
  if (!(t instanceof Uint8Array))
    throw new Error("Expected Uint8Array");
  if (e.length > 0 && !e.includes(t.length))
    throw new Error(`Expected Uint8Array of length ${e}, not of length=${t.length}`);
}
function $s(t) {
  if (typeof t != "function" || typeof t.create != "function")
    throw new Error("Hash should be wrapped by utils.wrapConstructor");
  Pr(t.outputLen), Pr(t.blockLen);
}
function qs(t, e = !0) {
  if (t.destroyed)
    throw new Error("Hash instance has been destroyed");
  if (e && t.finished)
    throw new Error("Hash#digest() has already been called");
}
function Ns(t, e) {
  Ye(t);
  const r = e.outputLen;
  if (t.length < r)
    throw new Error(`digestInto() expects output buffer of length at least ${r}`);
}
const Qe = {
  number: Pr,
  bool: Ls,
  bytes: Ye,
  hash: $s,
  exists: qs,
  output: Ns
}, Du = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  number: Pr,
  bool: Ls,
  bytes: Ye,
  hash: $s,
  exists: qs,
  output: Ns,
  default: Qe
}, Symbol.toStringTag, { value: "Module" })), zu = /* @__PURE__ */ Et(Du);
var xt = {}, ne = {};
Object.defineProperty(ne, "__esModule", { value: !0 });
ne.output = ne.exists = ne.hash = ne.bytes = ne.bool = ne.number = void 0;
function Br(t) {
  if (!Number.isSafeInteger(t) || t < 0)
    throw new Error(`Wrong positive integer: ${t}`);
}
ne.number = Br;
function Us(t) {
  if (typeof t != "boolean")
    throw new Error(`Expected boolean, not ${t}`);
}
ne.bool = Us;
function ei(t, ...e) {
  if (!(t instanceof Uint8Array))
    throw new Error("Expected Uint8Array");
  if (e.length > 0 && !e.includes(t.length))
    throw new Error(`Expected Uint8Array of length ${e}, not of length=${t.length}`);
}
ne.bytes = ei;
function js(t) {
  if (typeof t != "function" || typeof t.create != "function")
    throw new Error("Hash should be wrapped by utils.wrapConstructor");
  Br(t.outputLen), Br(t.blockLen);
}
ne.hash = js;
function Hs(t, e = !0) {
  if (t.destroyed)
    throw new Error("Hash instance has been destroyed");
  if (e && t.finished)
    throw new Error("Hash#digest() has already been called");
}
ne.exists = Hs;
function Ms(t, e) {
  ei(t);
  const r = e.outputLen;
  if (t.length < r)
    throw new Error(`digestInto() expects output buffer of length at least ${r}`);
}
ne.output = Ms;
const Fu = {
  number: Br,
  bool: Us,
  bytes: ei,
  hash: js,
  exists: Hs,
  output: Ms
};
ne.default = Fu;
var Ds = {}, ti = {};
const Sr = typeof globalThis == "object" && "crypto" in globalThis ? globalThis.crypto : void 0, Ku = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  crypto: Sr
}, Symbol.toStringTag, { value: "Module" })), Wu = /* @__PURE__ */ Et(Ku);
(function(t) {
  /*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */
  Object.defineProperty(t, "__esModule", { value: !0 }), t.randomBytes = t.wrapXOFConstructorWithOpts = t.wrapConstructorWithOpts = t.wrapConstructor = t.checkOpts = t.Hash = t.concatBytes = t.toBytes = t.utf8ToBytes = t.asyncLoop = t.nextTick = t.hexToBytes = t.bytesToHex = t.isLE = t.rotr = t.createView = t.u32 = t.u8 = void 0;
  const e = Wu, r = (w) => w instanceof Uint8Array, n = (w) => new Uint8Array(w.buffer, w.byteOffset, w.byteLength);
  t.u8 = n;
  const i = (w) => new Uint32Array(w.buffer, w.byteOffset, Math.floor(w.byteLength / 4));
  t.u32 = i;
  const s = (w) => new DataView(w.buffer, w.byteOffset, w.byteLength);
  t.createView = s;
  const o = (w, x) => w << 32 - x | w >>> x;
  if (t.rotr = o, t.isLE = new Uint8Array(new Uint32Array([287454020]).buffer)[0] === 68, !t.isLE)
    throw new Error("Non little-endian hardware is not supported");
  const a = Array.from({ length: 256 }, (w, x) => x.toString(16).padStart(2, "0"));
  function c(w) {
    if (!r(w))
      throw new Error("Uint8Array expected");
    let x = "";
    for (let A = 0; A < w.length; A++)
      x += a[w[A]];
    return x;
  }
  t.bytesToHex = c;
  function l(w) {
    if (typeof w != "string")
      throw new Error("hex string expected, got " + typeof w);
    const x = w.length;
    if (x % 2)
      throw new Error("padded hex string expected, got unpadded hex of length " + x);
    const A = new Uint8Array(x / 2);
    for (let B = 0; B < A.length; B++) {
      const L = B * 2, P = w.slice(L, L + 2), F = Number.parseInt(P, 16);
      if (Number.isNaN(F) || F < 0)
        throw new Error("Invalid byte sequence");
      A[B] = F;
    }
    return A;
  }
  t.hexToBytes = l;
  const f = async () => {
  };
  t.nextTick = f;
  async function u(w, x, A) {
    let B = Date.now();
    for (let L = 0; L < w; L++) {
      A(L);
      const P = Date.now() - B;
      P >= 0 && P < x || (await (0, t.nextTick)(), B += P);
    }
  }
  t.asyncLoop = u;
  function h(w) {
    if (typeof w != "string")
      throw new Error(`utf8ToBytes expected string, got ${typeof w}`);
    return new Uint8Array(new TextEncoder().encode(w));
  }
  t.utf8ToBytes = h;
  function d(w) {
    if (typeof w == "string" && (w = h(w)), !r(w))
      throw new Error(`expected Uint8Array, got ${typeof w}`);
    return w;
  }
  t.toBytes = d;
  function p(...w) {
    const x = new Uint8Array(w.reduce((B, L) => B + L.length, 0));
    let A = 0;
    return w.forEach((B) => {
      if (!r(B))
        throw new Error("Uint8Array expected");
      x.set(B, A), A += B.length;
    }), x;
  }
  t.concatBytes = p;
  class y {
    clone() {
      return this._cloneInto();
    }
  }
  t.Hash = y;
  const g = (w) => Object.prototype.toString.call(w) === "[object Object]" && w.constructor === Object;
  function v(w, x) {
    if (x !== void 0 && (typeof x != "object" || !g(x)))
      throw new Error("Options should be object or undefined");
    return Object.assign(w, x);
  }
  t.checkOpts = v;
  function _(w) {
    const x = (B) => w().update(d(B)).digest(), A = w();
    return x.outputLen = A.outputLen, x.blockLen = A.blockLen, x.create = () => w(), x;
  }
  t.wrapConstructor = _;
  function m(w) {
    const x = (B, L) => w(L).update(d(B)).digest(), A = w({});
    return x.outputLen = A.outputLen, x.blockLen = A.blockLen, x.create = (B) => w(B), x;
  }
  t.wrapConstructorWithOpts = m;
  function C(w) {
    const x = (B, L) => w(L).update(d(B)).digest(), A = w({});
    return x.outputLen = A.outputLen, x.blockLen = A.blockLen, x.create = (B) => w(B), x;
  }
  t.wrapXOFConstructorWithOpts = C;
  function O(w = 32) {
    if (e.crypto && typeof e.crypto.getRandomValues == "function")
      return e.crypto.getRandomValues(new Uint8Array(w));
    throw new Error("crypto.getRandomValues must be defined");
  }
  t.randomBytes = O;
})(ti);
(function(t) {
  Object.defineProperty(t, "__esModule", { value: !0 }), t.hmac = t.HMAC = void 0;
  const e = ne, r = ti;
  class n extends r.Hash {
    constructor(o, a) {
      super(), this.finished = !1, this.destroyed = !1, e.default.hash(o);
      const c = (0, r.toBytes)(a);
      if (this.iHash = o.create(), typeof this.iHash.update != "function")
        throw new Error("Expected instance of class which extends utils.Hash");
      this.blockLen = this.iHash.blockLen, this.outputLen = this.iHash.outputLen;
      const l = this.blockLen, f = new Uint8Array(l);
      f.set(c.length > l ? o.create().update(c).digest() : c);
      for (let u = 0; u < f.length; u++)
        f[u] ^= 54;
      this.iHash.update(f), this.oHash = o.create();
      for (let u = 0; u < f.length; u++)
        f[u] ^= 106;
      this.oHash.update(f), f.fill(0);
    }
    update(o) {
      return e.default.exists(this), this.iHash.update(o), this;
    }
    digestInto(o) {
      e.default.exists(this), e.default.bytes(o, this.outputLen), this.finished = !0, this.iHash.digestInto(o), this.oHash.update(o), this.oHash.digestInto(o), this.destroy();
    }
    digest() {
      const o = new Uint8Array(this.oHash.outputLen);
      return this.digestInto(o), o;
    }
    _cloneInto(o) {
      o || (o = Object.create(Object.getPrototypeOf(this), {}));
      const { oHash: a, iHash: c, finished: l, destroyed: f, blockLen: u, outputLen: h } = this;
      return o = o, o.finished = l, o.destroyed = f, o.blockLen = u, o.outputLen = h, o.oHash = a._cloneInto(o.oHash), o.iHash = c._cloneInto(o.iHash), o;
    }
    destroy() {
      this.destroyed = !0, this.oHash.destroy(), this.iHash.destroy();
    }
  }
  t.HMAC = n;
  const i = (s, o, a) => new n(s, o).update(a).digest();
  t.hmac = i, t.hmac.create = (s, o) => new n(s, o);
})(Ds);
Object.defineProperty(xt, "__esModule", { value: !0 });
xt.pbkdf2Async = xt.pbkdf2 = void 0;
const hr = ne, Vu = Ds, bt = ti;
function zs(t, e, r, n) {
  hr.default.hash(t);
  const i = (0, bt.checkOpts)({ dkLen: 32, asyncTick: 10 }, n), { c: s, dkLen: o, asyncTick: a } = i;
  if (hr.default.number(s), hr.default.number(o), hr.default.number(a), s < 1)
    throw new Error("PBKDF2: iterations (c) should be >= 1");
  const c = (0, bt.toBytes)(e), l = (0, bt.toBytes)(r), f = new Uint8Array(o), u = Vu.hmac.create(t, c), h = u._cloneInto().update(l);
  return { c: s, dkLen: o, asyncTick: a, DK: f, PRF: u, PRFSalt: h };
}
function Fs(t, e, r, n, i) {
  return t.destroy(), e.destroy(), n && n.destroy(), i.fill(0), r;
}
function Gu(t, e, r, n) {
  const { c: i, dkLen: s, DK: o, PRF: a, PRFSalt: c } = zs(t, e, r, n);
  let l;
  const f = new Uint8Array(4), u = (0, bt.createView)(f), h = new Uint8Array(a.outputLen);
  for (let d = 1, p = 0; p < s; d++, p += a.outputLen) {
    const y = o.subarray(p, p + a.outputLen);
    u.setInt32(0, d, !1), (l = c._cloneInto(l)).update(f).digestInto(h), y.set(h.subarray(0, y.length));
    for (let g = 1; g < i; g++) {
      a._cloneInto(l).update(h).digestInto(h);
      for (let v = 0; v < y.length; v++)
        y[v] ^= h[v];
    }
  }
  return Fs(a, c, o, l, h);
}
xt.pbkdf2 = Gu;
async function Zu(t, e, r, n) {
  const { c: i, dkLen: s, asyncTick: o, DK: a, PRF: c, PRFSalt: l } = zs(t, e, r, n);
  let f;
  const u = new Uint8Array(4), h = (0, bt.createView)(u), d = new Uint8Array(c.outputLen);
  for (let p = 1, y = 0; y < s; p++, y += c.outputLen) {
    const g = a.subarray(y, y + c.outputLen);
    h.setInt32(0, p, !1), (f = l._cloneInto(f)).update(u).digestInto(d), g.set(d.subarray(0, g.length)), await (0, bt.asyncLoop)(i - 1, o, (v) => {
      c._cloneInto(f).update(d).digestInto(d);
      for (let _ = 0; _ < g.length; _++)
        g[_] ^= d[_];
    });
  }
  return Fs(c, l, a, f, d);
}
xt.pbkdf2Async = Zu;
/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */
const ri = (t) => t instanceof Uint8Array, Yu = (t) => new Uint8Array(t.buffer, t.byteOffset, t.byteLength), Ju = (t) => new Uint32Array(t.buffer, t.byteOffset, Math.floor(t.byteLength / 4)), ft = (t) => new DataView(t.buffer, t.byteOffset, t.byteLength), Ee = (t, e) => t << 32 - e | t >>> e, Ks = new Uint8Array(new Uint32Array([287454020]).buffer)[0] === 68;
if (!Ks)
  throw new Error("Non little-endian hardware is not supported");
const Xu = Array.from({ length: 256 }, (t, e) => e.toString(16).padStart(2, "0"));
function ni(t) {
  if (!ri(t))
    throw new Error("Uint8Array expected");
  let e = "";
  for (let r = 0; r < t.length; r++)
    e += Xu[t[r]];
  return e;
}
function Ws(t) {
  if (typeof t != "string")
    throw new Error("hex string expected, got " + typeof t);
  const e = t.length;
  if (e % 2)
    throw new Error("padded hex string expected, got unpadded hex of length " + e);
  const r = new Uint8Array(e / 2);
  for (let n = 0; n < r.length; n++) {
    const i = n * 2, s = t.slice(i, i + 2), o = Number.parseInt(s, 16);
    if (Number.isNaN(o) || o < 0)
      throw new Error("Invalid byte sequence");
    r[n] = o;
  }
  return r;
}
const Vs = async () => {
};
async function Qu(t, e, r) {
  let n = Date.now();
  for (let i = 0; i < t; i++) {
    r(i);
    const s = Date.now() - n;
    s >= 0 && s < e || (await Vs(), n += s);
  }
}
function ii(t) {
  if (typeof t != "string")
    throw new Error(`utf8ToBytes expected string, got ${typeof t}`);
  return new Uint8Array(new TextEncoder().encode(t));
}
function Ot(t) {
  if (typeof t == "string" && (t = ii(t)), !ri(t))
    throw new Error(`expected Uint8Array, got ${typeof t}`);
  return t;
}
function er(...t) {
  const e = new Uint8Array(t.reduce((n, i) => n + i.length, 0));
  let r = 0;
  return t.forEach((n) => {
    if (!ri(n))
      throw new Error("Uint8Array expected");
    e.set(n, r), r += n.length;
  }), e;
}
class oi {
  clone() {
    return this._cloneInto();
  }
}
const el = (t) => Object.prototype.toString.call(t) === "[object Object]" && t.constructor === Object;
function tl(t, e) {
  if (e !== void 0 && (typeof e != "object" || !el(e)))
    throw new Error("Options should be object or undefined");
  return Object.assign(t, e);
}
function nt(t) {
  const e = (n) => t().update(Ot(n)).digest(), r = t();
  return e.outputLen = r.outputLen, e.blockLen = r.blockLen, e.create = () => t(), e;
}
function rl(t) {
  const e = (n, i) => t(i).update(Ot(n)).digest(), r = t({});
  return e.outputLen = r.outputLen, e.blockLen = r.blockLen, e.create = (n) => t(n), e;
}
function nl(t) {
  const e = (n, i) => t(i).update(Ot(n)).digest(), r = t({});
  return e.outputLen = r.outputLen, e.blockLen = r.blockLen, e.create = (n) => t(n), e;
}
function il(t = 32) {
  if (Sr && typeof Sr.getRandomValues == "function")
    return Sr.getRandomValues(new Uint8Array(t));
  throw new Error("crypto.getRandomValues must be defined");
}
const ol = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  u8: Yu,
  u32: Ju,
  createView: ft,
  rotr: Ee,
  isLE: Ks,
  bytesToHex: ni,
  hexToBytes: Ws,
  nextTick: Vs,
  asyncLoop: Qu,
  utf8ToBytes: ii,
  toBytes: Ot,
  concatBytes: er,
  Hash: oi,
  checkOpts: tl,
  wrapConstructor: nt,
  wrapConstructorWithOpts: rl,
  wrapXOFConstructorWithOpts: nl,
  randomBytes: il
}, Symbol.toStringTag, { value: "Module" }));
function sl(t, e, r, n) {
  if (typeof t.setBigUint64 == "function")
    return t.setBigUint64(e, r, n);
  const i = BigInt(32), s = BigInt(4294967295), o = Number(r >> i & s), a = Number(r & s), c = n ? 4 : 0, l = n ? 0 : 4;
  t.setUint32(e + c, o, n), t.setUint32(e + l, a, n);
}
class si extends oi {
  constructor(e, r, n, i) {
    super(), this.blockLen = e, this.outputLen = r, this.padOffset = n, this.isLE = i, this.finished = !1, this.length = 0, this.pos = 0, this.destroyed = !1, this.buffer = new Uint8Array(e), this.view = ft(this.buffer);
  }
  update(e) {
    Qe.exists(this);
    const { view: r, buffer: n, blockLen: i } = this;
    e = Ot(e);
    const s = e.length;
    for (let o = 0; o < s; ) {
      const a = Math.min(i - this.pos, s - o);
      if (a === i) {
        const c = ft(e);
        for (; i <= s - o; o += i)
          this.process(c, o);
        continue;
      }
      n.set(e.subarray(o, o + a), this.pos), this.pos += a, o += a, this.pos === i && (this.process(r, 0), this.pos = 0);
    }
    return this.length += e.length, this.roundClean(), this;
  }
  digestInto(e) {
    Qe.exists(this), Qe.output(e, this), this.finished = !0;
    const { buffer: r, view: n, blockLen: i, isLE: s } = this;
    let { pos: o } = this;
    r[o++] = 128, this.buffer.subarray(o).fill(0), this.padOffset > i - o && (this.process(n, 0), o = 0);
    for (let u = o; u < i; u++)
      r[u] = 0;
    sl(n, i - 8, BigInt(this.length * 8), s), this.process(n, 0);
    const a = ft(e), c = this.outputLen;
    if (c % 4)
      throw new Error("_sha2: outputLen should be aligned to 32bit");
    const l = c / 4, f = this.get();
    if (l > f.length)
      throw new Error("_sha2: outputLen bigger than state");
    for (let u = 0; u < l; u++)
      a.setUint32(4 * u, f[u], s);
  }
  digest() {
    const { buffer: e, outputLen: r } = this;
    this.digestInto(e);
    const n = e.slice(0, r);
    return this.destroy(), n;
  }
  _cloneInto(e) {
    e || (e = new this.constructor()), e.set(...this.get());
    const { blockLen: r, buffer: n, length: i, finished: s, destroyed: o, pos: a } = this;
    return e.length = i, e.pos = a, e.finished = s, e.destroyed = o, i % r && e.buffer.set(n), e;
  }
}
const al = (t, e, r) => t & e ^ ~t & r, cl = (t, e, r) => t & e ^ t & r ^ e & r, ul = new Uint32Array([
  1116352408,
  1899447441,
  3049323471,
  3921009573,
  961987163,
  1508970993,
  2453635748,
  2870763221,
  3624381080,
  310598401,
  607225278,
  1426881987,
  1925078388,
  2162078206,
  2614888103,
  3248222580,
  3835390401,
  4022224774,
  264347078,
  604807628,
  770255983,
  1249150122,
  1555081692,
  1996064986,
  2554220882,
  2821834349,
  2952996808,
  3210313671,
  3336571891,
  3584528711,
  113926993,
  338241895,
  666307205,
  773529912,
  1294757372,
  1396182291,
  1695183700,
  1986661051,
  2177026350,
  2456956037,
  2730485921,
  2820302411,
  3259730800,
  3345764771,
  3516065817,
  3600352804,
  4094571909,
  275423344,
  430227734,
  506948616,
  659060556,
  883997877,
  958139571,
  1322822218,
  1537002063,
  1747873779,
  1955562222,
  2024104815,
  2227730452,
  2361852424,
  2428436474,
  2756734187,
  3204031479,
  3329325298
]), Ke = new Uint32Array([
  1779033703,
  3144134277,
  1013904242,
  2773480762,
  1359893119,
  2600822924,
  528734635,
  1541459225
]), We = new Uint32Array(64);
class Gs extends si {
  constructor() {
    super(64, 32, 8, !1), this.A = Ke[0] | 0, this.B = Ke[1] | 0, this.C = Ke[2] | 0, this.D = Ke[3] | 0, this.E = Ke[4] | 0, this.F = Ke[5] | 0, this.G = Ke[6] | 0, this.H = Ke[7] | 0;
  }
  get() {
    const { A: e, B: r, C: n, D: i, E: s, F: o, G: a, H: c } = this;
    return [e, r, n, i, s, o, a, c];
  }
  set(e, r, n, i, s, o, a, c) {
    this.A = e | 0, this.B = r | 0, this.C = n | 0, this.D = i | 0, this.E = s | 0, this.F = o | 0, this.G = a | 0, this.H = c | 0;
  }
  process(e, r) {
    for (let u = 0; u < 16; u++, r += 4)
      We[u] = e.getUint32(r, !1);
    for (let u = 16; u < 64; u++) {
      const h = We[u - 15], d = We[u - 2], p = Ee(h, 7) ^ Ee(h, 18) ^ h >>> 3, y = Ee(d, 17) ^ Ee(d, 19) ^ d >>> 10;
      We[u] = y + We[u - 7] + p + We[u - 16] | 0;
    }
    let { A: n, B: i, C: s, D: o, E: a, F: c, G: l, H: f } = this;
    for (let u = 0; u < 64; u++) {
      const h = Ee(a, 6) ^ Ee(a, 11) ^ Ee(a, 25), d = f + h + al(a, c, l) + ul[u] + We[u] | 0, y = (Ee(n, 2) ^ Ee(n, 13) ^ Ee(n, 22)) + cl(n, i, s) | 0;
      f = l, l = c, c = a, a = o + d | 0, o = s, s = i, i = n, n = d + y | 0;
    }
    n = n + this.A | 0, i = i + this.B | 0, s = s + this.C | 0, o = o + this.D | 0, a = a + this.E | 0, c = c + this.F | 0, l = l + this.G | 0, f = f + this.H | 0, this.set(n, i, s, o, a, c, l, f);
  }
  roundClean() {
    We.fill(0);
  }
  destroy() {
    this.set(0, 0, 0, 0, 0, 0, 0, 0), this.buffer.fill(0);
  }
}
class ll extends Gs {
  constructor() {
    super(), this.A = -1056596264, this.B = 914150663, this.C = 812702999, this.D = -150054599, this.E = -4191439, this.F = 1750603025, this.G = 1694076839, this.H = -1090891868, this.outputLen = 28;
  }
}
const jr = nt(() => new Gs()), fl = nt(() => new ll()), hl = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  sha256: jr,
  sha224: fl
}, Symbol.toStringTag, { value: "Module" })), dl = /* @__PURE__ */ Et(hl), dr = BigInt(2 ** 32 - 1), $n = BigInt(32);
function Zs(t, e = !1) {
  return e ? { h: Number(t & dr), l: Number(t >> $n & dr) } : { h: Number(t >> $n & dr) | 0, l: Number(t & dr) | 0 };
}
function pl(t, e = !1) {
  let r = new Uint32Array(t.length), n = new Uint32Array(t.length);
  for (let i = 0; i < t.length; i++) {
    const { h: s, l: o } = Zs(t[i], e);
    [r[i], n[i]] = [s, o];
  }
  return [r, n];
}
const yl = (t, e) => BigInt(t >>> 0) << $n | BigInt(e >>> 0), gl = (t, e, r) => t >>> r, bl = (t, e, r) => t << 32 - r | e >>> r, vl = (t, e, r) => t >>> r | e << 32 - r, wl = (t, e, r) => t << 32 - r | e >>> r, _l = (t, e, r) => t << 64 - r | e >>> r - 32, ml = (t, e, r) => t >>> r - 32 | e << 64 - r, xl = (t, e) => e, El = (t, e) => t, kl = (t, e, r) => t << r | e >>> 32 - r, Sl = (t, e, r) => e << r | t >>> 32 - r, Ol = (t, e, r) => e << r - 32 | t >>> 64 - r, Al = (t, e, r) => t << r - 32 | e >>> 64 - r;
function Cl(t, e, r, n) {
  const i = (e >>> 0) + (n >>> 0);
  return { h: t + r + (i / 2 ** 32 | 0) | 0, l: i | 0 };
}
const Il = (t, e, r) => (t >>> 0) + (e >>> 0) + (r >>> 0), Rl = (t, e, r, n) => e + r + n + (t / 2 ** 32 | 0) | 0, Tl = (t, e, r, n) => (t >>> 0) + (e >>> 0) + (r >>> 0) + (n >>> 0), Pl = (t, e, r, n, i) => e + r + n + i + (t / 2 ** 32 | 0) | 0, Bl = (t, e, r, n, i) => (t >>> 0) + (e >>> 0) + (r >>> 0) + (n >>> 0) + (i >>> 0), Ll = (t, e, r, n, i, s) => e + r + n + i + s + (t / 2 ** 32 | 0) | 0, N = {
  fromBig: Zs,
  split: pl,
  toBig: yl,
  shrSH: gl,
  shrSL: bl,
  rotrSH: vl,
  rotrSL: wl,
  rotrBH: _l,
  rotrBL: ml,
  rotr32H: xl,
  rotr32L: El,
  rotlSH: kl,
  rotlSL: Sl,
  rotlBH: Ol,
  rotlBL: Al,
  add: Cl,
  add3L: Il,
  add3H: Rl,
  add4L: Tl,
  add4H: Pl,
  add5H: Ll,
  add5L: Bl
}, [$l, ql] = N.split([
  "0x428a2f98d728ae22",
  "0x7137449123ef65cd",
  "0xb5c0fbcfec4d3b2f",
  "0xe9b5dba58189dbbc",
  "0x3956c25bf348b538",
  "0x59f111f1b605d019",
  "0x923f82a4af194f9b",
  "0xab1c5ed5da6d8118",
  "0xd807aa98a3030242",
  "0x12835b0145706fbe",
  "0x243185be4ee4b28c",
  "0x550c7dc3d5ffb4e2",
  "0x72be5d74f27b896f",
  "0x80deb1fe3b1696b1",
  "0x9bdc06a725c71235",
  "0xc19bf174cf692694",
  "0xe49b69c19ef14ad2",
  "0xefbe4786384f25e3",
  "0x0fc19dc68b8cd5b5",
  "0x240ca1cc77ac9c65",
  "0x2de92c6f592b0275",
  "0x4a7484aa6ea6e483",
  "0x5cb0a9dcbd41fbd4",
  "0x76f988da831153b5",
  "0x983e5152ee66dfab",
  "0xa831c66d2db43210",
  "0xb00327c898fb213f",
  "0xbf597fc7beef0ee4",
  "0xc6e00bf33da88fc2",
  "0xd5a79147930aa725",
  "0x06ca6351e003826f",
  "0x142929670a0e6e70",
  "0x27b70a8546d22ffc",
  "0x2e1b21385c26c926",
  "0x4d2c6dfc5ac42aed",
  "0x53380d139d95b3df",
  "0x650a73548baf63de",
  "0x766a0abb3c77b2a8",
  "0x81c2c92e47edaee6",
  "0x92722c851482353b",
  "0xa2bfe8a14cf10364",
  "0xa81a664bbc423001",
  "0xc24b8b70d0f89791",
  "0xc76c51a30654be30",
  "0xd192e819d6ef5218",
  "0xd69906245565a910",
  "0xf40e35855771202a",
  "0x106aa07032bbd1b8",
  "0x19a4c116b8d2d0c8",
  "0x1e376c085141ab53",
  "0x2748774cdf8eeb99",
  "0x34b0bcb5e19b48a8",
  "0x391c0cb3c5c95a63",
  "0x4ed8aa4ae3418acb",
  "0x5b9cca4f7763e373",
  "0x682e6ff3d6b2b8a3",
  "0x748f82ee5defb2fc",
  "0x78a5636f43172f60",
  "0x84c87814a1f0ab72",
  "0x8cc702081a6439ec",
  "0x90befffa23631e28",
  "0xa4506cebde82bde9",
  "0xbef9a3f7b2c67915",
  "0xc67178f2e372532b",
  "0xca273eceea26619c",
  "0xd186b8c721c0c207",
  "0xeada7dd6cde0eb1e",
  "0xf57d4f7fee6ed178",
  "0x06f067aa72176fba",
  "0x0a637dc5a2c898a6",
  "0x113f9804bef90dae",
  "0x1b710b35131c471b",
  "0x28db77f523047d84",
  "0x32caab7b40c72493",
  "0x3c9ebe0a15c9bebc",
  "0x431d67c49c100d4c",
  "0x4cc5d4becb3e42b6",
  "0x597f299cfc657e2a",
  "0x5fcb6fab3ad6faec",
  "0x6c44198c4a475817"
].map((t) => BigInt(t))), Ve = new Uint32Array(80), Ge = new Uint32Array(80);
class ar extends si {
  constructor() {
    super(128, 64, 16, !1), this.Ah = 1779033703, this.Al = -205731576, this.Bh = -1150833019, this.Bl = -2067093701, this.Ch = 1013904242, this.Cl = -23791573, this.Dh = -1521486534, this.Dl = 1595750129, this.Eh = 1359893119, this.El = -1377402159, this.Fh = -1694144372, this.Fl = 725511199, this.Gh = 528734635, this.Gl = -79577749, this.Hh = 1541459225, this.Hl = 327033209;
  }
  get() {
    const { Ah: e, Al: r, Bh: n, Bl: i, Ch: s, Cl: o, Dh: a, Dl: c, Eh: l, El: f, Fh: u, Fl: h, Gh: d, Gl: p, Hh: y, Hl: g } = this;
    return [e, r, n, i, s, o, a, c, l, f, u, h, d, p, y, g];
  }
  set(e, r, n, i, s, o, a, c, l, f, u, h, d, p, y, g) {
    this.Ah = e | 0, this.Al = r | 0, this.Bh = n | 0, this.Bl = i | 0, this.Ch = s | 0, this.Cl = o | 0, this.Dh = a | 0, this.Dl = c | 0, this.Eh = l | 0, this.El = f | 0, this.Fh = u | 0, this.Fl = h | 0, this.Gh = d | 0, this.Gl = p | 0, this.Hh = y | 0, this.Hl = g | 0;
  }
  process(e, r) {
    for (let m = 0; m < 16; m++, r += 4)
      Ve[m] = e.getUint32(r), Ge[m] = e.getUint32(r += 4);
    for (let m = 16; m < 80; m++) {
      const C = Ve[m - 15] | 0, O = Ge[m - 15] | 0, w = N.rotrSH(C, O, 1) ^ N.rotrSH(C, O, 8) ^ N.shrSH(C, O, 7), x = N.rotrSL(C, O, 1) ^ N.rotrSL(C, O, 8) ^ N.shrSL(C, O, 7), A = Ve[m - 2] | 0, B = Ge[m - 2] | 0, L = N.rotrSH(A, B, 19) ^ N.rotrBH(A, B, 61) ^ N.shrSH(A, B, 6), P = N.rotrSL(A, B, 19) ^ N.rotrBL(A, B, 61) ^ N.shrSL(A, B, 6), F = N.add4L(x, P, Ge[m - 7], Ge[m - 16]), z = N.add4H(F, w, L, Ve[m - 7], Ve[m - 16]);
      Ve[m] = z | 0, Ge[m] = F | 0;
    }
    let { Ah: n, Al: i, Bh: s, Bl: o, Ch: a, Cl: c, Dh: l, Dl: f, Eh: u, El: h, Fh: d, Fl: p, Gh: y, Gl: g, Hh: v, Hl: _ } = this;
    for (let m = 0; m < 80; m++) {
      const C = N.rotrSH(u, h, 14) ^ N.rotrSH(u, h, 18) ^ N.rotrBH(u, h, 41), O = N.rotrSL(u, h, 14) ^ N.rotrSL(u, h, 18) ^ N.rotrBL(u, h, 41), w = u & d ^ ~u & y, x = h & p ^ ~h & g, A = N.add5L(_, O, x, ql[m], Ge[m]), B = N.add5H(A, v, C, w, $l[m], Ve[m]), L = A | 0, P = N.rotrSH(n, i, 28) ^ N.rotrBH(n, i, 34) ^ N.rotrBH(n, i, 39), F = N.rotrSL(n, i, 28) ^ N.rotrBL(n, i, 34) ^ N.rotrBL(n, i, 39), z = n & s ^ n & a ^ s & a, G = i & o ^ i & c ^ o & c;
      v = y | 0, _ = g | 0, y = d | 0, g = p | 0, d = u | 0, p = h | 0, { h: u, l: h } = N.add(l | 0, f | 0, B | 0, L | 0), l = a | 0, f = c | 0, a = s | 0, c = o | 0, s = n | 0, o = i | 0;
      const E = N.add3L(L, F, G);
      n = N.add3H(E, B, P, z), i = E | 0;
    }
    ({ h: n, l: i } = N.add(this.Ah | 0, this.Al | 0, n | 0, i | 0)), { h: s, l: o } = N.add(this.Bh | 0, this.Bl | 0, s | 0, o | 0), { h: a, l: c } = N.add(this.Ch | 0, this.Cl | 0, a | 0, c | 0), { h: l, l: f } = N.add(this.Dh | 0, this.Dl | 0, l | 0, f | 0), { h: u, l: h } = N.add(this.Eh | 0, this.El | 0, u | 0, h | 0), { h: d, l: p } = N.add(this.Fh | 0, this.Fl | 0, d | 0, p | 0), { h: y, l: g } = N.add(this.Gh | 0, this.Gl | 0, y | 0, g | 0), { h: v, l: _ } = N.add(this.Hh | 0, this.Hl | 0, v | 0, _ | 0), this.set(n, i, s, o, a, c, l, f, u, h, d, p, y, g, v, _);
  }
  roundClean() {
    Ve.fill(0), Ge.fill(0);
  }
  destroy() {
    this.buffer.fill(0), this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  }
}
class Nl extends ar {
  constructor() {
    super(), this.Ah = -1942145080, this.Al = 424955298, this.Bh = 1944164710, this.Bl = -1982016298, this.Ch = 502970286, this.Cl = 855612546, this.Dh = 1738396948, this.Dl = 1479516111, this.Eh = 258812777, this.El = 2077511080, this.Fh = 2011393907, this.Fl = 79989058, this.Gh = 1067287976, this.Gl = 1780299464, this.Hh = 286451373, this.Hl = -1848208735, this.outputLen = 28;
  }
}
class Ul extends ar {
  constructor() {
    super(), this.Ah = 573645204, this.Al = -64227540, this.Bh = -1621794909, this.Bl = -934517566, this.Ch = 596883563, this.Cl = 1867755857, this.Dh = -1774684391, this.Dl = 1497426621, this.Eh = -1775747358, this.El = -1467023389, this.Fh = -1101128155, this.Fl = 1401305490, this.Gh = 721525244, this.Gl = 746961066, this.Hh = 246885852, this.Hl = -2117784414, this.outputLen = 32;
  }
}
class jl extends ar {
  constructor() {
    super(), this.Ah = -876896931, this.Al = -1056596264, this.Bh = 1654270250, this.Bl = 914150663, this.Ch = -1856437926, this.Cl = 812702999, this.Dh = 355462360, this.Dl = -150054599, this.Eh = 1731405415, this.El = -4191439, this.Fh = -1900787065, this.Fl = 1750603025, this.Gh = -619958771, this.Gl = 1694076839, this.Hh = 1203062813, this.Hl = -1090891868, this.outputLen = 48;
  }
}
const qn = nt(() => new ar()), Hl = nt(() => new Nl()), Ml = nt(() => new Ul()), Dl = nt(() => new jl()), zl = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  SHA512: ar,
  sha512: qn,
  sha512_224: Hl,
  sha512_256: Ml,
  sha384: Dl
}, Symbol.toStringTag, { value: "Module" })), Fl = /* @__PURE__ */ Et(zl), Kl = /* @__PURE__ */ Et(ol), Wl = /* @__PURE__ */ Et(Mu);
Object.defineProperty(de, "__esModule", { value: !0 });
var Ys = de.mnemonicToSeedSync = de.mnemonicToSeed = sa = de.validateMnemonic = de.entropyToMnemonic = de.mnemonicToEntropy = ra = de.generateMnemonic = void 0;
/*! scure-bip39 - MIT License (c) 2022 Patricio Palladino, Paul Miller (paulmillr.com) */
const Js = zu, Xs = xt, Vl = dl, Qs = Fl, Gl = Kl, pr = Wl, Zl = (t) => t[0] === "\u3042\u3044\u3053\u304F\u3057\u3093";
function ea(t) {
  if (typeof t != "string")
    throw new TypeError(`Invalid mnemonic type: ${typeof t}`);
  return t.normalize("NFKD");
}
function ai(t) {
  const e = ea(t), r = e.split(" ");
  if (![12, 15, 18, 21, 24].includes(r.length))
    throw new Error("Invalid mnemonic");
  return { nfkd: e, words: r };
}
function ta(t) {
  Js.default.bytes(t, 16, 20, 24, 28, 32);
}
function Yl(t, e = 128) {
  if (Js.default.number(e), e % 32 !== 0 || e > 256)
    throw new TypeError("Invalid entropy");
  return oa((0, Gl.randomBytes)(e / 8), t);
}
var ra = de.generateMnemonic = Yl;
const Jl = (t) => {
  const e = 8 - t.length / 4;
  return new Uint8Array([(0, Vl.sha256)(t)[0] >> e << e]);
};
function na(t) {
  if (!Array.isArray(t) || t.length !== 2048 || typeof t[0] != "string")
    throw new Error("Worlist: expected array of 2048 strings");
  return t.forEach((e) => {
    if (typeof e != "string")
      throw new Error(`Wordlist: non-string element: ${e}`);
  }), pr.utils.chain(pr.utils.checksum(1, Jl), pr.utils.radix2(11, !0), pr.utils.alphabet(t));
}
function ia(t, e) {
  const { words: r } = ai(t), n = na(e).decode(r);
  return ta(n), n;
}
de.mnemonicToEntropy = ia;
function oa(t, e) {
  return ta(t), na(e).encode(t).join(Zl(e) ? "\u3000" : " ");
}
de.entropyToMnemonic = oa;
function Xl(t, e) {
  try {
    ia(t, e);
  } catch {
    return !1;
  }
  return !0;
}
var sa = de.validateMnemonic = Xl;
const aa = (t) => ea(`mnemonic${t}`);
function Ql(t, e = "") {
  return (0, Xs.pbkdf2Async)(Qs.sha512, ai(t).nfkd, aa(e), { c: 2048, dkLen: 64 });
}
de.mnemonicToSeed = Ql;
function ef(t, e = "") {
  return (0, Xs.pbkdf2)(Qs.sha512, ai(t).nfkd, aa(e), { c: 2048, dkLen: 64 });
}
Ys = de.mnemonicToSeedSync = ef;
class ca extends oi {
  constructor(e, r) {
    super(), this.finished = !1, this.destroyed = !1, Qe.hash(e);
    const n = Ot(r);
    if (this.iHash = e.create(), typeof this.iHash.update != "function")
      throw new Error("Expected instance of class which extends utils.Hash");
    this.blockLen = this.iHash.blockLen, this.outputLen = this.iHash.outputLen;
    const i = this.blockLen, s = new Uint8Array(i);
    s.set(n.length > i ? e.create().update(n).digest() : n);
    for (let o = 0; o < s.length; o++)
      s[o] ^= 54;
    this.iHash.update(s), this.oHash = e.create();
    for (let o = 0; o < s.length; o++)
      s[o] ^= 106;
    this.oHash.update(s), s.fill(0);
  }
  update(e) {
    return Qe.exists(this), this.iHash.update(e), this;
  }
  digestInto(e) {
    Qe.exists(this), Qe.bytes(e, this.outputLen), this.finished = !0, this.iHash.digestInto(e), this.oHash.update(e), this.oHash.digestInto(e), this.destroy();
  }
  digest() {
    const e = new Uint8Array(this.oHash.outputLen);
    return this.digestInto(e), e;
  }
  _cloneInto(e) {
    e || (e = Object.create(Object.getPrototypeOf(this), {}));
    const { oHash: r, iHash: n, finished: i, destroyed: s, blockLen: o, outputLen: a } = this;
    return e = e, e.finished = i, e.destroyed = s, e.blockLen = o, e.outputLen = a, e.oHash = r._cloneInto(e.oHash), e.iHash = n._cloneInto(e.iHash), e;
  }
  destroy() {
    this.destroyed = !0, this.oHash.destroy(), this.iHash.destroy();
  }
}
const Nn = (t, e, r) => new ca(t, e).update(r).digest();
Nn.create = (t, e) => new ca(t, e);
const tf = new Uint8Array([7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8]), ua = Uint8Array.from({ length: 16 }, (t, e) => e), rf = ua.map((t) => (9 * t + 5) % 16);
let ci = [ua], ui = [rf];
for (let t = 0; t < 4; t++)
  for (let e of [ci, ui])
    e.push(e[t].map((r) => tf[r]));
const la = [
  [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8],
  [12, 13, 11, 15, 6, 9, 9, 7, 12, 15, 11, 13, 7, 8, 7, 7],
  [13, 15, 14, 11, 7, 7, 6, 8, 13, 14, 13, 12, 5, 5, 6, 9],
  [14, 11, 12, 14, 8, 6, 5, 5, 15, 12, 15, 14, 9, 9, 8, 6],
  [15, 12, 13, 13, 9, 5, 8, 6, 14, 11, 12, 11, 8, 6, 5, 5]
].map((t) => new Uint8Array(t)), nf = ci.map((t, e) => t.map((r) => la[e][r])), of = ui.map((t, e) => t.map((r) => la[e][r])), sf = new Uint32Array([0, 1518500249, 1859775393, 2400959708, 2840853838]), af = new Uint32Array([1352829926, 1548603684, 1836072691, 2053994217, 0]), yr = (t, e) => t << e | t >>> 32 - e;
function Zi(t, e, r, n) {
  return t === 0 ? e ^ r ^ n : t === 1 ? e & r | ~e & n : t === 2 ? (e | ~r) ^ n : t === 3 ? e & n | r & ~n : e ^ (r | ~n);
}
const gr = new Uint32Array(16);
class cf extends si {
  constructor() {
    super(64, 20, 8, !0), this.h0 = 1732584193, this.h1 = -271733879, this.h2 = -1732584194, this.h3 = 271733878, this.h4 = -1009589776;
  }
  get() {
    const { h0: e, h1: r, h2: n, h3: i, h4: s } = this;
    return [e, r, n, i, s];
  }
  set(e, r, n, i, s) {
    this.h0 = e | 0, this.h1 = r | 0, this.h2 = n | 0, this.h3 = i | 0, this.h4 = s | 0;
  }
  process(e, r) {
    for (let d = 0; d < 16; d++, r += 4)
      gr[d] = e.getUint32(r, !0);
    let n = this.h0 | 0, i = n, s = this.h1 | 0, o = s, a = this.h2 | 0, c = a, l = this.h3 | 0, f = l, u = this.h4 | 0, h = u;
    for (let d = 0; d < 5; d++) {
      const p = 4 - d, y = sf[d], g = af[d], v = ci[d], _ = ui[d], m = nf[d], C = of[d];
      for (let O = 0; O < 16; O++) {
        const w = yr(n + Zi(d, s, a, l) + gr[v[O]] + y, m[O]) + u | 0;
        n = u, u = l, l = yr(a, 10) | 0, a = s, s = w;
      }
      for (let O = 0; O < 16; O++) {
        const w = yr(i + Zi(p, o, c, f) + gr[_[O]] + g, C[O]) + h | 0;
        i = h, h = f, f = yr(c, 10) | 0, c = o, o = w;
      }
    }
    this.set(this.h1 + a + f | 0, this.h2 + l + h | 0, this.h3 + u + i | 0, this.h4 + n + o | 0, this.h0 + s + c | 0);
  }
  roundClean() {
    gr.fill(0);
  }
  destroy() {
    this.destroyed = !0, this.buffer.fill(0), this.set(0, 0, 0, 0, 0);
  }
}
const uf = nt(() => new cf()), br = ue.ProjectivePoint, ln = As(jr);
function Yi(t) {
  return BigInt(`0x${ni(t)}`);
}
function lf(t) {
  return Ws(t.toString(16).padStart(64, "0"));
}
const ff = ii("Bitcoin seed"), fn = { private: 76066276, public: 76067358 }, hn = 2147483648, hf = (t) => uf(jr(t)), df = (t) => ft(t).getUint32(0, !1), vr = (t) => {
  if (!Number.isSafeInteger(t) || t < 0 || t > 2 ** 32 - 1)
    throw new Error(`Invalid number=${t}. Should be from 0 to 2 ** 32 - 1`);
  const e = new Uint8Array(4);
  return ft(e).setUint32(0, t, !1), e;
};
class ct {
  get fingerprint() {
    if (!this.pubHash)
      throw new Error("No publicKey set!");
    return df(this.pubHash);
  }
  get identifier() {
    return this.pubHash;
  }
  get pubKeyHash() {
    return this.pubHash;
  }
  get privateKey() {
    return this.privKeyBytes || null;
  }
  get publicKey() {
    return this.pubKey || null;
  }
  get privateExtendedKey() {
    const e = this.privateKey;
    if (!e)
      throw new Error("No private key");
    return ln.encode(this.serialize(this.versions.private, er(new Uint8Array([0]), e)));
  }
  get publicExtendedKey() {
    if (!this.pubKey)
      throw new Error("No public key");
    return ln.encode(this.serialize(this.versions.public, this.pubKey));
  }
  static fromMasterSeed(e, r = fn) {
    if (Ye(e), 8 * e.length < 128 || 8 * e.length > 512)
      throw new Error(`HDKey: wrong seed length=${e.length}. Should be between 128 and 512 bits; 256 bits is advised)`);
    const n = Nn(qn, ff, e);
    return new ct({
      versions: r,
      chainCode: n.slice(32),
      privateKey: n.slice(0, 32)
    });
  }
  static fromExtendedKey(e, r = fn) {
    const n = ln.decode(e), i = ft(n), s = i.getUint32(0, !1), o = {
      versions: r,
      depth: n[4],
      parentFingerprint: i.getUint32(5, !1),
      index: i.getUint32(9, !1),
      chainCode: n.slice(13, 45)
    }, a = n.slice(45), c = a[0] === 0;
    if (s !== r[c ? "private" : "public"])
      throw new Error("Version mismatch");
    return c ? new ct({ ...o, privateKey: a.slice(1) }) : new ct({ ...o, publicKey: a });
  }
  static fromJSON(e) {
    return ct.fromExtendedKey(e.xpriv);
  }
  constructor(e) {
    if (this.depth = 0, this.index = 0, this.chainCode = null, this.parentFingerprint = 0, !e || typeof e != "object")
      throw new Error("HDKey.constructor must not be called directly");
    if (this.versions = e.versions || fn, this.depth = e.depth || 0, this.chainCode = e.chainCode, this.index = e.index || 0, this.parentFingerprint = e.parentFingerprint || 0, !this.depth && (this.parentFingerprint || this.index))
      throw new Error("HDKey: zero depth with non-zero index/parent fingerprint");
    if (e.publicKey && e.privateKey)
      throw new Error("HDKey: publicKey and privateKey at same time.");
    if (e.privateKey) {
      if (!ue.utils.isValidPrivateKey(e.privateKey))
        throw new Error("Invalid private key");
      this.privKey = typeof e.privateKey == "bigint" ? e.privateKey : Yi(e.privateKey), this.privKeyBytes = lf(this.privKey), this.pubKey = ue.getPublicKey(e.privateKey, !0);
    } else if (e.publicKey)
      this.pubKey = br.fromHex(e.publicKey).toRawBytes(!0);
    else
      throw new Error("HDKey: no public or private key provided");
    this.pubHash = hf(this.pubKey);
  }
  derive(e) {
    if (!/^[mM]'?/.test(e))
      throw new Error('Path must start with "m" or "M"');
    if (/^[mM]'?$/.test(e))
      return this;
    const r = e.replace(/^[mM]'?\//, "").split("/");
    let n = this;
    for (const i of r) {
      const s = /^(\d+)('?)$/.exec(i);
      if (!s || s.length !== 3)
        throw new Error(`Invalid child index: ${i}`);
      let o = +s[1];
      if (!Number.isSafeInteger(o) || o >= hn)
        throw new Error("Invalid index");
      s[2] === "'" && (o += hn), n = n.deriveChild(o);
    }
    return n;
  }
  deriveChild(e) {
    if (!this.pubKey || !this.chainCode)
      throw new Error("No publicKey or chainCode set");
    let r = vr(e);
    if (e >= hn) {
      const a = this.privateKey;
      if (!a)
        throw new Error("Could not derive hardened child key");
      r = er(new Uint8Array([0]), a, r);
    } else
      r = er(this.pubKey, r);
    const n = Nn(qn, this.chainCode, r), i = Yi(n.slice(0, 32)), s = n.slice(32);
    if (!ue.utils.isValidPrivateKey(i))
      throw new Error("Tweak bigger than curve order");
    const o = {
      versions: this.versions,
      chainCode: s,
      depth: this.depth + 1,
      parentFingerprint: this.fingerprint,
      index: e
    };
    try {
      if (this.privateKey) {
        const a = J(this.privKey + i, ue.CURVE.n);
        if (!ue.utils.isValidPrivateKey(a))
          throw new Error("The tweak was out of range or the resulted private key is invalid");
        o.privateKey = a;
      } else {
        const a = br.fromHex(this.pubKey).add(br.fromPrivateKey(i));
        if (a.equals(br.ZERO))
          throw new Error("The tweak was equal to negative P, which made the result key invalid");
        o.publicKey = a.toRawBytes(!0);
      }
      return new ct(o);
    } catch {
      return this.deriveChild(e + 1);
    }
  }
  sign(e) {
    if (!this.privateKey)
      throw new Error("No privateKey set!");
    return Ye(e, 32), ue.sign(e, this.privKey).toCompactRawBytes();
  }
  verify(e, r) {
    if (Ye(e, 32), Ye(r, 64), !this.publicKey)
      throw new Error("No publicKey set!");
    let n;
    try {
      n = ue.Signature.fromCompact(r);
    } catch {
      return !1;
    }
    return ue.verify(n, e, this.publicKey);
  }
  wipePrivateData() {
    return this.privKey = void 0, this.privKeyBytes && (this.privKeyBytes.fill(0), this.privKeyBytes = void 0), this;
  }
  toJSON() {
    return {
      xpriv: this.privateExtendedKey,
      xpub: this.publicExtendedKey
    };
  }
  serialize(e, r) {
    if (!this.chainCode)
      throw new Error("No chainCode set");
    return Ye(r, 33), er(vr(e), new Uint8Array([this.depth]), vr(this.parentFingerprint), vr(this.index), this.chainCode, r);
  }
}
var pf = Object.defineProperty, ie = (t, e) => {
  for (var r in e)
    pf(t, r, { get: e[r], enumerable: !0 });
};
function yf() {
  return ve(St.utils.randomPrivateKey());
}
function li(t) {
  return ve(St.getPublicKey(t));
}
var gf = {};
ie(gf, {
  MessageNode: () => fa,
  MessageQueue: () => ha,
  insertEventIntoAscendingList: () => wf,
  insertEventIntoDescendingList: () => vf,
  normalizeURL: () => bf,
  utf8Decoder: () => Je,
  utf8Encoder: () => Ie
});
var Je = new TextDecoder("utf-8"), Ie = new TextEncoder();
function bf(t) {
  let e = new URL(t);
  return e.pathname = e.pathname.replace(/\/+/g, "/"), e.pathname.endsWith("/") && (e.pathname = e.pathname.slice(0, -1)), (e.port === "80" && e.protocol === "ws:" || e.port === "443" && e.protocol === "wss:") && (e.port = ""), e.searchParams.sort(), e.hash = "", e.toString();
}
function vf(t, e) {
  var o;
  let r = 0, n = t.length - 1, i, s = r;
  if (n < 0)
    s = 0;
  else if (e.created_at < t[n].created_at)
    s = n + 1;
  else if (e.created_at >= t[r].created_at)
    s = r;
  else
    for (; ; ) {
      if (n <= r + 1) {
        s = n;
        break;
      }
      if (i = Math.floor(r + (n - r) / 2), t[i].created_at > e.created_at)
        r = i;
      else if (t[i].created_at < e.created_at)
        n = i;
      else {
        s = i;
        break;
      }
    }
  return ((o = t[s]) == null ? void 0 : o.id) !== e.id ? [
    ...t.slice(0, s),
    e,
    ...t.slice(s)
  ] : t;
}
function wf(t, e) {
  var o;
  let r = 0, n = t.length - 1, i, s = r;
  if (n < 0)
    s = 0;
  else if (e.created_at > t[n].created_at)
    s = n + 1;
  else if (e.created_at <= t[r].created_at)
    s = r;
  else
    for (; ; ) {
      if (n <= r + 1) {
        s = n;
        break;
      }
      if (i = Math.floor(r + (n - r) / 2), t[i].created_at < e.created_at)
        r = i;
      else if (t[i].created_at > e.created_at)
        n = i;
      else {
        s = i;
        break;
      }
    }
  return ((o = t[s]) == null ? void 0 : o.id) !== e.id ? [
    ...t.slice(0, s),
    e,
    ...t.slice(s)
  ] : t;
}
var fa = class {
  constructor(t) {
    I(this, "_value");
    I(this, "_next");
    this._value = t, this._next = null;
  }
  get value() {
    return this._value;
  }
  set value(t) {
    this._value = t;
  }
  get next() {
    return this._next;
  }
  set next(t) {
    this._next = t;
  }
}, ha = class {
  constructor() {
    I(this, "_first");
    I(this, "_last");
    I(this, "_size");
    this._first = null, this._last = null, this._size = 0;
  }
  get first() {
    return this._first;
  }
  set first(t) {
    this._first = t;
  }
  get last() {
    return this._last;
  }
  set last(t) {
    this._last = t;
  }
  get size() {
    return this._size;
  }
  set size(t) {
    this._size = t;
  }
  enqueue(t) {
    const e = new fa(t);
    return this._size === 0 || !this._last ? (this._first = e, this._last = e) : (this._last.next = e, this._last = e), this._size++, !0;
  }
  dequeue() {
    if (this._size === 0 || !this._first)
      return null;
    let t = this._first;
    return this._first = t.next, t.next = null, this._size--, t.value;
  }
};
function da(t, e) {
  let r = t;
  return r.pubkey = li(e), r.id = Hr(r), r.sig = pa(r, e), r;
}
function _f(t) {
  if (!fi(t))
    throw new Error("can't serialize event with wrong or missing properties");
  return JSON.stringify([
    0,
    t.pubkey,
    t.created_at,
    t.kind,
    t.tags,
    t.content
  ]);
}
function Hr(t) {
  let e = Yn(Ie.encode(_f(t)));
  return ve(e);
}
var mf = (t) => t instanceof Object;
function fi(t) {
  if (!mf(t) || typeof t.kind != "number" || typeof t.content != "string" || typeof t.created_at != "number" || typeof t.pubkey != "string" || !t.pubkey.match(/^[a-f0-9]{64}$/) || !Array.isArray(t.tags))
    return !1;
  for (let e = 0; e < t.tags.length; e++) {
    let r = t.tags[e];
    if (!Array.isArray(r))
      return !1;
    for (let n = 0; n < r.length; n++)
      if (typeof r[n] == "object")
        return !1;
  }
  return !0;
}
function hi(t) {
  try {
    return St.verify(t.sig, Hr(t), t.pubkey);
  } catch {
    return !1;
  }
}
function pa(t, e) {
  return ve(St.sign(Hr(t), e));
}
function ya(t, e) {
  if (t.ids && t.ids.indexOf(e.id) === -1 && !t.ids.some((r) => e.id.startsWith(r)) || t.kinds && t.kinds.indexOf(e.kind) === -1 || t.authors && t.authors.indexOf(e.pubkey) === -1 && !t.authors.some((r) => e.pubkey.startsWith(r)))
    return !1;
  for (let r in t)
    if (r[0] === "#") {
      let n = r.slice(1), i = t[`#${n}`];
      if (i && !e.tags.find(
        ([s, o]) => s === r.slice(1) && i.indexOf(o) !== -1
      ))
        return !1;
    }
  return !(t.since && e.created_at < t.since || t.until && e.created_at >= t.until);
}
function xf(t, e) {
  for (let r = 0; r < t.length; r++)
    if (ya(t[r], e))
      return !0;
  return !1;
}
var Ef = {};
ie(Ef, {
  getHex64: () => Mr,
  getInt: () => ga,
  getSubscriptionId: () => ba,
  matchEventId: () => kf,
  matchEventKind: () => Of,
  matchEventPubkey: () => Sf
});
function Mr(t, e) {
  let r = e.length + 3, n = t.indexOf(`"${e}":`) + r, i = t.slice(n).indexOf('"') + n + 1;
  return t.slice(i, i + 64);
}
function ga(t, e) {
  let r = e.length, n = t.indexOf(`"${e}":`) + r + 3, i = t.slice(n), s = Math.min(i.indexOf(","), i.indexOf("}"));
  return parseInt(i.slice(0, s), 10);
}
function ba(t) {
  let e = t.slice(0, 22).indexOf('"EVENT"');
  if (e === -1)
    return null;
  let r = t.slice(e + 7 + 1).indexOf('"');
  if (r === -1)
    return null;
  let n = e + 7 + 1 + r, i = t.slice(n + 1, 80).indexOf('"');
  if (i === -1)
    return null;
  let s = n + 1 + i;
  return t.slice(n + 1, s);
}
function kf(t, e) {
  return e === Mr(t, "id");
}
function Sf(t, e) {
  return e === Mr(t, "pubkey");
}
function Of(t, e) {
  return e === ga(t, "kind");
}
var Ji = () => ({
  connect: [],
  disconnect: [],
  error: [],
  notice: [],
  auth: []
});
function Af(t, e = {}) {
  let { listTimeout: r = 3e3, getTimeout: n = 3e3, countTimeout: i = 3e3 } = e;
  var s, o = {}, a = Ji(), c = {}, l = {}, f;
  async function u() {
    return f || (f = new Promise((v, _) => {
      try {
        s = new WebSocket(t);
      } catch (w) {
        _(w);
      }
      s.onopen = () => {
        a.connect.forEach((w) => w()), v();
      }, s.onerror = () => {
        f = void 0, a.error.forEach((w) => w()), _();
      }, s.onclose = async () => {
        f = void 0, a.disconnect.forEach((w) => w());
      };
      let m = new ha(), C;
      s.onmessage = (w) => {
        m.enqueue(w.data), C || (C = setInterval(O, 0));
      };
      function O() {
        var A, B, L;
        if (m.size === 0) {
          clearInterval(C), C = null;
          return;
        }
        var w = m.dequeue();
        if (!w)
          return;
        let x = ba(w);
        if (x) {
          let P = o[x];
          if (P && P.alreadyHaveEvent && P.alreadyHaveEvent(Mr(w, "id"), t))
            return;
        }
        try {
          let P = JSON.parse(w);
          switch (P[0]) {
            case "EVENT": {
              let E = P[1], R = P[2];
              fi(R) && o[E] && (o[E].skipVerification || hi(R)) && xf(o[E].filters, R) && (o[E], (((A = c[E]) == null ? void 0 : A.event) || []).forEach((q) => q(R)));
              return;
            }
            case "COUNT":
              let F = P[1], z = P[2];
              o[F] && (((B = c[F]) == null ? void 0 : B.count) || []).forEach((E) => E(z));
              return;
            case "EOSE": {
              let E = P[1];
              E in c && (c[E].eose.forEach((R) => R()), c[E].eose = []);
              return;
            }
            case "OK": {
              let E = P[1], R = P[2], q = P[3] || "";
              E in l && (R ? l[E].ok.forEach((H) => H()) : l[E].failed.forEach((H) => H(q)), l[E].ok = [], l[E].failed = []);
              return;
            }
            case "NOTICE":
              let G = P[1];
              a.notice.forEach((E) => E(G));
              return;
            case "AUTH": {
              let E = P[1];
              (L = a.auth) == null || L.forEach((R) => R(E));
              return;
            }
          }
        } catch {
          return;
        }
      }
    }), f);
  }
  function h() {
    return (s == null ? void 0 : s.readyState) === 1;
  }
  async function d() {
    h() || await u();
  }
  async function p(v) {
    let _ = JSON.stringify(v);
    if (!(!h() && (await new Promise((m) => setTimeout(m, 1e3)), !h())))
      try {
        s.send(_);
      } catch (m) {
        console.log(m);
      }
  }
  const y = (v, {
    verb: _ = "REQ",
    skipVerification: m = !1,
    alreadyHaveEvent: C = null,
    id: O = Math.random().toString().slice(2)
  } = {}) => {
    let w = O;
    return o[w] = {
      id: w,
      filters: v,
      skipVerification: m,
      alreadyHaveEvent: C
    }, p([_, w, ...v]), {
      sub: (x, A = {}) => y(x || v, {
        skipVerification: A.skipVerification || m,
        alreadyHaveEvent: A.alreadyHaveEvent || C,
        id: w
      }),
      unsub: () => {
        delete o[w], delete c[w], p(["CLOSE", w]);
      },
      on: (x, A) => {
        c[w] = c[w] || {
          event: [],
          count: [],
          eose: []
        }, c[w][x].push(A);
      },
      off: (x, A) => {
        let B = c[w], L = B[x].indexOf(A);
        L >= 0 && B[x].splice(L, 1);
      }
    };
  };
  function g(v, _) {
    if (!v.id)
      throw new Error(`event ${v} has no id`);
    let m = v.id;
    return p([_, v]), {
      on: (C, O) => {
        l[m] = l[m] || {
          ok: [],
          failed: []
        }, l[m][C].push(O);
      },
      off: (C, O) => {
        let w = l[m];
        if (!w)
          return;
        let x = w[C].indexOf(O);
        x >= 0 && w[C].splice(x, 1);
      }
    };
  }
  return {
    url: t,
    sub: y,
    on: (v, _) => {
      a[v].push(_), v === "connect" && (s == null ? void 0 : s.readyState) === 1 && _();
    },
    off: (v, _) => {
      let m = a[v].indexOf(_);
      m !== -1 && a[v].splice(m, 1);
    },
    list: (v, _) => new Promise((m) => {
      let C = y(v, _), O = [], w = setTimeout(() => {
        C.unsub(), m(O);
      }, r);
      C.on("eose", () => {
        C.unsub(), clearTimeout(w), m(O);
      }), C.on("event", (x) => {
        O.push(x);
      });
    }),
    get: (v, _) => new Promise((m) => {
      let C = y([v], _), O = setTimeout(() => {
        C.unsub(), m(null);
      }, n);
      C.on("event", (w) => {
        C.unsub(), clearTimeout(O), m(w);
      });
    }),
    count: (v) => new Promise((_) => {
      let m = y(v, { ...y, verb: "COUNT" }), C = setTimeout(() => {
        m.unsub(), _(null);
      }, i);
      m.on("count", (O) => {
        m.unsub(), clearTimeout(C), _(O);
      });
    }),
    publish(v) {
      return g(v, "EVENT");
    },
    auth(v) {
      return g(v, "AUTH");
    },
    connect: d,
    close() {
      a = Ji(), c = {}, l = {}, s.readyState === WebSocket.OPEN && (s == null || s.close());
    },
    get status() {
      var v;
      return (v = s == null ? void 0 : s.readyState) != null ? v : 3;
    }
  };
}
var we = {};
ie(we, {
  BECH32_REGEX: () => va,
  decode: () => Dr,
  naddrEncode: () => Bf,
  neventEncode: () => Pf,
  noteEncode: () => Rf,
  nprofileEncode: () => Tf,
  npubEncode: () => If,
  nrelayEncode: () => Lf,
  nsecEncode: () => Cf
});
var At = 5e3, va = /[\x21-\x7E]{1,83}1[023456789acdefghjklmnpqrstuvwxyz]{6,}/;
function Dr(t) {
  var i, s, o, a, c, l, f;
  let { prefix: e, words: r } = te.decode(t, At), n = new Uint8Array(te.fromWords(r));
  switch (e) {
    case "nprofile": {
      let u = wr(n);
      if (!((i = u[0]) != null && i[0]))
        throw new Error("missing TLV 0 for nprofile");
      if (u[0][0].length !== 32)
        throw new Error("TLV 0 should be 32 bytes");
      return {
        type: "nprofile",
        data: {
          pubkey: ve(u[0][0]),
          relays: u[1] ? u[1].map((h) => Je.decode(h)) : []
        }
      };
    }
    case "nevent": {
      let u = wr(n);
      if (!((s = u[0]) != null && s[0]))
        throw new Error("missing TLV 0 for nevent");
      if (u[0][0].length !== 32)
        throw new Error("TLV 0 should be 32 bytes");
      if (u[2] && u[2][0].length !== 32)
        throw new Error("TLV 2 should be 32 bytes");
      return {
        type: "nevent",
        data: {
          id: ve(u[0][0]),
          relays: u[1] ? u[1].map((h) => Je.decode(h)) : [],
          author: (o = u[2]) != null && o[0] ? ve(u[2][0]) : void 0
        }
      };
    }
    case "naddr": {
      let u = wr(n);
      if (!((a = u[0]) != null && a[0]))
        throw new Error("missing TLV 0 for naddr");
      if (!((c = u[2]) != null && c[0]))
        throw new Error("missing TLV 2 for naddr");
      if (u[2][0].length !== 32)
        throw new Error("TLV 2 should be 32 bytes");
      if (!((l = u[3]) != null && l[0]))
        throw new Error("missing TLV 3 for naddr");
      if (u[3][0].length !== 4)
        throw new Error("TLV 3 should be 4 bytes");
      return {
        type: "naddr",
        data: {
          identifier: Je.decode(u[0][0]),
          pubkey: ve(u[2][0]),
          kind: parseInt(ve(u[3][0]), 16),
          relays: u[1] ? u[1].map((h) => Je.decode(h)) : []
        }
      };
    }
    case "nrelay": {
      let u = wr(n);
      if (!((f = u[0]) != null && f[0]))
        throw new Error("missing TLV 0 for nrelay");
      return {
        type: "nrelay",
        data: Je.decode(u[0][0])
      };
    }
    case "nsec":
    case "npub":
    case "note":
      return { type: e, data: ve(n) };
    default:
      throw new Error(`unknown prefix ${e}`);
  }
}
function wr(t) {
  let e = {}, r = t;
  for (; r.length > 0; ) {
    let n = r[0], i = r[1];
    if (!i)
      throw new Error(`malformed TLV ${n}`);
    let s = r.slice(2, 2 + i);
    if (r = r.slice(2 + i), s.length < i)
      throw new Error(`not enough data to read on TLV ${n}`);
    e[n] = e[n] || [], e[n].push(s);
  }
  return e;
}
function Cf(t) {
  return di("nsec", t);
}
function If(t) {
  return di("npub", t);
}
function Rf(t) {
  return di("note", t);
}
function di(t, e) {
  let r = _t(e), n = te.toWords(r);
  return te.encode(t, n, At);
}
function Tf(t) {
  let e = zr({
    0: [_t(t.pubkey)],
    1: (t.relays || []).map((n) => Ie.encode(n))
  }), r = te.toWords(e);
  return te.encode("nprofile", r, At);
}
function Pf(t) {
  let e = zr({
    0: [_t(t.id)],
    1: (t.relays || []).map((n) => Ie.encode(n)),
    2: t.author ? [_t(t.author)] : []
  }), r = te.toWords(e);
  return te.encode("nevent", r, At);
}
function Bf(t) {
  let e = new ArrayBuffer(4);
  new DataView(e).setUint32(0, t.kind, !1);
  let r = zr({
    0: [Ie.encode(t.identifier)],
    1: (t.relays || []).map((i) => Ie.encode(i)),
    2: [_t(t.pubkey)],
    3: [new Uint8Array(e)]
  }), n = te.toWords(r);
  return te.encode("naddr", n, At);
}
function Lf(t) {
  let e = zr({
    0: [Ie.encode(t)]
  }), r = te.toWords(e);
  return te.encode("nrelay", r, At);
}
function zr(t) {
  let e = [];
  return Object.entries(t).forEach(([r, n]) => {
    n.forEach((i) => {
      let s = new Uint8Array(i.length + 2);
      s.set([parseInt(r)], 0), s.set([i.length], 1), s.set(i, 2), e.push(s);
    });
  }), _u(...e);
}
var Un = {};
ie(Un, {
  decrypt: () => qf,
  encrypt: () => $f
});
typeof crypto < "u" && !crypto.subtle && crypto.webcrypto && (crypto.subtle = crypto.webcrypto.subtle);
async function $f(t, e, r) {
  const n = ue.getSharedSecret(t, "02" + e), i = wa(n);
  let s = Uint8Array.from(xu(16)), o = Ie.encode(r), a = await crypto.subtle.importKey(
    "raw",
    i,
    { name: "AES-CBC" },
    !1,
    ["encrypt"]
  ), c = await crypto.subtle.encrypt(
    { name: "AES-CBC", iv: s },
    a,
    o
  ), l = mt.encode(new Uint8Array(c)), f = mt.encode(new Uint8Array(s.buffer));
  return `${l}?iv=${f}`;
}
async function qf(t, e, r) {
  let [n, i] = r.split("?iv="), s = ue.getSharedSecret(t, "02" + e), o = wa(s), a = await crypto.subtle.importKey(
    "raw",
    o,
    { name: "AES-CBC" },
    !1,
    ["decrypt"]
  ), c = mt.decode(n), l = mt.decode(i), f = await crypto.subtle.decrypt(
    { name: "AES-CBC", iv: l },
    a,
    c
  );
  return Je.decode(f);
}
function wa(t) {
  return t.slice(1, 33);
}
var _a = {};
ie(_a, {
  NIP05_REGEX: () => ma,
  queryProfile: () => jf,
  searchDomain: () => Uf,
  useFetchImplementation: () => Nf
});
var ma = /^(?:([\w.+-]+)@)?([\w.-]+)$/, Fr;
try {
  Fr = fetch;
} catch {
}
function Nf(t) {
  Fr = t;
}
async function Uf(t, e = "") {
  try {
    return (await (await Fr(`https://${t}/.well-known/nostr.json?name=${e}`)).json()).names;
  } catch {
    return {};
  }
}
async function jf(t) {
  const e = t.match(ma);
  if (!e)
    return null;
  const [r, n = "_", i] = e;
  try {
    const s = await Fr(`https://${i}/.well-known/nostr.json?name=${n}`), { names: o, relays: a } = Hf(await s.json()), c = o[n];
    return c ? { pubkey: c, relays: a == null ? void 0 : a[c] } : null;
  } catch {
    return null;
  }
}
function Hf(t) {
  const e = {
    names: {}
  };
  for (const [r, n] of Object.entries(t.names))
    typeof r == "string" && typeof n == "string" && (e.names[r] = n);
  if (t.relays) {
    e.relays = {};
    for (const [r, n] of Object.entries(t.relays))
      typeof r == "string" && Array.isArray(n) && (e.relays[r] = n.filter((i) => typeof i == "string"));
  }
  return e;
}
var Mf = {};
ie(Mf, {
  generateSeedWords: () => zf,
  privateKeyFromSeedWords: () => Df,
  validateWords: () => Ff
});
function Df(t, e) {
  let n = ct.fromMasterSeed(Ys(t, e)).derive("m/44'/1237'/0'/0/0").privateKey;
  if (!n)
    throw new Error("could not derive private key");
  return ve(n);
}
function zf() {
  return ra(Qn);
}
function Ff(t) {
  return sa(t, Qn);
}
var Kf = {};
ie(Kf, {
  parse: () => Wf
});
function Wf(t) {
  const e = {
    reply: void 0,
    root: void 0,
    mentions: [],
    profiles: []
  }, r = [];
  for (const n of t.tags)
    n[0] === "e" && n[1] && r.push(n), n[0] === "p" && n[1] && e.profiles.push({
      pubkey: n[1],
      relays: n[2] ? [n[2]] : []
    });
  for (let n = 0; n < r.length; n++) {
    const i = r[n], [s, o, a, c] = i, l = {
      id: o,
      relays: a ? [a] : []
    }, f = n === 0, u = n === r.length - 1;
    if (c === "root") {
      e.root = l;
      continue;
    }
    if (c === "reply") {
      e.reply = l;
      continue;
    }
    if (c === "mention") {
      e.mentions.push(l);
      continue;
    }
    if (f) {
      e.root = l;
      continue;
    }
    if (u) {
      e.reply = l;
      continue;
    }
    e.mentions.push(l);
  }
  return e;
}
var Vf = {};
ie(Vf, {
  getPow: () => Gf
});
function Gf(t) {
  return Zf(_t(t));
}
function Zf(t) {
  let e, r, n;
  for (r = 0, e = 0; r < t.length && (n = Yf(t[r]), e += n, n === 8); r++)
    ;
  return e;
}
function Yf(t) {
  let e = 0;
  if (t === 0)
    return 8;
  for (; t >>= 1; )
    e++;
  return 7 - e;
}
var Jf = {};
ie(Jf, {
  finishRepostEvent: () => Xf,
  getRepostedEvent: () => Qf,
  getRepostedEventPointer: () => xa
});
function Xf(t, e, r, n) {
  var i;
  return da({
    kind: 6,
    tags: [
      ...(i = t.tags) != null ? i : [],
      ["e", e.id, r],
      ["p", e.pubkey]
    ],
    content: t.content === "" ? "" : JSON.stringify(e),
    created_at: t.created_at
  }, n);
}
function xa(t) {
  if (t.kind !== 6)
    return;
  let e, r;
  for (let n = t.tags.length - 1; n >= 0 && (e === void 0 || r === void 0); n--) {
    const i = t.tags[n];
    i.length >= 2 && (i[0] === "e" && e === void 0 ? e = i : i[0] === "p" && r === void 0 && (r = i));
  }
  if (e !== void 0)
    return {
      id: e[1],
      relays: [e[2], r == null ? void 0 : r[2]].filter((n) => typeof n == "string"),
      author: r == null ? void 0 : r[1]
    };
}
function Qf(t, { skipVerification: e } = {}) {
  const r = xa(t);
  if (r === void 0 || t.content === "")
    return;
  let n;
  try {
    n = JSON.parse(t.content);
  } catch {
    return;
  }
  if (n.id === r.id && !(!e && !hi(n)))
    return n;
}
var eh = {};
ie(eh, {
  NOSTR_URI_REGEX: () => Kr,
  parse: () => rh,
  test: () => th
});
var Kr = new RegExp(`nostr:(${va.source})`);
function th(t) {
  return typeof t == "string" && new RegExp(`^${Kr.source}$`).test(t);
}
function rh(t) {
  const e = t.match(new RegExp(`^${Kr.source}$`));
  if (!e)
    throw new Error(`Invalid Nostr URI: ${t}`);
  return {
    uri: e[0],
    value: e[1],
    decoded: Dr(e[1])
  };
}
var nh = {};
ie(nh, {
  finishReactionEvent: () => ih,
  getReactedEventPointer: () => oh
});
function ih(t, e, r) {
  var i, s;
  const n = e.tags.filter(
    (o) => o.length >= 2 && (o[0] === "e" || o[0] === "p")
  );
  return da({
    ...t,
    kind: 7,
    tags: [
      ...(i = t.tags) != null ? i : [],
      ...n,
      ["e", e.id],
      ["p", e.pubkey]
    ],
    content: (s = t.content) != null ? s : "+"
  }, r);
}
function oh(t) {
  if (t.kind !== 7)
    return;
  let e, r;
  for (let n = t.tags.length - 1; n >= 0 && (e === void 0 || r === void 0); n--) {
    const i = t.tags[n];
    i.length >= 2 && (i[0] === "e" && e === void 0 ? e = i : i[0] === "p" && r === void 0 && (r = i));
  }
  if (!(e === void 0 || r === void 0))
    return {
      id: e[1],
      relays: [e[2], r[2]].filter((n) => n !== void 0),
      author: r[1]
    };
}
var sh = {};
ie(sh, {
  createDelegation: () => ah,
  getDelegator: () => ch
});
function ah(t, e) {
  let r = [];
  (e.kind || -1) >= 0 && r.push(`kind=${e.kind}`), e.until && r.push(`created_at<${e.until}`), e.since && r.push(`created_at>${e.since}`);
  let n = r.join("&");
  if (n === "")
    throw new Error("refusing to create a delegation without any conditions");
  let i = Yn(
    Ie.encode(`nostr:delegation:${e.pubkey}:${n}`)
  ), s = ve(
    St.sign(i, t)
  );
  return {
    from: li(t),
    to: e.pubkey,
    cond: n,
    sig: s
  };
}
function ch(t) {
  let e = t.tags.find((a) => a[0] === "delegation" && a.length >= 4);
  if (!e)
    return null;
  let r = e[1], n = e[2], i = e[3], s = n.split("&");
  for (let a = 0; a < s.length; a++) {
    let [c, l, f] = s[a].split(/\b/);
    if (!(c === "kind" && l === "=" && t.kind === parseInt(f))) {
      if (c === "created_at" && l === "<" && t.created_at < parseInt(f))
        continue;
      if (c === "created_at" && l === ">" && t.created_at > parseInt(f))
        continue;
      return null;
    }
  }
  let o = Yn(
    Ie.encode(`nostr:delegation:${t.pubkey}:${n}`)
  );
  return St.verify(i, o, r) ? r : null;
}
var uh = {};
ie(uh, {
  matchAll: () => lh,
  regex: () => pi,
  replaceAll: () => fh
});
var pi = () => new RegExp(`\\b${Kr.source}\\b`, "g");
function* lh(t) {
  const e = t.matchAll(pi());
  for (const r of e) {
    const [n, i] = r;
    yield {
      uri: n,
      value: i,
      decoded: Dr(i),
      start: r.index,
      end: r.index + n.length
    };
  }
}
function fh(t, e) {
  return t.replaceAll(pi(), (r, n) => e({
    uri: r,
    value: n,
    decoded: Dr(n)
  }));
}
var hh = {};
ie(hh, {
  useFetchImplementation: () => dh,
  validateGithub: () => ph
});
var yi;
try {
  yi = fetch;
} catch {
}
function dh(t) {
  yi = t;
}
async function ph(t, e, r) {
  try {
    return await (await yi(`https://gist.github.com/${e}/${r}/raw`)).text() === `Verifying that I control the following Nostr public key: ${t}`;
  } catch {
    return !1;
  }
}
var yh = {};
ie(yh, {
  authenticate: () => gh
});
var gh = async ({
  challenge: t,
  relay: e,
  sign: r
}) => {
  const n = {
    kind: 22242,
    created_at: Math.floor(Date.now() / 1e3),
    tags: [
      ["relay", e.url],
      ["challenge", t]
    ],
    content: ""
  }, i = e.auth(await r(n));
  return new Promise((s, o) => {
    i.on("ok", function a() {
      i.off("ok", a), s();
    }), i.on("failed", function a(c) {
      i.off("failed", a), o(c);
    });
  });
}, Ea = {};
ie(Ea, {
  getZapEndpoint: () => vh,
  makeZapReceipt: () => mh,
  makeZapRequest: () => wh,
  useFetchImplementation: () => bh,
  validateZapRequest: () => _h
});
var gi;
try {
  gi = fetch;
} catch {
}
function bh(t) {
  gi = t;
}
async function vh(t) {
  try {
    let e = "", { lud06: r, lud16: n } = JSON.parse(t.content);
    if (r) {
      let { words: o } = te.decode(r, 1e3), a = te.fromWords(o);
      e = Je.decode(a);
    } else if (n) {
      let [o, a] = n.split("@");
      e = `https://${a}/.well-known/lnurlp/${o}`;
    } else
      return null;
    let s = await (await gi(e)).json();
    if (s.allowsNostr && s.nostrPubkey)
      return s.callback;
  } catch {
  }
  return null;
}
function wh({
  profile: t,
  event: e,
  amount: r,
  relays: n,
  comment: i = ""
}) {
  if (!r)
    throw new Error("amount not given");
  if (!t)
    throw new Error("profile not given");
  let s = {
    kind: 9734,
    created_at: Math.round(Date.now() / 1e3),
    content: i,
    tags: [
      ["p", t],
      ["amount", r.toString()],
      ["relays", ...n]
    ]
  };
  return e && s.tags.push(["e", e]), s;
}
function _h(t) {
  let e;
  try {
    e = JSON.parse(t);
  } catch {
    return "Invalid zap request JSON.";
  }
  if (!fi(e))
    return "Zap request is not a valid Nostr event.";
  if (!hi(e))
    return "Invalid signature on zap request.";
  let r = e.tags.find(([s, o]) => s === "p" && o);
  if (!r)
    return "Zap request doesn't have a 'p' tag.";
  if (!r[1].match(/^[a-f0-9]{64}$/))
    return "Zap request 'p' tag is not valid hex.";
  let n = e.tags.find(([s, o]) => s === "e" && o);
  return n && !n[1].match(/^[a-f0-9]{64}$/) ? "Zap request 'e' tag is not valid hex." : e.tags.find(([s, o]) => s === "relays" && o) ? null : "Zap request doesn't have a 'relays' tag.";
}
function mh({
  zapRequest: t,
  preimage: e,
  bolt11: r,
  paidAt: n
}) {
  let s = JSON.parse(t).tags.filter(
    ([a]) => a === "e" || a === "p" || a === "a"
  ), o = {
    kind: 9735,
    created_at: Math.round(n.getTime() / 1e3),
    content: "",
    tags: [
      ...s,
      ["bolt11", r],
      ["description", t]
    ]
  };
  return e && o.tags.push(["preimage", e]), o;
}
var cr = {};
Object.defineProperty(cr, "__esModule", { value: !0 });
cr.is_node = void 0;
var dn = null;
function xh() {
  return dn === null && (dn = typeof S == "object" && typeof S.process == "object" && typeof S.process.versions == "object" && typeof S.process.versions.node < "u"), dn;
}
cr.is_node = xh;
var pn = {}, yn, Xi;
function Eh() {
  if (Xi)
    return yn;
  Xi = 1;
  var t = function() {
    if (typeof self == "object" && self)
      return self;
    if (typeof window == "object" && window)
      return window;
    throw new Error("Unable to resolve global `this`");
  };
  return yn = function() {
    if (this)
      return this;
    if (typeof globalThis == "object" && globalThis)
      return globalThis;
    try {
      Object.defineProperty(Object.prototype, "__global__", {
        get: function() {
          return this;
        },
        configurable: !0
      });
    } catch {
      return t();
    }
    try {
      return __global__ || t();
    } finally {
      delete Object.prototype.__global__;
    }
  }(), yn;
}
const kh = "websocket", Sh = "Websocket Client & Server Library implementing the WebSocket protocol as specified in RFC 6455.", Oh = [
  "websocket",
  "websockets",
  "socket",
  "networking",
  "comet",
  "push",
  "RFC-6455",
  "realtime",
  "server",
  "client"
], Ah = "Brian McKelvey <theturtle32@gmail.com> (https://github.com/theturtle32)", Ch = [
  "I\xF1aki Baz Castillo <ibc@aliax.net> (http://dev.sipdoc.net)"
], Ih = "1.0.34", Rh = {
  type: "git",
  url: "https://github.com/theturtle32/WebSocket-Node.git"
}, Th = "https://github.com/theturtle32/WebSocket-Node", Ph = {
  node: ">=4.0.0"
}, Bh = {
  bufferutil: "^4.0.1",
  debug: "^2.2.0",
  "es5-ext": "^0.10.50",
  "typedarray-to-buffer": "^3.1.5",
  "utf-8-validate": "^5.0.2",
  yaeti: "^0.0.6"
}, Lh = {
  "buffer-equal": "^1.0.0",
  gulp: "^4.0.2",
  "gulp-jshint": "^2.0.4",
  "jshint-stylish": "^2.2.1",
  jshint: "^2.0.0",
  tape: "^4.9.1"
}, $h = {
  verbose: !1
}, qh = {
  test: "tape test/unit/*.js",
  gulp: "gulp"
}, Nh = "index", Uh = {
  lib: "./lib"
}, jh = "lib/browser.js", Hh = "Apache-2.0", Mh = {
  name: kh,
  description: Sh,
  keywords: Oh,
  author: Ah,
  contributors: Ch,
  version: Ih,
  repository: Rh,
  homepage: Th,
  engines: Ph,
  dependencies: Bh,
  devDependencies: Lh,
  config: $h,
  scripts: qh,
  main: Nh,
  directories: Uh,
  browser: jh,
  license: Hh
};
var gn, Qi;
function Dh() {
  return Qi || (Qi = 1, gn = Mh.version), gn;
}
var bn, eo;
function zh() {
  if (eo)
    return bn;
  eo = 1;
  var t;
  if (typeof globalThis == "object")
    t = globalThis;
  else
    try {
      t = Eh();
    } catch {
    } finally {
      if (!t && typeof window < "u" && (t = window), !t)
        throw new Error("Could not determine global this");
    }
  var e = t.WebSocket || t.MozWebSocket, r = Dh();
  function n(i, s) {
    var o;
    return s ? o = new e(i, s) : o = new e(i), o;
  }
  return e && ["CONNECTING", "OPEN", "CLOSING", "CLOSED"].forEach(function(i) {
    Object.defineProperty(n, i, {
      get: function() {
        return e[i];
      }
    });
  }), bn = {
    w3cwebsocket: e ? n : null,
    version: r
  }, bn;
}
var _r = {}, vn = {}, Rt = {}, Tt = {}, Pt = {}, Bt = {}, to;
function Fh() {
  if (to)
    return Bt;
  to = 1, Object.defineProperty(Bt, "__esModule", { value: !0 }), Bt.ForOfAdaptor = void 0;
  var t = function() {
    function e(r, n) {
      this.it_ = r, this.last_ = n;
    }
    return e.prototype.next = function() {
      if (this.it_.equals(this.last_))
        return {
          done: !0,
          value: void 0
        };
      var r = this.it_;
      return this.it_ = this.it_.next(), {
        done: !1,
        value: r.value
      };
    }, e.prototype[Symbol.iterator] = function() {
      return this;
    }, e;
  }();
  return Bt.ForOfAdaptor = t, Bt;
}
var ro;
function bi() {
  if (ro)
    return Pt;
  ro = 1;
  var t = S && S.__values || function(n) {
    var i = typeof Symbol == "function" && Symbol.iterator, s = i && n[i], o = 0;
    if (s)
      return s.call(n);
    if (n && typeof n.length == "number")
      return {
        next: function() {
          return n && o >= n.length && (n = void 0), { value: n && n[o++], done: !n };
        }
      };
    throw new TypeError(i ? "Object is not iterable." : "Symbol.iterator is not defined.");
  };
  Object.defineProperty(Pt, "__esModule", { value: !0 }), Pt.Container = void 0;
  var e = Fh(), r = function() {
    function n() {
    }
    return n.prototype.empty = function() {
      return this.size() === 0;
    }, n.prototype.rbegin = function() {
      return this.end().reverse();
    }, n.prototype.rend = function() {
      return this.begin().reverse();
    }, n.prototype[Symbol.iterator] = function() {
      return new e.ForOfAdaptor(this.begin(), this.end());
    }, n.prototype.toJSON = function() {
      var i, s, o = [];
      try {
        for (var a = t(this), c = a.next(); !c.done; c = a.next()) {
          var l = c.value;
          o.push(l);
        }
      } catch (f) {
        i = { error: f };
      } finally {
        try {
          c && !c.done && (s = a.return) && s.call(a);
        } finally {
          if (i)
            throw i.error;
        }
      }
      return o;
    }, n;
  }();
  return Pt.Container = r, Pt;
}
var Lt = {}, no;
function vi() {
  if (no)
    return Lt;
  no = 1;
  var t = S && S.__read || function(r, n) {
    var i = typeof Symbol == "function" && r[Symbol.iterator];
    if (!i)
      return r;
    var s = i.call(r), o, a = [], c;
    try {
      for (; (n === void 0 || n-- > 0) && !(o = s.next()).done; )
        a.push(o.value);
    } catch (l) {
      c = { error: l };
    } finally {
      try {
        o && !o.done && (i = s.return) && i.call(s);
      } finally {
        if (c)
          throw c.error;
      }
    }
    return a;
  };
  Object.defineProperty(Lt, "__esModule", { value: !0 }), Lt.NativeArrayIterator = void 0;
  var e = function() {
    function r(n, i) {
      this.data_ = n, this.index_ = i;
    }
    return r.prototype.index = function() {
      return this.index_;
    }, Object.defineProperty(r.prototype, "value", {
      get: function() {
        return this.data_[this.index_];
      },
      enumerable: !1,
      configurable: !0
    }), r.prototype.prev = function() {
      return --this.index_, this;
    }, r.prototype.next = function() {
      return ++this.index_, this;
    }, r.prototype.advance = function(n) {
      return this.index_ += n, this;
    }, r.prototype.equals = function(n) {
      return this.data_ === n.data_ && this.index_ === n.index_;
    }, r.prototype.swap = function(n) {
      var i, s;
      i = t([n.data_, this.data_], 2), this.data_ = i[0], n.data_ = i[1], s = t([n.index_, this.index_], 2), this.index_ = s[0], n.index_ = s[1];
    }, r;
  }();
  return Lt.NativeArrayIterator = e, Lt;
}
var io;
function Kh() {
  if (io)
    return Tt;
  io = 1;
  var t = S && S.__extends || function() {
    var i = function(s, o) {
      return i = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(a, c) {
        a.__proto__ = c;
      } || function(a, c) {
        for (var l in c)
          Object.prototype.hasOwnProperty.call(c, l) && (a[l] = c[l]);
      }, i(s, o);
    };
    return function(s, o) {
      if (typeof o != "function" && o !== null)
        throw new TypeError("Class extends value " + String(o) + " is not a constructor or null");
      i(s, o);
      function a() {
        this.constructor = s;
      }
      s.prototype = o === null ? Object.create(o) : (a.prototype = o.prototype, new a());
    };
  }();
  Object.defineProperty(Tt, "__esModule", { value: !0 }), Tt.SetContainer = void 0;
  var e = bi(), r = vi(), n = function(i) {
    t(s, i);
    function s(o) {
      var a = i.call(this) || this;
      return a.data_ = o(a), a;
    }
    return s.prototype.assign = function(o, a) {
      this.clear(), this.insert(o, a);
    }, s.prototype.clear = function() {
      this.data_.clear();
    }, s.prototype.begin = function() {
      return this.data_.begin();
    }, s.prototype.end = function() {
      return this.data_.end();
    }, s.prototype.has = function(o) {
      return !this.find(o).equals(this.end());
    }, s.prototype.size = function() {
      return this.data_.size();
    }, s.prototype.push = function() {
      for (var o = [], a = 0; a < arguments.length; a++)
        o[a] = arguments[a];
      if (o.length === 0)
        return this.size();
      var c = new r.NativeArrayIterator(o, 0), l = new r.NativeArrayIterator(o, o.length);
      return this._Insert_by_range(c, l), this.size();
    }, s.prototype.insert = function() {
      for (var o = [], a = 0; a < arguments.length; a++)
        o[a] = arguments[a];
      return o.length === 1 ? this._Insert_by_key(o[0]) : o[0].next instanceof Function && o[1].next instanceof Function ? this._Insert_by_range(o[0], o[1]) : this._Insert_by_hint(o[0], o[1]);
    }, s.prototype.erase = function() {
      for (var o = [], a = 0; a < arguments.length; a++)
        o[a] = arguments[a];
      return o.length === 1 && !(o[0] instanceof this.end().constructor && o[0].source() === this) ? this._Erase_by_val(o[0]) : o.length === 1 ? this._Erase_by_range(o[0]) : this._Erase_by_range(o[0], o[1]);
    }, s.prototype._Erase_by_range = function(o, a) {
      a === void 0 && (a = o.next());
      var c = this.data_.erase(o, a);
      return this._Handle_erase(o, a), c;
    }, s;
  }(e.Container);
  return Tt.SetContainer = n, Tt;
}
var wn = {}, $t = {}, qt = {}, Nt = {}, oo;
function Wh() {
  if (oo)
    return Nt;
  oo = 1;
  var t = S && S.__extends || function() {
    var r = function(n, i) {
      return r = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(s, o) {
        s.__proto__ = o;
      } || function(s, o) {
        for (var a in o)
          Object.prototype.hasOwnProperty.call(o, a) && (s[a] = o[a]);
      }, r(n, i);
    };
    return function(n, i) {
      if (typeof i != "function" && i !== null)
        throw new TypeError("Class extends value " + String(i) + " is not a constructor or null");
      r(n, i);
      function s() {
        this.constructor = n;
      }
      n.prototype = i === null ? Object.create(i) : (s.prototype = i.prototype, new s());
    };
  }();
  Object.defineProperty(Nt, "__esModule", { value: !0 }), Nt.Exception = void 0;
  var e = function(r) {
    t(n, r);
    function n(i) {
      var s = this.constructor, o = r.call(this, i) || this, a = s.prototype;
      return Object.setPrototypeOf ? Object.setPrototypeOf(o, a) : o.__proto__ = a, o;
    }
    return Object.defineProperty(n.prototype, "name", {
      get: function() {
        return this.constructor.name;
      },
      enumerable: !1,
      configurable: !0
    }), n.prototype.what = function() {
      return this.message;
    }, n.prototype.toJSON = function() {
      return {
        name: this.name,
        message: this.message,
        stack: this.stack
      };
    }, n;
  }(Error);
  return Nt.Exception = e, Nt;
}
var so;
function ka() {
  if (so)
    return qt;
  so = 1;
  var t = S && S.__extends || function() {
    var n = function(i, s) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(o, a) {
        o.__proto__ = a;
      } || function(o, a) {
        for (var c in a)
          Object.prototype.hasOwnProperty.call(a, c) && (o[c] = a[c]);
      }, n(i, s);
    };
    return function(i, s) {
      if (typeof s != "function" && s !== null)
        throw new TypeError("Class extends value " + String(s) + " is not a constructor or null");
      n(i, s);
      function o() {
        this.constructor = i;
      }
      i.prototype = s === null ? Object.create(s) : (o.prototype = s.prototype, new o());
    };
  }();
  Object.defineProperty(qt, "__esModule", { value: !0 }), qt.LogicError = void 0;
  var e = Wh(), r = function(n) {
    t(i, n);
    function i(s) {
      return n.call(this, s) || this;
    }
    return i;
  }(e.Exception);
  return qt.LogicError = r, qt;
}
var ao;
function Sa() {
  if (ao)
    return $t;
  ao = 1;
  var t = S && S.__extends || function() {
    var n = function(i, s) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(o, a) {
        o.__proto__ = a;
      } || function(o, a) {
        for (var c in a)
          Object.prototype.hasOwnProperty.call(a, c) && (o[c] = a[c]);
      }, n(i, s);
    };
    return function(i, s) {
      if (typeof s != "function" && s !== null)
        throw new TypeError("Class extends value " + String(s) + " is not a constructor or null");
      n(i, s);
      function o() {
        this.constructor = i;
      }
      i.prototype = s === null ? Object.create(s) : (o.prototype = s.prototype, new o());
    };
  }();
  Object.defineProperty($t, "__esModule", { value: !0 }), $t.InvalidArgument = void 0;
  var e = ka(), r = function(n) {
    t(i, n);
    function i(s) {
      return n.call(this, s) || this;
    }
    return i;
  }(e.LogicError);
  return $t.InvalidArgument = r, $t;
}
var Ut = {}, co;
function Vh() {
  if (co)
    return Ut;
  co = 1;
  var t = S && S.__extends || function() {
    var n = function(i, s) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(o, a) {
        o.__proto__ = a;
      } || function(o, a) {
        for (var c in a)
          Object.prototype.hasOwnProperty.call(a, c) && (o[c] = a[c]);
      }, n(i, s);
    };
    return function(i, s) {
      if (typeof s != "function" && s !== null)
        throw new TypeError("Class extends value " + String(s) + " is not a constructor or null");
      n(i, s);
      function o() {
        this.constructor = i;
      }
      i.prototype = s === null ? Object.create(s) : (o.prototype = s.prototype, new o());
    };
  }();
  Object.defineProperty(Ut, "__esModule", { value: !0 }), Ut.OutOfRange = void 0;
  var e = ka(), r = function(n) {
    t(i, n);
    function i(s) {
      return n.call(this, s) || this;
    }
    return i;
  }(e.LogicError);
  return Ut.OutOfRange = r, Ut;
}
var uo;
function Wr() {
  return uo || (uo = 1, function(t) {
    Object.defineProperty(t, "__esModule", { value: !0 }), t.ErrorGenerator = void 0;
    var e = Sa(), r = Vh();
    (function(n) {
      function i(d) {
        if (typeof d == "string")
          return d;
        var p = d.constructor.name;
        return d.constructor.__MODULE && (p = "".concat(d.constructor.__MODULE, ".").concat(p)), "std.".concat(p);
      }
      n.get_class_name = i;
      function s(d, p) {
        return new r.OutOfRange("Error on ".concat(i(d), ".").concat(p, "(): it's empty container."));
      }
      n.empty = s;
      function o(d, p, y) {
        return new r.OutOfRange("Error on ".concat(i(d), ".").concat(p, "(): parametric index is negative -> (index = ").concat(y, ")."));
      }
      n.negative_index = o;
      function a(d, p, y, g) {
        return new r.OutOfRange("Error on ".concat(i(d), ".").concat(p, "(): parametric index is equal or greater than size -> (index = ").concat(y, ", size: ").concat(g, ")."));
      }
      n.excessive_index = a;
      function c(d, p) {
        return new e.InvalidArgument("Error on ".concat(i(d), ".").concat(p, "(): parametric iterator is not this container's own."));
      }
      n.not_my_iterator = c;
      function l(d, p) {
        return new e.InvalidArgument("Error on ".concat(i(d), ".").concat(p, "(): parametric iterator, it already has been erased."));
      }
      n.erased_iterator = l;
      function f(d, p, y) {
        return new r.OutOfRange("Error on ".concat(i(d), ".").concat(p, "(): parametric iterator is directing negative position -> (index = ").concat(y, ")."));
      }
      n.negative_iterator = f;
      function u(d, p) {
        p === void 0 && (p = "end");
        var y = i(d);
        return new r.OutOfRange("Error on ".concat(y, ".Iterator.value: cannot access to the ").concat(y, ".").concat(p, "().value."));
      }
      n.iterator_end_value = u;
      function h(d, p, y) {
        throw new r.OutOfRange("Error on ".concat(i(d), ".").concat(p, "(): unable to find the matched key -> ").concat(y));
      }
      n.key_nout_found = h;
    })(t.ErrorGenerator || (t.ErrorGenerator = {}));
  }(wn)), wn;
}
var lo;
function Gh() {
  if (lo)
    return Rt;
  lo = 1;
  var t = S && S.__extends || function() {
    var o = function(a, c) {
      return o = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(l, f) {
        l.__proto__ = f;
      } || function(l, f) {
        for (var u in f)
          Object.prototype.hasOwnProperty.call(f, u) && (l[u] = f[u]);
      }, o(a, c);
    };
    return function(a, c) {
      if (typeof c != "function" && c !== null)
        throw new TypeError("Class extends value " + String(c) + " is not a constructor or null");
      o(a, c);
      function l() {
        this.constructor = a;
      }
      a.prototype = c === null ? Object.create(c) : (l.prototype = c.prototype, new l());
    };
  }(), e = S && S.__read || function(o, a) {
    var c = typeof Symbol == "function" && o[Symbol.iterator];
    if (!c)
      return o;
    var l = c.call(o), f, u = [], h;
    try {
      for (; (a === void 0 || a-- > 0) && !(f = l.next()).done; )
        u.push(f.value);
    } catch (d) {
      h = { error: d };
    } finally {
      try {
        f && !f.done && (c = l.return) && c.call(l);
      } finally {
        if (h)
          throw h.error;
      }
    }
    return u;
  }, r = S && S.__spreadArray || function(o, a, c) {
    if (c || arguments.length === 2)
      for (var l = 0, f = a.length, u; l < f; l++)
        (u || !(l in a)) && (u || (u = Array.prototype.slice.call(a, 0, l)), u[l] = a[l]);
    return o.concat(u || Array.prototype.slice.call(a));
  };
  Object.defineProperty(Rt, "__esModule", { value: !0 }), Rt.UniqueSet = void 0;
  var n = Kh(), i = Wr(), s = function(o) {
    t(a, o);
    function a() {
      return o !== null && o.apply(this, arguments) || this;
    }
    return a.prototype.count = function(c) {
      return this.find(c).equals(this.end()) ? 0 : 1;
    }, a.prototype.insert = function() {
      for (var c = [], l = 0; l < arguments.length; l++)
        c[l] = arguments[l];
      return o.prototype.insert.apply(this, r([], e(c), !1));
    }, a.prototype._Insert_by_range = function(c, l) {
      for (; !c.equals(l); c = c.next())
        this._Insert_by_key(c.value);
    }, a.prototype.extract = function(c) {
      return c instanceof this.end().constructor ? this._Extract_by_iterator(c) : this._Extract_by_val(c);
    }, a.prototype._Extract_by_val = function(c) {
      var l = this.find(c);
      if (l.equals(this.end()) === !0)
        throw i.ErrorGenerator.key_nout_found(this, "extract", c);
      return this._Erase_by_range(l), c;
    }, a.prototype._Extract_by_iterator = function(c) {
      return c.equals(this.end()) === !0 || this.has(c.value) === !1 ? this.end() : (this._Erase_by_range(c), c);
    }, a.prototype._Erase_by_val = function(c) {
      var l = this.find(c);
      return l.equals(this.end()) === !0 ? 0 : (this._Erase_by_range(l), 1);
    }, a.prototype.merge = function(c) {
      for (var l = c.begin(); !l.equals(c.end()); )
        this.has(l.value) === !1 ? (this.insert(l.value), l = c.erase(l)) : l = l.next();
    }, a;
  }(n.SetContainer);
  return Rt.UniqueSet = s, Rt;
}
var _n = {}, mn = {}, fo;
function Zh() {
  return fo || (fo = 1, function(t) {
    var e = S && S.__read || function(n, i) {
      var s = typeof Symbol == "function" && n[Symbol.iterator];
      if (!s)
        return n;
      var o = s.call(n), a, c = [], l;
      try {
        for (; (i === void 0 || i-- > 0) && !(a = o.next()).done; )
          c.push(a.value);
      } catch (f) {
        l = { error: f };
      } finally {
        try {
          a && !a.done && (s = o.return) && s.call(o);
        } finally {
          if (l)
            throw l.error;
        }
      }
      return c;
    }, r = S && S.__spreadArray || function(n, i, s) {
      if (s || arguments.length === 2)
        for (var o = 0, a = i.length, c; o < a; o++)
          (c || !(o in i)) && (c || (c = Array.prototype.slice.call(i, 0, o)), c[o] = i[o]);
      return n.concat(c || Array.prototype.slice.call(i));
    };
    Object.defineProperty(t, "__esModule", { value: !0 }), t.IAssociativeContainer = void 0, function(n) {
      function i(s) {
        for (var o = [], a = 1; a < arguments.length; a++)
          o[a - 1] = arguments[a];
        var c, l;
        return o.length >= 1 && o[0] instanceof Array ? (c = function() {
          var f = o[0];
          s.push.apply(s, r([], e(f), !1));
        }, l = o.slice(1)) : o.length >= 2 && o[0].next instanceof Function && o[1].next instanceof Function ? (c = function() {
          var f = o[0], u = o[1];
          s.assign(f, u);
        }, l = o.slice(2)) : (c = null, l = o), { ramda: c, tail: l };
      }
      n.construct = i;
    }(t.IAssociativeContainer || (t.IAssociativeContainer = {}));
  }(mn)), mn;
}
var jt = {}, Ht = {}, Mt = {}, ho;
function Yh() {
  if (ho)
    return Mt;
  ho = 1, Object.defineProperty(Mt, "__esModule", { value: !0 }), Mt._Get_root = void 0;
  var t = cr;
  function e() {
    return r === null && (r = (0, t.is_node)() ? S : self, r.__s_iUID === void 0 && (r.__s_iUID = 0)), r;
  }
  Mt._Get_root = e;
  var r = null;
  return Mt;
}
var po;
function Oa() {
  if (po)
    return Ht;
  po = 1, Object.defineProperty(Ht, "__esModule", { value: !0 }), Ht.get_uid = void 0;
  var t = Yh();
  function e(r) {
    if (r instanceof Object) {
      if (r.hasOwnProperty("__get_m_iUID") === !1) {
        var n = ++(0, t._Get_root)().__s_iUID;
        Object.defineProperty(r, "__get_m_iUID", {
          value: function() {
            return n;
          }
        });
      }
      return r.__get_m_iUID();
    } else
      return r === void 0 ? -1 : 0;
  }
  return Ht.get_uid = e, Ht;
}
var yo;
function wi() {
  if (yo)
    return jt;
  yo = 1;
  var t = S && S.__values || function(c) {
    var l = typeof Symbol == "function" && Symbol.iterator, f = l && c[l], u = 0;
    if (f)
      return f.call(c);
    if (c && typeof c.length == "number")
      return {
        next: function() {
          return c && u >= c.length && (c = void 0), { value: c && c[u++], done: !c };
        }
      };
    throw new TypeError(l ? "Object is not iterable." : "Symbol.iterator is not defined.");
  };
  Object.defineProperty(jt, "__esModule", { value: !0 }), jt.hash = void 0;
  var e = Oa();
  function r() {
    for (var c, l, f = [], u = 0; u < arguments.length; u++)
      f[u] = arguments[u];
    var h = o;
    try {
      for (var d = t(f), p = d.next(); !p.done; p = d.next()) {
        var y = p.value;
        y = y && y.valueOf();
        var g = typeof y;
        if (g === "boolean")
          h = n(y, h);
        else if (g === "number" || g === "bigint")
          h = i(y, h);
        else if (g === "string")
          h = s(y, h);
        else if (y instanceof Object && y.hashCode instanceof Function) {
          var v = y.hashCode();
          if (f.length === 1)
            return v;
          h = h ^ v, h *= a;
        } else
          h = i((0, e.get_uid)(y), h);
      }
    } catch (_) {
      c = { error: _ };
    } finally {
      try {
        p && !p.done && (l = d.return) && l.call(d);
      } finally {
        if (c)
          throw c.error;
      }
    }
    return Math.abs(h);
  }
  jt.hash = r;
  function n(c, l) {
    return l ^= c ? 1 : 0, l *= a, l;
  }
  function i(c, l) {
    return s(c.toString(), l);
  }
  function s(c, l) {
    for (var f = 0; f < c.length; ++f)
      l ^= c.charCodeAt(f), l *= a;
    return Math.abs(l);
  }
  var o = 2166136261, a = 16777619;
  return jt;
}
var ae = {}, go;
function _i() {
  if (go)
    return ae;
  go = 1, Object.defineProperty(ae, "__esModule", { value: !0 }), ae.greater_equal = ae.greater = ae.less_equal = ae.less = ae.not_equal_to = ae.equal_to = void 0;
  var t = Oa();
  function e(a, c) {
    return a = a && a.valueOf(), c = c && c.valueOf(), a instanceof Object && a.equals instanceof Function ? a.equals(c) : a === c;
  }
  ae.equal_to = e;
  function r(a, c) {
    return !e(a, c);
  }
  ae.not_equal_to = r;
  function n(a, c) {
    return a = a.valueOf(), c = c.valueOf(), a instanceof Object ? a.less instanceof Function ? a.less(c) : (0, t.get_uid)(a) < (0, t.get_uid)(c) : a < c;
  }
  ae.less = n;
  function i(a, c) {
    return n(a, c) || e(a, c);
  }
  ae.less_equal = i;
  function s(a, c) {
    return !i(a, c);
  }
  ae.greater = s;
  function o(a, c) {
    return !n(a, c);
  }
  return ae.greater_equal = o, ae;
}
var bo;
function Aa() {
  return bo || (bo = 1, function(t) {
    var e = S && S.__read || function(o, a) {
      var c = typeof Symbol == "function" && o[Symbol.iterator];
      if (!c)
        return o;
      var l = c.call(o), f, u = [], h;
      try {
        for (; (a === void 0 || a-- > 0) && !(f = l.next()).done; )
          u.push(f.value);
      } catch (d) {
        h = { error: d };
      } finally {
        try {
          f && !f.done && (c = l.return) && c.call(l);
        } finally {
          if (h)
            throw h.error;
        }
      }
      return u;
    }, r = S && S.__spreadArray || function(o, a, c) {
      if (c || arguments.length === 2)
        for (var l = 0, f = a.length, u; l < f; l++)
          (u || !(l in a)) && (u || (u = Array.prototype.slice.call(a, 0, l)), u[l] = a[l]);
      return o.concat(u || Array.prototype.slice.call(a));
    };
    Object.defineProperty(t, "__esModule", { value: !0 }), t.IHashContainer = void 0;
    var n = Zh(), i = wi(), s = _i();
    (function(o) {
      function a(c, l, f) {
        for (var u = [], h = 3; h < arguments.length; h++)
          u[h - 3] = arguments[h];
        var d = null, p = i.hash, y = s.equal_to;
        if (u.length === 1 && u[0] instanceof l) {
          var g = u[0];
          p = g.hash_function(), y = g.key_eq(), d = function() {
            var _ = g.begin(), m = g.end();
            c.assign(_, m);
          };
        } else {
          var v = n.IAssociativeContainer.construct.apply(n.IAssociativeContainer, r([c], e(u), !1));
          d = v.ramda, v.tail.length >= 1 && (p = v.tail[0]), v.tail.length >= 2 && (y = v.tail[1]);
        }
        f(p, y), d !== null && d();
      }
      o.construct = a;
    })(t.IHashContainer || (t.IHashContainer = {}));
  }(_n)), _n;
}
var xn = {}, Dt = {}, zt = {}, vo;
function mi() {
  if (vo)
    return zt;
  vo = 1, Object.defineProperty(zt, "__esModule", { value: !0 }), zt.ListIterator = void 0;
  var t = Wr(), e = function() {
    function r(n, i, s) {
      this.prev_ = n, this.next_ = i, this.value_ = s;
    }
    return r._Set_prev = function(n, i) {
      n.prev_ = i;
    }, r._Set_next = function(n, i) {
      n.next_ = i;
    }, r.prototype.prev = function() {
      return this.prev_;
    }, r.prototype.next = function() {
      return this.next_;
    }, Object.defineProperty(r.prototype, "value", {
      get: function() {
        return this._Try_value(), this.value_;
      },
      enumerable: !1,
      configurable: !0
    }), r.prototype._Try_value = function() {
      if (this.value_ === void 0 && this.equals(this.source().end()) === !0)
        throw t.ErrorGenerator.iterator_end_value(this.source());
    }, r.prototype.equals = function(n) {
      return this === n;
    }, r;
  }();
  return zt.ListIterator = e, zt;
}
var Ft = {}, wo;
function Jh() {
  if (wo)
    return Ft;
  wo = 1, Object.defineProperty(Ft, "__esModule", { value: !0 }), Ft.Repeater = void 0;
  var t = function() {
    function e(r, n) {
      this.index_ = r, this.value_ = n;
    }
    return e.prototype.index = function() {
      return this.index_;
    }, Object.defineProperty(e.prototype, "value", {
      get: function() {
        return this.value_;
      },
      enumerable: !1,
      configurable: !0
    }), e.prototype.next = function() {
      return ++this.index_, this;
    }, e.prototype.equals = function(r) {
      return this.index_ === r.index_;
    }, e;
  }();
  return Ft.Repeater = t, Ft;
}
var ce = {}, _o;
function Xh() {
  if (_o)
    return ce;
  _o = 1, Object.defineProperty(ce, "__esModule", { value: !0 }), ce.next = ce.prev = ce.advance = ce.distance = ce.size = ce.empty = void 0;
  var t = Sa();
  function e(c) {
    return c instanceof Array ? c.length !== 0 : c.empty();
  }
  ce.empty = e;
  function r(c) {
    return c instanceof Array ? c.length : c.size();
  }
  ce.size = r;
  function n(c, l) {
    if (c.index instanceof Function)
      return i(c, l);
    for (var f = 0; !c.equals(l); c = c.next())
      ++f;
    return f;
  }
  ce.distance = n;
  function i(c, l) {
    var f = c.index(), u = l.index();
    return c.base instanceof Function ? f - u : u - f;
  }
  function s(c, l) {
    if (l === 0)
      return c;
    if (c.advance instanceof Function)
      return c.advance(l);
    var f;
    if (l < 0) {
      if (!(c.prev instanceof Function))
        throw new t.InvalidArgument("Error on std.advance(): parametric iterator is not a bi-directional iterator, thus advancing to negative direction is not possible.");
      f = function(u) {
        return u.prev();
      }, l = -l;
    } else
      f = function(u) {
        return u.next();
      };
    for (; l-- > 0; )
      c = f(c);
    return c;
  }
  ce.advance = s;
  function o(c, l) {
    return l === void 0 && (l = 1), l === 1 ? c.prev() : s(c, -l);
  }
  ce.prev = o;
  function a(c, l) {
    return l === void 0 && (l = 1), l === 1 ? c.next() : s(c, l);
  }
  return ce.next = a, ce;
}
var mo;
function Ca() {
  if (mo)
    return Dt;
  mo = 1;
  var t = S && S.__extends || function() {
    var l = function(f, u) {
      return l = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(h, d) {
        h.__proto__ = d;
      } || function(h, d) {
        for (var p in d)
          Object.prototype.hasOwnProperty.call(d, p) && (h[p] = d[p]);
      }, l(f, u);
    };
    return function(f, u) {
      if (typeof u != "function" && u !== null)
        throw new TypeError("Class extends value " + String(u) + " is not a constructor or null");
      l(f, u);
      function h() {
        this.constructor = f;
      }
      f.prototype = u === null ? Object.create(u) : (h.prototype = u.prototype, new h());
    };
  }(), e = S && S.__read || function(l, f) {
    var u = typeof Symbol == "function" && l[Symbol.iterator];
    if (!u)
      return l;
    var h = u.call(l), d, p = [], y;
    try {
      for (; (f === void 0 || f-- > 0) && !(d = h.next()).done; )
        p.push(d.value);
    } catch (g) {
      y = { error: g };
    } finally {
      try {
        d && !d.done && (u = h.return) && u.call(h);
      } finally {
        if (y)
          throw y.error;
      }
    }
    return p;
  };
  Object.defineProperty(Dt, "__esModule", { value: !0 }), Dt.ListContainer = void 0;
  var r = bi(), n = mi(), i = Jh(), s = vi(), o = Xh(), a = Wr(), c = function(l) {
    t(f, l);
    function f() {
      var u = l.call(this) || this;
      return u.end_ = u._Create_iterator(null, null), u.clear(), u;
    }
    return f.prototype.assign = function(u, h) {
      this.clear(), this.insert(this.end(), u, h);
    }, f.prototype.clear = function() {
      n.ListIterator._Set_prev(this.end_, this.end_), n.ListIterator._Set_next(this.end_, this.end_), this.begin_ = this.end_, this.size_ = 0;
    }, f.prototype.resize = function(u) {
      var h = u - this.size();
      h > 0 ? this.insert(this.end(), h, void 0) : h < 0 && this.erase((0, o.advance)(this.end(), -h), this.end());
    }, f.prototype.begin = function() {
      return this.begin_;
    }, f.prototype.end = function() {
      return this.end_;
    }, f.prototype.size = function() {
      return this.size_;
    }, f.prototype.push_front = function(u) {
      this.insert(this.begin_, u);
    }, f.prototype.push_back = function(u) {
      this.insert(this.end_, u);
    }, f.prototype.pop_front = function() {
      if (this.empty() === !0)
        throw a.ErrorGenerator.empty(this.end_.source().constructor.name, "pop_front");
      this.erase(this.begin_);
    }, f.prototype.pop_back = function() {
      if (this.empty() === !0)
        throw a.ErrorGenerator.empty(this.end_.source().constructor.name, "pop_back");
      this.erase(this.end_.prev());
    }, f.prototype.push = function() {
      for (var u = [], h = 0; h < arguments.length; h++)
        u[h] = arguments[h];
      if (u.length === 0)
        return this.size();
      var d = new s.NativeArrayIterator(u, 0), p = new s.NativeArrayIterator(u, u.length);
      return this._Insert_by_range(this.end(), d, p), this.size();
    }, f.prototype.insert = function(u) {
      for (var h = [], d = 1; d < arguments.length; d++)
        h[d - 1] = arguments[d];
      if (u.source() !== this.end_.source())
        throw a.ErrorGenerator.not_my_iterator(this.end_.source(), "insert");
      if (u.erased_ === !0)
        throw a.ErrorGenerator.erased_iterator(this.end_.source(), "insert");
      return h.length === 1 ? this._Insert_by_repeating_val(u, 1, h[0]) : h.length === 2 && typeof h[0] == "number" ? this._Insert_by_repeating_val(u, h[0], h[1]) : this._Insert_by_range(u, h[0], h[1]);
    }, f.prototype._Insert_by_repeating_val = function(u, h, d) {
      var p = new i.Repeater(0, d), y = new i.Repeater(h);
      return this._Insert_by_range(u, p, y);
    }, f.prototype._Insert_by_range = function(u, h, d) {
      for (var p = u.prev(), y = null, g = 0, v = h; v.equals(d) === !1; v = v.next()) {
        var _ = this._Create_iterator(p, null, v.value);
        g === 0 && (y = _), n.ListIterator._Set_next(p, _), p = _, ++g;
      }
      return u.equals(this.begin()) === !0 && (this.begin_ = y), n.ListIterator._Set_next(p, u), n.ListIterator._Set_prev(u, p), this.size_ += g, y;
    }, f.prototype.erase = function(u, h) {
      return h === void 0 && (h = u.next()), this._Erase_by_range(u, h);
    }, f.prototype._Erase_by_range = function(u, h) {
      if (u.source() !== this.end_.source())
        throw a.ErrorGenerator.not_my_iterator(this.end_.source(), "insert");
      if (u.erased_ === !0)
        throw a.ErrorGenerator.erased_iterator(this.end_.source(), "insert");
      if (u.equals(this.end_))
        return this.end_;
      var d = u.prev();
      n.ListIterator._Set_next(d, h), n.ListIterator._Set_prev(h, d);
      for (var p = u; !p.equals(h); p = p.next())
        p.erased_ = !0, --this.size_;
      return u.equals(this.begin_) && (this.begin_ = h), h;
    }, f.prototype.swap = function(u) {
      var h, d, p;
      h = e([u.begin_, this.begin_], 2), this.begin_ = h[0], u.begin_ = h[1], d = e([u.end_, this.end_], 2), this.end_ = d[0], u.end_ = d[1], p = e([u.size_, this.size_], 2), this.size_ = p[0], u.size_ = p[1];
    }, f;
  }(r.Container);
  return Dt.ListContainer = c, Dt;
}
var Kt = {}, xo;
function Ia() {
  if (xo)
    return Kt;
  xo = 1, Object.defineProperty(Kt, "__esModule", { value: !0 }), Kt.ReverseIterator = void 0;
  var t = function() {
    function e(r) {
      this.base_ = r.prev();
    }
    return e.prototype.source = function() {
      return this.base_.source();
    }, e.prototype.base = function() {
      return this.base_.next();
    }, Object.defineProperty(e.prototype, "value", {
      get: function() {
        return this.base_.value;
      },
      enumerable: !1,
      configurable: !0
    }), e.prototype.prev = function() {
      return this._Create_neighbor(this.base().next());
    }, e.prototype.next = function() {
      return this._Create_neighbor(this.base_);
    }, e.prototype.equals = function(r) {
      return this.base_.equals(r.base_);
    }, e;
  }();
  return Kt.ReverseIterator = t, Kt;
}
var Eo;
function Qh() {
  return Eo || (Eo = 1, function(t) {
    var e = S && S.__extends || function() {
      var a = function(c, l) {
        return a = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(f, u) {
          f.__proto__ = u;
        } || function(f, u) {
          for (var h in u)
            Object.prototype.hasOwnProperty.call(u, h) && (f[h] = u[h]);
        }, a(c, l);
      };
      return function(c, l) {
        if (typeof l != "function" && l !== null)
          throw new TypeError("Class extends value " + String(l) + " is not a constructor or null");
        a(c, l);
        function f() {
          this.constructor = c;
        }
        c.prototype = l === null ? Object.create(l) : (f.prototype = l.prototype, new f());
      };
    }(), r = S && S.__read || function(a, c) {
      var l = typeof Symbol == "function" && a[Symbol.iterator];
      if (!l)
        return a;
      var f = l.call(a), u, h = [], d;
      try {
        for (; (c === void 0 || c-- > 0) && !(u = f.next()).done; )
          h.push(u.value);
      } catch (p) {
        d = { error: p };
      } finally {
        try {
          u && !u.done && (l = f.return) && l.call(f);
        } finally {
          if (d)
            throw d.error;
        }
      }
      return h;
    };
    Object.defineProperty(t, "__esModule", { value: !0 }), t.SetElementList = void 0;
    var n = Ca(), i = mi(), s = Ia(), o = function(a) {
      e(c, a);
      function c(l) {
        var f = a.call(this) || this;
        return f.associative_ = l, f;
      }
      return c.prototype._Create_iterator = function(l, f, u) {
        return c.Iterator.create(this, l, f, u);
      }, c._Swap_associative = function(l, f) {
        var u;
        u = r([f.associative_, l.associative_], 2), l.associative_ = u[0], f.associative_ = u[1];
      }, c.prototype.associative = function() {
        return this.associative_;
      }, c;
    }(n.ListContainer);
    t.SetElementList = o, function(a) {
      var c = function(f) {
        e(u, f);
        function u(h, d, p, y) {
          var g = f.call(this, d, p, y) || this;
          return g.source_ = h, g;
        }
        return u.create = function(h, d, p, y) {
          return new u(h, d, p, y);
        }, u.prototype.reverse = function() {
          return new l(this);
        }, u.prototype.source = function() {
          return this.source_.associative();
        }, u;
      }(i.ListIterator);
      a.Iterator = c;
      var l = function(f) {
        e(u, f);
        function u() {
          return f !== null && f.apply(this, arguments) || this;
        }
        return u.prototype._Create_neighbor = function(h) {
          return new u(h);
        }, u;
      }(s.ReverseIterator);
      a.ReverseIterator = l;
    }(o = t.SetElementList || (t.SetElementList = {})), t.SetElementList = o;
  }(xn)), xn;
}
var Wt = {}, Vt = {}, ko;
function Ra() {
  if (ko)
    return Vt;
  ko = 1;
  var t = S && S.__values || function(i) {
    var s = typeof Symbol == "function" && Symbol.iterator, o = s && i[s], a = 0;
    if (o)
      return o.call(i);
    if (i && typeof i.length == "number")
      return {
        next: function() {
          return i && a >= i.length && (i = void 0), { value: i && i[a++], done: !i };
        }
      };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
  };
  Object.defineProperty(Vt, "__esModule", { value: !0 }), Vt.HashBuckets = void 0;
  var e = function() {
    function i(s, o) {
      this.fetcher_ = s, this.hasher_ = o, this.max_load_factor_ = n, this.data_ = [], this.size_ = 0, this.initialize();
    }
    return i.prototype.clear = function() {
      this.data_ = [], this.size_ = 0, this.initialize();
    }, i.prototype.rehash = function(s) {
      var o, a, c, l;
      s = Math.max(s, r);
      for (var f = [], u = 0; u < s; ++u)
        f.push([]);
      try {
        for (var h = t(this.data_), d = h.next(); !d.done; d = h.next()) {
          var p = d.value;
          try {
            for (var y = (c = void 0, t(p)), g = y.next(); !g.done; g = y.next()) {
              var v = g.value, _ = this.hasher_(this.fetcher_(v)) % f.length;
              f[_].push(v);
            }
          } catch (m) {
            c = { error: m };
          } finally {
            try {
              g && !g.done && (l = y.return) && l.call(y);
            } finally {
              if (c)
                throw c.error;
            }
          }
        }
      } catch (m) {
        o = { error: m };
      } finally {
        try {
          d && !d.done && (a = h.return) && a.call(h);
        } finally {
          if (o)
            throw o.error;
        }
      }
      this.data_ = f;
    }, i.prototype.reserve = function(s) {
      s > this.capacity() && (s = Math.floor(s / this.max_load_factor_), this.rehash(s));
    }, i.prototype.initialize = function() {
      for (var s = 0; s < r; ++s)
        this.data_.push([]);
    }, i.prototype.length = function() {
      return this.data_.length;
    }, i.prototype.capacity = function() {
      return this.data_.length * this.max_load_factor_;
    }, i.prototype.at = function(s) {
      return this.data_[s];
    }, i.prototype.load_factor = function() {
      return this.size_ / this.length();
    }, i.prototype.max_load_factor = function(s) {
      if (s === void 0 && (s = null), s === null)
        return this.max_load_factor_;
      this.max_load_factor_ = s;
    }, i.prototype.hash_function = function() {
      return this.hasher_;
    }, i.prototype.index = function(s) {
      return this.hasher_(this.fetcher_(s)) % this.length();
    }, i.prototype.insert = function(s) {
      var o = this.capacity();
      ++this.size_ > o && this.reserve(o * 2);
      var a = this.index(s);
      this.data_[a].push(s);
    }, i.prototype.erase = function(s) {
      for (var o = this.index(s), a = this.data_[o], c = 0; c < a.length; ++c)
        if (a[c] === s) {
          a.splice(c, 1), --this.size_;
          break;
        }
    }, i;
  }();
  Vt.HashBuckets = e;
  var r = 10, n = 1;
  return Vt;
}
var So;
function ed() {
  if (So)
    return Wt;
  So = 1;
  var t = S && S.__extends || function() {
    var o = function(a, c) {
      return o = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(l, f) {
        l.__proto__ = f;
      } || function(l, f) {
        for (var u in f)
          Object.prototype.hasOwnProperty.call(f, u) && (l[u] = f[u]);
      }, o(a, c);
    };
    return function(a, c) {
      if (typeof c != "function" && c !== null)
        throw new TypeError("Class extends value " + String(c) + " is not a constructor or null");
      o(a, c);
      function l() {
        this.constructor = a;
      }
      a.prototype = c === null ? Object.create(c) : (l.prototype = c.prototype, new l());
    };
  }(), e = S && S.__read || function(o, a) {
    var c = typeof Symbol == "function" && o[Symbol.iterator];
    if (!c)
      return o;
    var l = c.call(o), f, u = [], h;
    try {
      for (; (a === void 0 || a-- > 0) && !(f = l.next()).done; )
        u.push(f.value);
    } catch (d) {
      h = { error: d };
    } finally {
      try {
        f && !f.done && (c = l.return) && c.call(l);
      } finally {
        if (h)
          throw h.error;
      }
    }
    return u;
  }, r = S && S.__values || function(o) {
    var a = typeof Symbol == "function" && Symbol.iterator, c = a && o[a], l = 0;
    if (c)
      return c.call(o);
    if (o && typeof o.length == "number")
      return {
        next: function() {
          return o && l >= o.length && (o = void 0), { value: o && o[l++], done: !o };
        }
      };
    throw new TypeError(a ? "Object is not iterable." : "Symbol.iterator is not defined.");
  };
  Object.defineProperty(Wt, "__esModule", { value: !0 }), Wt.SetHashBuckets = void 0;
  var n = Ra(), i = function(o) {
    t(a, o);
    function a(c, l, f) {
      var u = o.call(this, s, l) || this;
      return u.source_ = c, u.key_eq_ = f, u;
    }
    return a._Swap_source = function(c, l) {
      var f;
      f = e([l.source_, c.source_], 2), c.source_ = f[0], l.source_ = f[1];
    }, a.prototype.key_eq = function() {
      return this.key_eq_;
    }, a.prototype.find = function(c) {
      var l, f, u = this.hash_function()(c) % this.length(), h = this.at(u);
      try {
        for (var d = r(h), p = d.next(); !p.done; p = d.next()) {
          var y = p.value;
          if (this.key_eq_(y.value, c))
            return y;
        }
      } catch (g) {
        l = { error: g };
      } finally {
        try {
          p && !p.done && (f = d.return) && f.call(d);
        } finally {
          if (l)
            throw l.error;
        }
      }
      return this.source_.end();
    }, a;
  }(n.HashBuckets);
  Wt.SetHashBuckets = i;
  function s(o) {
    return o.value;
  }
  return Wt;
}
var st = {}, Oo;
function Ta() {
  if (Oo)
    return st;
  Oo = 1, Object.defineProperty(st, "__esModule", { value: !0 }), st.make_pair = st.Pair = void 0;
  var t = wi(), e = _i(), r = function() {
    function i(s, o) {
      this.first = s, this.second = o;
    }
    return i.prototype.equals = function(s) {
      return (0, e.equal_to)(this.first, s.first) && (0, e.equal_to)(this.second, s.second);
    }, i.prototype.less = function(s) {
      return (0, e.equal_to)(this.first, s.first) === !1 ? (0, e.less)(this.first, s.first) : (0, e.less)(this.second, s.second);
    }, i.prototype.hashCode = function() {
      return (0, t.hash)(this.first, this.second);
    }, i;
  }();
  st.Pair = r;
  function n(i, s) {
    return new r(i, s);
  }
  return st.make_pair = n, st;
}
var Ao;
function td() {
  return Ao || (Ao = 1, function(t) {
    var e = S && S.__extends || function() {
      var f = function(u, h) {
        return f = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d, p) {
          d.__proto__ = p;
        } || function(d, p) {
          for (var y in p)
            Object.prototype.hasOwnProperty.call(p, y) && (d[y] = p[y]);
        }, f(u, h);
      };
      return function(u, h) {
        if (typeof h != "function" && h !== null)
          throw new TypeError("Class extends value " + String(h) + " is not a constructor or null");
        f(u, h);
        function d() {
          this.constructor = u;
        }
        u.prototype = h === null ? Object.create(h) : (d.prototype = h.prototype, new d());
      };
    }(), r = S && S.__read || function(f, u) {
      var h = typeof Symbol == "function" && f[Symbol.iterator];
      if (!h)
        return f;
      var d = h.call(f), p, y = [], g;
      try {
        for (; (u === void 0 || u-- > 0) && !(p = d.next()).done; )
          y.push(p.value);
      } catch (v) {
        g = { error: v };
      } finally {
        try {
          p && !p.done && (h = d.return) && h.call(d);
        } finally {
          if (g)
            throw g.error;
        }
      }
      return y;
    }, n = S && S.__spreadArray || function(f, u, h) {
      if (h || arguments.length === 2)
        for (var d = 0, p = u.length, y; d < p; d++)
          (y || !(d in u)) && (y || (y = Array.prototype.slice.call(u, 0, d)), y[d] = u[d]);
      return f.concat(y || Array.prototype.slice.call(u));
    };
    Object.defineProperty(t, "__esModule", { value: !0 }), t.HashSet = void 0;
    var i = Gh(), s = Aa(), o = Qh(), a = ed(), c = Ta(), l = function(f) {
      e(u, f);
      function u() {
        for (var h = [], d = 0; d < arguments.length; d++)
          h[d] = arguments[d];
        var p = f.call(this, function(y) {
          return new o.SetElementList(y);
        }) || this;
        return s.IHashContainer.construct.apply(s.IHashContainer, n([
          p,
          u,
          function(y, g) {
            p.buckets_ = new a.SetHashBuckets(p, y, g);
          }
        ], r(h), !1)), p;
      }
      return u.prototype.clear = function() {
        this.buckets_.clear(), f.prototype.clear.call(this);
      }, u.prototype.swap = function(h) {
        var d, p;
        d = r([h.data_, this.data_], 2), this.data_ = d[0], h.data_ = d[1], o.SetElementList._Swap_associative(this.data_, h.data_), a.SetHashBuckets._Swap_source(this.buckets_, h.buckets_), p = r([h.buckets_, this.buckets_], 2), this.buckets_ = p[0], h.buckets_ = p[1];
      }, u.prototype.find = function(h) {
        return this.buckets_.find(h);
      }, u.prototype.begin = function(h) {
        return h === void 0 && (h = null), h === null ? f.prototype.begin.call(this) : this.buckets_.at(h)[0];
      }, u.prototype.end = function(h) {
        if (h === void 0 && (h = null), h === null)
          return f.prototype.end.call(this);
        var d = this.buckets_.at(h);
        return d[d.length - 1].next();
      }, u.prototype.rbegin = function(h) {
        return h === void 0 && (h = null), this.end(h).reverse();
      }, u.prototype.rend = function(h) {
        return h === void 0 && (h = null), this.begin(h).reverse();
      }, u.prototype.bucket_count = function() {
        return this.buckets_.length();
      }, u.prototype.bucket_size = function(h) {
        return this.buckets_.at(h).length;
      }, u.prototype.load_factor = function() {
        return this.buckets_.load_factor();
      }, u.prototype.hash_function = function() {
        return this.buckets_.hash_function();
      }, u.prototype.key_eq = function() {
        return this.buckets_.key_eq();
      }, u.prototype.bucket = function(h) {
        return this.hash_function()(h) % this.buckets_.length();
      }, u.prototype.max_load_factor = function(h) {
        return h === void 0 && (h = null), this.buckets_.max_load_factor(h);
      }, u.prototype.reserve = function(h) {
        this.buckets_.reserve(h);
      }, u.prototype.rehash = function(h) {
        this.buckets_.rehash(h);
      }, u.prototype._Insert_by_key = function(h) {
        var d = this.find(h);
        return d.equals(this.end()) === !1 ? new c.Pair(d, !1) : (this.data_.push(h), d = d.prev(), this._Handle_insert(d, d.next()), new c.Pair(d, !0));
      }, u.prototype._Insert_by_hint = function(h, d) {
        var p = this.find(d);
        return p.equals(this.end()) === !0 && (p = this.data_.insert(h, d), this._Handle_insert(p, p.next())), p;
      }, u.prototype._Handle_insert = function(h, d) {
        for (; !h.equals(d); h = h.next())
          this.buckets_.insert(h);
      }, u.prototype._Handle_erase = function(h, d) {
        for (; !h.equals(d); h = h.next())
          this.buckets_.erase(h);
      }, u;
    }(i.UniqueSet);
    t.HashSet = l, function(f) {
      f.Iterator = o.SetElementList.Iterator, f.ReverseIterator = o.SetElementList.ReverseIterator;
    }(l = t.HashSet || (t.HashSet = {})), t.HashSet = l;
  }(vn)), vn;
}
var En = {}, Gt = {}, Zt = {}, Co;
function rd() {
  if (Co)
    return Zt;
  Co = 1;
  var t = S && S.__extends || function() {
    var i = function(s, o) {
      return i = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(a, c) {
        a.__proto__ = c;
      } || function(a, c) {
        for (var l in c)
          Object.prototype.hasOwnProperty.call(c, l) && (a[l] = c[l]);
      }, i(s, o);
    };
    return function(s, o) {
      if (typeof o != "function" && o !== null)
        throw new TypeError("Class extends value " + String(o) + " is not a constructor or null");
      i(s, o);
      function a() {
        this.constructor = s;
      }
      s.prototype = o === null ? Object.create(o) : (a.prototype = o.prototype, new a());
    };
  }();
  Object.defineProperty(Zt, "__esModule", { value: !0 }), Zt.MapContainer = void 0;
  var e = bi(), r = vi(), n = function(i) {
    t(s, i);
    function s(o) {
      var a = i.call(this) || this;
      return a.data_ = o(a), a;
    }
    return s.prototype.assign = function(o, a) {
      this.clear(), this.insert(o, a);
    }, s.prototype.clear = function() {
      this.data_.clear();
    }, s.prototype.begin = function() {
      return this.data_.begin();
    }, s.prototype.end = function() {
      return this.data_.end();
    }, s.prototype.has = function(o) {
      return !this.find(o).equals(this.end());
    }, s.prototype.size = function() {
      return this.data_.size();
    }, s.prototype.push = function() {
      for (var o = [], a = 0; a < arguments.length; a++)
        o[a] = arguments[a];
      var c = new r.NativeArrayIterator(o, 0), l = new r.NativeArrayIterator(o, o.length);
      return this.insert(c, l), this.size();
    }, s.prototype.insert = function() {
      for (var o = [], a = 0; a < arguments.length; a++)
        o[a] = arguments[a];
      return o.length === 1 ? this.emplace(o[0].first, o[0].second) : o[0].next instanceof Function && o[1].next instanceof Function ? this._Insert_by_range(o[0], o[1]) : this.emplace_hint(o[0], o[1].first, o[1].second);
    }, s.prototype.erase = function() {
      for (var o = [], a = 0; a < arguments.length; a++)
        o[a] = arguments[a];
      return o.length === 1 && (!(o[0] instanceof this.end().constructor) || o[0].source() !== this) ? this._Erase_by_key(o[0]) : o.length === 1 ? this._Erase_by_range(o[0]) : this._Erase_by_range(o[0], o[1]);
    }, s.prototype._Erase_by_range = function(o, a) {
      a === void 0 && (a = o.next());
      var c = this.data_.erase(o, a);
      return this._Handle_erase(o, a), c;
    }, s;
  }(e.Container);
  return Zt.MapContainer = n, Zt;
}
var Io;
function nd() {
  if (Io)
    return Gt;
  Io = 1;
  var t = S && S.__extends || function() {
    var o = function(a, c) {
      return o = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(l, f) {
        l.__proto__ = f;
      } || function(l, f) {
        for (var u in f)
          Object.prototype.hasOwnProperty.call(f, u) && (l[u] = f[u]);
      }, o(a, c);
    };
    return function(a, c) {
      if (typeof c != "function" && c !== null)
        throw new TypeError("Class extends value " + String(c) + " is not a constructor or null");
      o(a, c);
      function l() {
        this.constructor = a;
      }
      a.prototype = c === null ? Object.create(c) : (l.prototype = c.prototype, new l());
    };
  }(), e = S && S.__read || function(o, a) {
    var c = typeof Symbol == "function" && o[Symbol.iterator];
    if (!c)
      return o;
    var l = c.call(o), f, u = [], h;
    try {
      for (; (a === void 0 || a-- > 0) && !(f = l.next()).done; )
        u.push(f.value);
    } catch (d) {
      h = { error: d };
    } finally {
      try {
        f && !f.done && (c = l.return) && c.call(l);
      } finally {
        if (h)
          throw h.error;
      }
    }
    return u;
  }, r = S && S.__spreadArray || function(o, a, c) {
    if (c || arguments.length === 2)
      for (var l = 0, f = a.length, u; l < f; l++)
        (u || !(l in a)) && (u || (u = Array.prototype.slice.call(a, 0, l)), u[l] = a[l]);
    return o.concat(u || Array.prototype.slice.call(a));
  };
  Object.defineProperty(Gt, "__esModule", { value: !0 }), Gt.UniqueMap = void 0;
  var n = rd(), i = Wr(), s = function(o) {
    t(a, o);
    function a() {
      return o !== null && o.apply(this, arguments) || this;
    }
    return a.prototype.count = function(c) {
      return this.find(c).equals(this.end()) ? 0 : 1;
    }, a.prototype.get = function(c) {
      var l = this.find(c);
      if (l.equals(this.end()) === !0)
        throw i.ErrorGenerator.key_nout_found(this, "get", c);
      return l.second;
    }, a.prototype.take = function(c, l) {
      var f = this.find(c);
      return f.equals(this.end()) ? this.emplace(c, l()).first.second : f.second;
    }, a.prototype.set = function(c, l) {
      this.insert_or_assign(c, l);
    }, a.prototype.insert = function() {
      for (var c = [], l = 0; l < arguments.length; l++)
        c[l] = arguments[l];
      return o.prototype.insert.apply(this, r([], e(c), !1));
    }, a.prototype._Insert_by_range = function(c, l) {
      for (var f = c; !f.equals(l); f = f.next())
        this.emplace(f.value.first, f.value.second);
    }, a.prototype.insert_or_assign = function() {
      for (var c = [], l = 0; l < arguments.length; l++)
        c[l] = arguments[l];
      if (c.length === 2)
        return this._Insert_or_assign_with_key_value(c[0], c[1]);
      if (c.length === 3)
        return this._Insert_or_assign_with_hint(c[0], c[1], c[2]);
    }, a.prototype._Insert_or_assign_with_key_value = function(c, l) {
      var f = this.emplace(c, l);
      return f.second === !1 && (f.first.second = l), f;
    }, a.prototype._Insert_or_assign_with_hint = function(c, l, f) {
      var u = this.emplace_hint(c, l, f);
      return u.second !== f && (u.second = f), u;
    }, a.prototype.extract = function(c) {
      return c instanceof this.end().constructor ? this._Extract_by_iterator(c) : this._Extract_by_key(c);
    }, a.prototype._Extract_by_key = function(c) {
      var l = this.find(c);
      if (l.equals(this.end()) === !0)
        throw i.ErrorGenerator.key_nout_found(this, "extract", c);
      var f = l.value;
      return this._Erase_by_range(l), f;
    }, a.prototype._Extract_by_iterator = function(c) {
      return c.equals(this.end()) === !0 ? this.end() : (this._Erase_by_range(c), c);
    }, a.prototype._Erase_by_key = function(c) {
      var l = this.find(c);
      return l.equals(this.end()) === !0 ? 0 : (this._Erase_by_range(l), 1);
    }, a.prototype.merge = function(c) {
      for (var l = c.begin(); !l.equals(c.end()); )
        this.has(l.first) === !1 ? (this.insert(l.value), l = c.erase(l)) : l = l.next();
    }, a;
  }(n.MapContainer);
  return Gt.UniqueMap = s, Gt;
}
var kn = {}, Ro;
function id() {
  return Ro || (Ro = 1, function(t) {
    var e = S && S.__extends || function() {
      var a = function(c, l) {
        return a = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(f, u) {
          f.__proto__ = u;
        } || function(f, u) {
          for (var h in u)
            Object.prototype.hasOwnProperty.call(u, h) && (f[h] = u[h]);
        }, a(c, l);
      };
      return function(c, l) {
        if (typeof l != "function" && l !== null)
          throw new TypeError("Class extends value " + String(l) + " is not a constructor or null");
        a(c, l);
        function f() {
          this.constructor = c;
        }
        c.prototype = l === null ? Object.create(l) : (f.prototype = l.prototype, new f());
      };
    }(), r = S && S.__read || function(a, c) {
      var l = typeof Symbol == "function" && a[Symbol.iterator];
      if (!l)
        return a;
      var f = l.call(a), u, h = [], d;
      try {
        for (; (c === void 0 || c-- > 0) && !(u = f.next()).done; )
          h.push(u.value);
      } catch (p) {
        d = { error: p };
      } finally {
        try {
          u && !u.done && (l = f.return) && l.call(f);
        } finally {
          if (d)
            throw d.error;
        }
      }
      return h;
    };
    Object.defineProperty(t, "__esModule", { value: !0 }), t.MapElementList = void 0;
    var n = Ca(), i = mi(), s = Ia(), o = function(a) {
      e(c, a);
      function c(l) {
        var f = a.call(this) || this;
        return f.associative_ = l, f;
      }
      return c.prototype._Create_iterator = function(l, f, u) {
        return c.Iterator.create(this, l, f, u);
      }, c._Swap_associative = function(l, f) {
        var u;
        u = r([f.associative_, l.associative_], 2), l.associative_ = u[0], f.associative_ = u[1];
      }, c.prototype.associative = function() {
        return this.associative_;
      }, c;
    }(n.ListContainer);
    t.MapElementList = o, function(a) {
      var c = function(f) {
        e(u, f);
        function u(h, d, p, y) {
          var g = f.call(this, d, p, y) || this;
          return g.list_ = h, g;
        }
        return u.create = function(h, d, p, y) {
          return new u(h, d, p, y);
        }, u.prototype.reverse = function() {
          return new l(this);
        }, u.prototype.source = function() {
          return this.list_.associative();
        }, Object.defineProperty(u.prototype, "first", {
          get: function() {
            return this.value.first;
          },
          enumerable: !1,
          configurable: !0
        }), Object.defineProperty(u.prototype, "second", {
          get: function() {
            return this.value.second;
          },
          set: function(h) {
            this.value.second = h;
          },
          enumerable: !1,
          configurable: !0
        }), u;
      }(i.ListIterator);
      a.Iterator = c;
      var l = function(f) {
        e(u, f);
        function u() {
          return f !== null && f.apply(this, arguments) || this;
        }
        return u.prototype._Create_neighbor = function(h) {
          return new u(h);
        }, Object.defineProperty(u.prototype, "first", {
          get: function() {
            return this.base_.first;
          },
          enumerable: !1,
          configurable: !0
        }), Object.defineProperty(u.prototype, "second", {
          get: function() {
            return this.base_.second;
          },
          set: function(h) {
            this.base_.second = h;
          },
          enumerable: !1,
          configurable: !0
        }), u;
      }(s.ReverseIterator);
      a.ReverseIterator = l;
    }(o = t.MapElementList || (t.MapElementList = {})), t.MapElementList = o;
  }(kn)), kn;
}
var Yt = {}, To;
function od() {
  if (To)
    return Yt;
  To = 1;
  var t = S && S.__extends || function() {
    var o = function(a, c) {
      return o = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(l, f) {
        l.__proto__ = f;
      } || function(l, f) {
        for (var u in f)
          Object.prototype.hasOwnProperty.call(f, u) && (l[u] = f[u]);
      }, o(a, c);
    };
    return function(a, c) {
      if (typeof c != "function" && c !== null)
        throw new TypeError("Class extends value " + String(c) + " is not a constructor or null");
      o(a, c);
      function l() {
        this.constructor = a;
      }
      a.prototype = c === null ? Object.create(c) : (l.prototype = c.prototype, new l());
    };
  }(), e = S && S.__read || function(o, a) {
    var c = typeof Symbol == "function" && o[Symbol.iterator];
    if (!c)
      return o;
    var l = c.call(o), f, u = [], h;
    try {
      for (; (a === void 0 || a-- > 0) && !(f = l.next()).done; )
        u.push(f.value);
    } catch (d) {
      h = { error: d };
    } finally {
      try {
        f && !f.done && (c = l.return) && c.call(l);
      } finally {
        if (h)
          throw h.error;
      }
    }
    return u;
  }, r = S && S.__values || function(o) {
    var a = typeof Symbol == "function" && Symbol.iterator, c = a && o[a], l = 0;
    if (c)
      return c.call(o);
    if (o && typeof o.length == "number")
      return {
        next: function() {
          return o && l >= o.length && (o = void 0), { value: o && o[l++], done: !o };
        }
      };
    throw new TypeError(a ? "Object is not iterable." : "Symbol.iterator is not defined.");
  };
  Object.defineProperty(Yt, "__esModule", { value: !0 }), Yt.MapHashBuckets = void 0;
  var n = Ra(), i = function(o) {
    t(a, o);
    function a(c, l, f) {
      var u = o.call(this, s, l) || this;
      return u.source_ = c, u.key_eq_ = f, u;
    }
    return a._Swap_source = function(c, l) {
      var f;
      f = e([l.source_, c.source_], 2), c.source_ = f[0], l.source_ = f[1];
    }, a.prototype.key_eq = function() {
      return this.key_eq_;
    }, a.prototype.find = function(c) {
      var l, f, u = this.hash_function()(c) % this.length(), h = this.at(u);
      try {
        for (var d = r(h), p = d.next(); !p.done; p = d.next()) {
          var y = p.value;
          if (this.key_eq_(y.first, c))
            return y;
        }
      } catch (g) {
        l = { error: g };
      } finally {
        try {
          p && !p.done && (f = d.return) && f.call(d);
        } finally {
          if (l)
            throw l.error;
        }
      }
      return this.source_.end();
    }, a;
  }(n.HashBuckets);
  Yt.MapHashBuckets = i;
  function s(o) {
    return o.first;
  }
  return Yt;
}
var Jt = {}, Po;
function sd() {
  if (Po)
    return Jt;
  Po = 1, Object.defineProperty(Jt, "__esModule", { value: !0 }), Jt.Entry = void 0;
  var t = wi(), e = _i(), r = function() {
    function n(i, s) {
      this.first = i, this.second = s;
    }
    return n.prototype.equals = function(i) {
      return (0, e.equal_to)(this.first, i.first);
    }, n.prototype.less = function(i) {
      return (0, e.less)(this.first, i.first);
    }, n.prototype.hashCode = function() {
      return (0, t.hash)(this.first);
    }, n;
  }();
  return Jt.Entry = r, Jt;
}
var Bo;
function ad() {
  return Bo || (Bo = 1, function(t) {
    var e = S && S.__extends || function() {
      var u = function(h, d) {
        return u = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(p, y) {
          p.__proto__ = y;
        } || function(p, y) {
          for (var g in y)
            Object.prototype.hasOwnProperty.call(y, g) && (p[g] = y[g]);
        }, u(h, d);
      };
      return function(h, d) {
        if (typeof d != "function" && d !== null)
          throw new TypeError("Class extends value " + String(d) + " is not a constructor or null");
        u(h, d);
        function p() {
          this.constructor = h;
        }
        h.prototype = d === null ? Object.create(d) : (p.prototype = d.prototype, new p());
      };
    }(), r = S && S.__read || function(u, h) {
      var d = typeof Symbol == "function" && u[Symbol.iterator];
      if (!d)
        return u;
      var p = d.call(u), y, g = [], v;
      try {
        for (; (h === void 0 || h-- > 0) && !(y = p.next()).done; )
          g.push(y.value);
      } catch (_) {
        v = { error: _ };
      } finally {
        try {
          y && !y.done && (d = p.return) && d.call(p);
        } finally {
          if (v)
            throw v.error;
        }
      }
      return g;
    }, n = S && S.__spreadArray || function(u, h, d) {
      if (d || arguments.length === 2)
        for (var p = 0, y = h.length, g; p < y; p++)
          (g || !(p in h)) && (g || (g = Array.prototype.slice.call(h, 0, p)), g[p] = h[p]);
      return u.concat(g || Array.prototype.slice.call(h));
    };
    Object.defineProperty(t, "__esModule", { value: !0 }), t.HashMap = void 0;
    var i = nd(), s = Aa(), o = id(), a = od(), c = sd(), l = Ta(), f = function(u) {
      e(h, u);
      function h() {
        for (var d = [], p = 0; p < arguments.length; p++)
          d[p] = arguments[p];
        var y = u.call(this, function(g) {
          return new o.MapElementList(g);
        }) || this;
        return s.IHashContainer.construct.apply(s.IHashContainer, n([
          y,
          h,
          function(g, v) {
            y.buckets_ = new a.MapHashBuckets(y, g, v);
          }
        ], r(d), !1)), y;
      }
      return h.prototype.clear = function() {
        this.buckets_.clear(), u.prototype.clear.call(this);
      }, h.prototype.swap = function(d) {
        var p, y;
        p = r([d.data_, this.data_], 2), this.data_ = p[0], d.data_ = p[1], o.MapElementList._Swap_associative(this.data_, d.data_), a.MapHashBuckets._Swap_source(this.buckets_, d.buckets_), y = r([d.buckets_, this.buckets_], 2), this.buckets_ = y[0], d.buckets_ = y[1];
      }, h.prototype.find = function(d) {
        return this.buckets_.find(d);
      }, h.prototype.begin = function(d) {
        return d === void 0 && (d = null), d === null ? u.prototype.begin.call(this) : this.buckets_.at(d)[0];
      }, h.prototype.end = function(d) {
        if (d === void 0 && (d = null), d === null)
          return u.prototype.end.call(this);
        var p = this.buckets_.at(d);
        return p[p.length - 1].next();
      }, h.prototype.rbegin = function(d) {
        return d === void 0 && (d = null), this.end(d).reverse();
      }, h.prototype.rend = function(d) {
        return d === void 0 && (d = null), this.begin(d).reverse();
      }, h.prototype.bucket_count = function() {
        return this.buckets_.length();
      }, h.prototype.bucket_size = function(d) {
        return this.buckets_.at(d).length;
      }, h.prototype.load_factor = function() {
        return this.buckets_.load_factor();
      }, h.prototype.hash_function = function() {
        return this.buckets_.hash_function();
      }, h.prototype.key_eq = function() {
        return this.buckets_.key_eq();
      }, h.prototype.bucket = function(d) {
        return this.hash_function()(d) % this.buckets_.length();
      }, h.prototype.max_load_factor = function(d) {
        return d === void 0 && (d = null), this.buckets_.max_load_factor(d);
      }, h.prototype.reserve = function(d) {
        this.buckets_.reserve(d);
      }, h.prototype.rehash = function(d) {
        this.buckets_.rehash(d);
      }, h.prototype.emplace = function(d, p) {
        var y = this.find(d);
        return y.equals(this.end()) === !1 ? new l.Pair(y, !1) : (this.data_.push(new c.Entry(d, p)), y = y.prev(), this._Handle_insert(y, y.next()), new l.Pair(y, !0));
      }, h.prototype.emplace_hint = function(d, p, y) {
        var g = this.find(p);
        return g.equals(this.end()) === !0 && (g = this.data_.insert(d, new c.Entry(p, y)), this._Handle_insert(g, g.next())), g;
      }, h.prototype._Handle_insert = function(d, p) {
        for (; !d.equals(p); d = d.next())
          this.buckets_.insert(d);
      }, h.prototype._Handle_erase = function(d, p) {
        for (; !d.equals(p); d = d.next())
          this.buckets_.erase(d);
      }, h;
    }(i.UniqueMap);
    t.HashMap = f, function(u) {
      u.Iterator = o.MapElementList.Iterator, u.ReverseIterator = o.MapElementList.ReverseIterator;
    }(f = t.HashMap || (t.HashMap = {})), t.HashMap = f;
  }(En)), En;
}
var Lo;
function cd() {
  if (Lo)
    return _r;
  Lo = 1;
  var t = S && S.__values || function(i) {
    var s = typeof Symbol == "function" && i[Symbol.iterator], o = 0;
    return s ? s.call(i) : {
      next: function() {
        return i && o >= i.length && (i = void 0), { value: i && i[o++], done: !i };
      }
    };
  };
  Object.defineProperty(_r, "__esModule", { value: !0 });
  var e = td(), r = ad(), n = function() {
    function i() {
      this.listeners_ = new r.HashMap(), this.created_at_ = new Date();
    }
    return i.prototype.dispatchEvent = function(s) {
      var o, a, c = this.listeners_.find(s.type);
      if (!c.equals(this.listeners_.end())) {
        s.target = this, s.timeStamp = new Date().getTime() - this.created_at_.getTime();
        try {
          for (var l = t(c.second), f = l.next(); !f.done; f = l.next()) {
            var u = f.value;
            u(s);
          }
        } catch (h) {
          o = { error: h };
        } finally {
          try {
            f && !f.done && (a = l.return) && a.call(l);
          } finally {
            if (o)
              throw o.error;
          }
        }
      }
    }, i.prototype.addEventListener = function(s, o) {
      var a = this.listeners_.find(s);
      a.equals(this.listeners_.end()) && (a = this.listeners_.emplace(s, new e.HashSet()).first), a.second.insert(o);
    }, i.prototype.removeEventListener = function(s, o) {
      var a = this.listeners_.find(s);
      a.equals(this.listeners_.end()) || (a.second.erase(o), a.second.empty() && this.listeners_.erase(a));
    }, i;
  }();
  return _r.EventTarget = n, _r;
}
var mr = {}, $o;
function Vr() {
  if ($o)
    return mr;
  $o = 1, Object.defineProperty(mr, "__esModule", { value: !0 });
  var t = function() {
    function e(r, n) {
      this.type = r, n && Object.assign(this, n);
    }
    return e;
  }();
  return mr.Event = t, mr;
}
var xr = {}, qo;
function ud() {
  if (qo)
    return xr;
  qo = 1;
  var t = S && S.__extends || function() {
    var n = function(i, s) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(o, a) {
        o.__proto__ = a;
      } || function(o, a) {
        for (var c in a)
          a.hasOwnProperty(c) && (o[c] = a[c]);
      }, n(i, s);
    };
    return function(i, s) {
      n(i, s);
      function o() {
        this.constructor = i;
      }
      i.prototype = s === null ? Object.create(s) : (o.prototype = s.prototype, new o());
    };
  }();
  Object.defineProperty(xr, "__esModule", { value: !0 });
  var e = Vr(), r = function(n) {
    t(i, n);
    function i(s, o) {
      return n.call(this, s, o) || this;
    }
    return i;
  }(e.Event);
  return xr.CloseEvent = r, xr;
}
var Er = {}, No;
function ld() {
  if (No)
    return Er;
  No = 1;
  var t = S && S.__extends || function() {
    var n = function(i, s) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(o, a) {
        o.__proto__ = a;
      } || function(o, a) {
        for (var c in a)
          a.hasOwnProperty(c) && (o[c] = a[c]);
      }, n(i, s);
    };
    return function(i, s) {
      n(i, s);
      function o() {
        this.constructor = i;
      }
      i.prototype = s === null ? Object.create(s) : (o.prototype = s.prototype, new o());
    };
  }();
  Object.defineProperty(Er, "__esModule", { value: !0 });
  var e = Vr(), r = function(n) {
    t(i, n);
    function i(s, o) {
      return n.call(this, s, o) || this;
    }
    return i;
  }(e.Event);
  return Er.MessageEvent = r, Er;
}
var kr = {}, Uo;
function fd() {
  if (Uo)
    return kr;
  Uo = 1;
  var t = S && S.__extends || function() {
    var n = function(i, s) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(o, a) {
        o.__proto__ = a;
      } || function(o, a) {
        for (var c in a)
          a.hasOwnProperty(c) && (o[c] = a[c]);
      }, n(i, s);
    };
    return function(i, s) {
      n(i, s);
      function o() {
        this.constructor = i;
      }
      i.prototype = s === null ? Object.create(s) : (o.prototype = s.prototype, new o());
    };
  }();
  Object.defineProperty(kr, "__esModule", { value: !0 });
  var e = Vr(), r = function(n) {
    t(i, n);
    function i(s, o) {
      return n.call(this, s, o) || this;
    }
    return i;
  }(e.Event);
  return kr.ErrorEvent = r, kr;
}
var jo;
function hd() {
  return jo || (jo = 1, function(t) {
    var e = S && S.__extends || function() {
      var u = function(h, d) {
        return u = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(p, y) {
          p.__proto__ = y;
        } || function(p, y) {
          for (var g in y)
            y.hasOwnProperty(g) && (p[g] = y[g]);
        }, u(h, d);
      };
      return function(h, d) {
        u(h, d);
        function p() {
          this.constructor = h;
        }
        h.prototype = d === null ? Object.create(d) : (p.prototype = d.prototype, new p());
      };
    }(), r = S && S.__assign || function() {
      return r = Object.assign || function(u) {
        for (var h, d = 1, p = arguments.length; d < p; d++) {
          h = arguments[d];
          for (var y in h)
            Object.prototype.hasOwnProperty.call(h, y) && (u[y] = h[y]);
        }
        return u;
      }, r.apply(this, arguments);
    };
    Object.defineProperty(t, "__esModule", { value: !0 });
    var n = zh(), i = cd(), s = Vr(), o = ud(), a = ld(), c = fd(), l = function(u) {
      e(h, u);
      function h(d, p) {
        var y = u.call(this) || this;
        return y.on_ = {}, y.state_ = h.CONNECTING, y.client_ = new n.client(), y.client_.on("connect", y._Handle_connect.bind(y)), y.client_.on("connectFailed", y._Handle_error.bind(y)), typeof p == "string" && (p = [p]), y.client_.connect(d, p), y;
      }
      return h.prototype.close = function(d, p) {
        this.state_ = h.CLOSING, d === void 0 ? this.connection_.sendCloseFrame() : this.connection_.sendCloseFrame(d, p, !0);
      }, h.prototype.send = function(d) {
        if (typeof d.valueOf() == "string")
          this.connection_.sendUTF(d);
        else {
          var p = void 0;
          d instanceof Buffer ? p = d : d instanceof Blob ? p = new Buffer(d, "blob") : d.buffer ? p = new Buffer(d.buffer) : p = new Buffer(d), this.connection_.sendBytes(p);
        }
      }, Object.defineProperty(h.prototype, "url", {
        get: function() {
          return this.client_.url.href;
        },
        enumerable: !0,
        configurable: !0
      }), Object.defineProperty(h.prototype, "protocol", {
        get: function() {
          return this.client_.protocols ? this.client_.protocols[0] : "";
        },
        enumerable: !0,
        configurable: !0
      }), Object.defineProperty(h.prototype, "extensions", {
        get: function() {
          return this.connection_ && this.connection_.extensions ? this.connection_.extensions[0].name : "";
        },
        enumerable: !0,
        configurable: !0
      }), Object.defineProperty(h.prototype, "readyState", {
        get: function() {
          return this.state_;
        },
        enumerable: !0,
        configurable: !0
      }), Object.defineProperty(h.prototype, "bufferedAmount", {
        get: function() {
          return this.connection_.bytesWaitingToFlush;
        },
        enumerable: !0,
        configurable: !0
      }), Object.defineProperty(h.prototype, "binaryType", {
        get: function() {
          return "arraybuffer";
        },
        enumerable: !0,
        configurable: !0
      }), Object.defineProperty(h.prototype, "onopen", {
        get: function() {
          return this.on_.open;
        },
        set: function(d) {
          this._Set_on("open", d);
        },
        enumerable: !0,
        configurable: !0
      }), Object.defineProperty(h.prototype, "onclose", {
        get: function() {
          return this.on_.close;
        },
        set: function(d) {
          this._Set_on("close", d);
        },
        enumerable: !0,
        configurable: !0
      }), Object.defineProperty(h.prototype, "onmessage", {
        get: function() {
          return this.on_.message;
        },
        set: function(d) {
          this._Set_on("message", d);
        },
        enumerable: !0,
        configurable: !0
      }), Object.defineProperty(h.prototype, "onerror", {
        get: function() {
          return this.on_.error;
        },
        set: function(d) {
          this._Set_on("error", d);
        },
        enumerable: !0,
        configurable: !0
      }), h.prototype._Set_on = function(d, p) {
        this.on_[d] && this.removeEventListener(d, this.on_[d]), this.addEventListener(d, p), this.on_[d] = p;
      }, h.prototype._Handle_connect = function(d) {
        this.connection_ = d, this.state_ = h.OPEN, this.connection_.on("message", this._Handle_message.bind(this)), this.connection_.on("error", this._Handle_error.bind(this)), this.connection_.on("close", this._Handle_close.bind(this));
        var p = new s.Event("open", f);
        this.dispatchEvent(p);
      }, h.prototype._Handle_close = function(d, p) {
        var y = new o.CloseEvent("close", r({}, f, { code: d, reason: p }));
        this.state_ = h.CLOSED, this.dispatchEvent(y);
      }, h.prototype._Handle_message = function(d) {
        var p = new a.MessageEvent("message", r({}, f, { data: d.binaryData ? d.binaryData : d.utf8Data }));
        this.dispatchEvent(p);
      }, h.prototype._Handle_error = function(d) {
        var p = new c.ErrorEvent("error", r({}, f, { error: d, message: d.message }));
        this.state_ === h.CONNECTING && (this.state_ = h.CLOSED), this.dispatchEvent(p);
      }, h;
    }(i.EventTarget);
    t.WebSocket = l, function(u) {
      u.CONNECTING = 0, u.OPEN = 1, u.CLOSING = 2, u.CLOSED = 3;
    }(l = t.WebSocket || (t.WebSocket = {})), t.WebSocket = l;
    var f = {
      bubbles: !1,
      cancelable: !1
    };
  }(pn)), pn;
}
var dd = cr;
dd.is_node() && (S.WebSocket = hd().WebSocket);
BigInt(1e3), BigInt(1e6), BigInt(1e9), BigInt(1e12);
BigInt("2100000000000000000");
BigInt(1e11);
const Ho = {
  payment_hash: 1,
  payment_secret: 16,
  description: 13,
  payee: 19,
  description_hash: 23,
  expiry: 6,
  min_final_cltv_expiry: 24,
  fallback_address: 9,
  route_hint: 3,
  feature_bits: 5,
  metadata: 27
};
for (let t = 0, e = Object.keys(Ho); t < e.length; t++)
  e[t], Ho[e[t]].toString();
function pd(t, e) {
  return t.created_at > e.created_at ? t : e;
}
var yd = [
  "wss://nos.lol",
  "wss://relay.nostr.band",
  "wss://relay.f7z.io",
  "wss://relay.damus.io",
  "wss://nostr.mom",
  "wss://no.str.cr"
], gd = class extends dt {
  constructor(e) {
    super();
    I(this, "ndk");
    I(this, "zappedEvent");
    I(this, "zappedUser");
    this.ndk = e.ndk, this.zappedEvent = e.zappedEvent, this.zappedUser = e.zappedUser || this.ndk.getUser({ hexpubkey: this.zappedEvent.pubkey });
  }
  async getZapEndpoint() {
    let e, r, n, i;
    if (this.zappedEvent) {
      const a = (await this.zappedEvent.getMatchingTags("zap"))[0];
      if (a)
        switch (a[2]) {
          case "lud06":
            e = a[1];
            break;
          case "lud16":
            r = a[1];
            break;
          default:
            throw new Error(`Unknown zap tag ${a}`);
        }
    }
    if (this.zappedUser && !e && !r && (this.zappedUser.profile || await this.zappedUser.fetchProfile(), e = (this.zappedUser.profile || {}).lud06, r = (this.zappedUser.profile || {}).lud16), r) {
      const [a, c] = r.split("@");
      n = `https://${c}/.well-known/lnurlp/${a}`;
    } else if (e) {
      const { words: a } = te.decode(e, 1e3), c = te.fromWords(a);
      n = new TextDecoder("utf-8").decode(c);
    }
    if (!n)
      throw new Error("No zap endpoint found");
    const o = await (await fetch(n)).json();
    return (o == null ? void 0 : o.allowsNostr) && ((o == null ? void 0 : o.nostrPubkey) || (o == null ? void 0 : o.nostrPubKey)) && (i = o.callback), i;
  }
  async createZapRequest(e, r, n, i) {
    const s = await this.getZapEndpoint();
    if (!s)
      throw new Error("No zap endpoint found");
    if (!this.zappedEvent)
      throw new Error("No zapped event found");
    const o = Ea.makeZapRequest({
      profile: this.zappedUser.hexpubkey(),
      event: null,
      amount: e,
      comment: r || "",
      relays: i != null ? i : this.relays()
    });
    if (this.zappedEvent) {
      const u = this.zappedEvent.tagReference();
      u && o.tags.push(u);
    }
    o.tags.push(["lnurl", s]);
    const a = new qe(this.ndk, o);
    n && (a.tags = a.tags.concat(n)), await a.sign();
    const c = await a.toNostrEvent();
    return (await (await fetch(
      `${s}?` + new URLSearchParams({
        amount: e.toString(),
        nostr: JSON.stringify(c)
      })
    )).json()).pr;
  }
  relays() {
    var r, n;
    let e = [];
    return (n = (r = this.ndk) == null ? void 0 : r.pool) != null && n.relays && (e = this.ndk.pool.urls()), e.length || (e = yd), e;
  }
};
function bd(t, e = []) {
  const r = /(@|nostr:)(npub|nprofile|note|nevent)[a-zA-Z0-9]+/g;
  return t = t.replace(r, (n) => {
    try {
      const i = n.split(/(@|nostr:)/)[2], { type: s, data: o } = we.decode(i);
      let a;
      switch (s) {
        case "npub":
          a = ["p", o];
          break;
        case "nprofile":
          a = ["p", o.pubkey];
          break;
        case "nevent":
          a = ["e", o.id];
          break;
        case "note":
          a = ["e", o];
          break;
        default:
          return n;
      }
      return e.find((c) => c[0] === a[0] && c[1] === a[1]) || e.push(a), `nostr:${i}`;
    } catch {
      return n;
    }
  }), { content: t, tags: e };
}
function vd() {
  if (this.kind === void 0)
    throw new Error("Kind not set");
  return this.kind >= 1e4 && this.kind < 2e4;
}
function wd() {
  if (this.kind === void 0)
    throw new Error("Kind not set");
  return this.kind >= 3e4 && this.kind < 4e4;
}
async function _d() {
  if (!this.ndk)
    throw new Error("NDK not set");
  const t = await this.ndk.fetchEvents({
    kinds: [3],
    authors: [this.hexpubkey()]
  });
  if (t) {
    const e = /* @__PURE__ */ new Set();
    return t.forEach((r) => {
      r.tags.forEach((n) => {
        if (n[0] === "p")
          try {
            const i = we.npubEncode(n[1]);
            e.add(i);
          } catch {
          }
      });
    }), [...e].reduce((r, n) => {
      const i = new pe({ npub: n });
      return i.ndk = this.ndk, r.add(i), r;
    }, /* @__PURE__ */ new Set());
  }
  return /* @__PURE__ */ new Set();
}
function md(t, e) {
  const r = JSON.parse(t.content);
  return Object.keys(r).forEach((n) => {
    switch (n) {
      case "name":
        e.name = r.name;
        break;
      case "display_name":
      case "displayName":
        e.displayName = r.displayName || r.display_name;
        break;
      case "image":
      case "picture":
        e.image = r.image || r.picture;
        break;
      case "banner":
        e.banner = r.banner;
        break;
      case "bio":
        e.bio = r.bio;
        break;
      case "nip05":
        e.nip05 = r.nip05;
        break;
      case "lud06":
        e.lud06 = r.lud06;
        break;
      case "lud16":
        e.lud16 = r.lud16;
        break;
      case "about":
        e.about = r.about;
        break;
      case "zapService":
        e.zapService = r.zapService;
        break;
      case "website":
        e.website = r.website;
        break;
      default:
        e[n] = r[n];
        break;
    }
  }), e;
}
var pe = class {
  constructor(t) {
    I(this, "ndk");
    I(this, "profile");
    I(this, "npub", "");
    I(this, "relayUrls", []);
    I(this, "follows", _d.bind(this));
    t.npub && (this.npub = t.npub), t.hexpubkey && (this.npub = we.npubEncode(t.hexpubkey)), t.relayUrls && (this.relayUrls = t.relayUrls);
  }
  static async fromNip05(t) {
    const e = await _a.queryProfile(t);
    if (e)
      return new pe({
        hexpubkey: e.pubkey,
        relayUrls: e.relays
      });
  }
  hexpubkey() {
    return we.decode(this.npub).data;
  }
  async fetchProfile(t) {
    if (!this.ndk)
      throw new Error("NDK not set");
    this.profile || (this.profile = {});
    const e = await this.ndk.fetchEvents(
      {
        kinds: [0],
        authors: [this.hexpubkey()]
      },
      t
    );
    return e && Array.from(e).sort(
      (n, i) => n.created_at - i.created_at
    ).forEach((n) => {
      try {
        this.profile = md(n, this.profile);
      } catch {
      }
    }), e;
  }
  async relayList() {
    if (!this.ndk)
      throw new Error("NDK not set");
    const t = await this.ndk.fetchEvents({
      kinds: [10002],
      authors: [this.hexpubkey()]
    });
    return t || /* @__PURE__ */ new Set();
  }
  tagReference() {
    return ["p", this.hexpubkey()];
  }
  async publish() {
    if (!this.ndk)
      throw new Error("No NDK instance found");
    this.ndk.assertSigner(), await new qe(this.ndk, {
      kind: 0,
      content: JSON.stringify(this.profile)
    }).publish();
  }
  async follow(t, e) {
    if (!this.ndk)
      throw new Error("No NDK instance found");
    if (this.ndk.assertSigner(), e || (e = await this.follows()), e.has(t))
      return !1;
    e.add(t);
    const r = new qe(this.ndk, { kind: 3 });
    for (const n of e)
      r.tag(n);
    return await r.publish(), !0;
  }
};
async function xd(t, e) {
  if (!e) {
    if (!this.ndk)
      throw new Error("No signer available");
    await this.ndk.assertSigner(), e = this.ndk.signer;
  }
  if (!t) {
    const r = this.getMatchingTags("p");
    if (r.length !== 1)
      throw new Error("No recipient could be determined and no explicit recipient was provided");
    t = new pe({ hexpubkey: r[0][1] }), t.ndk = this.ndk;
  }
  this.content = await e.encrypt(t, this.content);
}
async function Ed(t, e) {
  if (!e) {
    if (!this.ndk)
      throw new Error("No signer available");
    await this.ndk.assertSigner(), e = this.ndk.signer;
  }
  t || (t = this.author), this.content = await e.decrypt(t, this.content);
}
function kd() {
  return this.isParamReplaceable() ? we.naddrEncode({
    kind: this.kind,
    pubkey: this.pubkey,
    identifier: this.replaceableDTag()
  }) : we.noteEncode(this.tagId());
}
async function Sd(t = !0, e) {
  if (!e) {
    if (!this.ndk)
      throw new Error("No NDK instance found");
    this.ndk.assertSigner(), e = this.ndk.signer;
  }
  if (!e)
    throw new Error("No signer available");
  const r = await e.user(), n = new qe(this.ndk, {
    kind: Od(this),
    content: "",
    pubkey: r.hexpubkey()
  });
  return n.tag(this), n.kind === 16 && n.tags.push(["k", `${this.kind}`]), await n.sign(e), t && await n.publish(), n;
}
function Od(t) {
  return t.kind === 1 ? 6 : 16;
}
var qe = class extends dt {
  constructor(e, r) {
    super();
    I(this, "ndk");
    I(this, "created_at");
    I(this, "content", "");
    I(this, "tags", []);
    I(this, "kind");
    I(this, "id", "");
    I(this, "sig");
    I(this, "pubkey", "");
    I(this, "relay");
    I(this, "isReplaceable", vd.bind(this));
    I(this, "isParamReplaceable", wd.bind(this));
    I(this, "encode", kd.bind(this));
    I(this, "encrypt", xd.bind(this));
    I(this, "decrypt", Ed.bind(this));
    I(this, "repost", Sd.bind(this));
    this.ndk = e, this.created_at = r == null ? void 0 : r.created_at, this.content = (r == null ? void 0 : r.content) || "", this.tags = (r == null ? void 0 : r.tags) || [], this.id = (r == null ? void 0 : r.id) || "", this.sig = r == null ? void 0 : r.sig, this.pubkey = (r == null ? void 0 : r.pubkey) || "", this.kind = r == null ? void 0 : r.kind;
  }
  rawEvent() {
    return {
      created_at: this.created_at,
      content: this.content,
      tags: this.tags,
      kind: this.kind,
      pubkey: this.pubkey,
      id: this.id,
      sig: this.sig
    };
  }
  set author(e) {
    this.pubkey = e.hexpubkey();
  }
  get author() {
    const e = new pe({ hexpubkey: this.pubkey });
    return e.ndk = this.ndk, e;
  }
  tag(e, r) {
    const n = e.tagReference();
    if (r && n.push(r), this.tags.push(n), e instanceof qe) {
      const i = e.author;
      i && this.pubkey !== i.hexpubkey() && this.tag(i);
      for (const s of e.getMatchingTags("p"))
        s[1] !== this.pubkey && (this.tags.find((o) => o[0] === "p" && o[1] === s[1]) || this.tags.push(["p", s[1]]));
    }
  }
  async toNostrEvent(e) {
    var s, o;
    if (!e && this.pubkey === "") {
      const a = await ((o = (s = this.ndk) == null ? void 0 : s.signer) == null ? void 0 : o.user());
      this.pubkey = (a == null ? void 0 : a.hexpubkey()) || "";
    }
    this.created_at || (this.created_at = Math.floor(Date.now() / 1e3));
    const r = this.rawEvent(), { content: n, tags: i } = this.generateTags();
    r.content = n || "", r.tags = i;
    try {
      this.id = Hr(r);
    } catch {
    }
    return this.id && (r.id = this.id), this.sig && (r.sig = this.sig), r;
  }
  getMatchingTags(e) {
    return this.tags.filter((r) => r[0] === e);
  }
  tagValue(e) {
    const r = this.getMatchingTags(e);
    if (r.length !== 0)
      return r[0][1];
  }
  removeTag(e) {
    this.tags = this.tags.filter((r) => r[0] !== e);
  }
  async sign(e) {
    var n;
    e || ((n = this.ndk) == null || n.assertSigner(), e = this.ndk.signer), await this.generateTags(), this.isReplaceable() && (this.created_at = Math.floor(Date.now() / 1e3));
    const r = await this.toNostrEvent();
    return this.sig = await e.sign(r), this.sig;
  }
  async publish(e, r) {
    if (this.sig || await this.sign(), !this.ndk)
      throw new Error("NDKEvent must be associated with an NDK instance to publish");
    return this.ndk.publish(this, e, r);
  }
  generateTags() {
    let e = [];
    const r = bd(this.content, this.tags), n = r.content;
    if (e = r.tags, this.kind && this.kind >= 3e4 && this.kind <= 4e4 && !this.getMatchingTags("d")[0]) {
      const s = [...Array(16)].map(() => Math.random().toString(36)[2]).join("");
      e.push(["d", s]);
    }
    return { content: n || "", tags: e };
  }
  replaceableDTag() {
    if (this.kind && this.kind >= 3e4 && this.kind <= 4e4) {
      const e = this.getMatchingTags("d")[0];
      return e ? e[1] : "";
    }
    throw new Error("Event is not a parameterized replaceable event");
  }
  tagId() {
    if (this.kind && this.kind >= 3e4 && this.kind <= 4e4) {
      const e = this.replaceableDTag();
      return `${this.kind}:${this.pubkey}:${e}`;
    }
    return this.id;
  }
  tagReference() {
    return this.isParamReplaceable() ? ["a", this.tagId()] : ["e", this.tagId()];
  }
  filter() {
    return this.isParamReplaceable() ? { "#a": [this.tagId()] } : { "#e": [this.tagId()] };
  }
  async zap(e, r, n) {
    if (!this.ndk)
      throw new Error("No NDK instance found");
    return this.ndk.assertSigner(), await new gd({
      ndk: this.ndk,
      zappedEvent: this
    }).createZapRequest(e, r, n);
  }
  async delete(e) {
    if (!this.ndk)
      throw new Error("No NDK instance found");
    this.ndk.assertSigner();
    const r = new qe(this.ndk, {
      kind: 5,
      content: e || ""
    });
    return r.tag(this), await r.publish(), r;
  }
}, Ad = class extends dt {
  constructor(e) {
    super();
    I(this, "url");
    I(this, "scores");
    I(this, "relay");
    I(this, "_status");
    I(this, "connectedAt");
    I(this, "_connectionStats", { attempts: 0, success: 0, durations: [] });
    I(this, "complaining", !1);
    I(this, "debug");
    I(this, "activeSubscriptions", /* @__PURE__ */ new Set());
    I(this, "updateConnectionStats", {
      connected: () => {
        this._connectionStats.success++, this._connectionStats.connectedAt = Date.now();
      },
      disconnected: () => {
        this._connectionStats.connectedAt && (this._connectionStats.durations.push(
          Date.now() - this._connectionStats.connectedAt
        ), this._connectionStats.durations.length > 100 && this._connectionStats.durations.shift()), this._connectionStats.connectedAt = void 0;
      },
      attempt: () => {
        this._connectionStats.attempts++;
      }
    });
    this.url = e, this.relay = Af(e), this.scores = /* @__PURE__ */ new Map(), this._status = 3, this.debug = Mn(`ndk:relay:${e}`), this.relay.on("connect", () => {
      this.updateConnectionStats.connected(), this._status = 1, this.emit("connect");
    }), this.relay.on("disconnect", () => {
      this.updateConnectionStats.disconnected(), this._status === 1 && (this._status = 3, this.handleReconnection()), this.emit("disconnect");
    }), this.relay.on("notice", (r) => this.handleNotice(r));
  }
  isFlapping() {
    const e = this._connectionStats.durations;
    if (e.length < 10)
      return !1;
    const n = e.reduce((a, c) => a + c, 0) / e.length, i = e.map((a) => Math.pow(a - n, 2)).reduce((a, c) => a + c, 0) / e.length;
    return Math.sqrt(i) < 1e3;
  }
  handleReconnection() {
    this.isFlapping() && (this.emit("flapping", this, this._connectionStats), this._status = 5), this.connectedAt && Date.now() - this.connectedAt < 5e3 ? setTimeout(() => this.connect(), 6e4) : this.connect();
  }
  get status() {
    return this._status;
  }
  async connect() {
    try {
      this.updateConnectionStats.attempt(), this._status = 0, await this.relay.connect();
    } catch (e) {
      throw this.debug("Failed to connect", e), this._status = 3, e;
    }
  }
  disconnect() {
    this._status = 2, this.relay.close();
  }
  async handleNotice(e) {
    (e.includes("oo many") || e.includes("aximum")) && (this.disconnect(), setTimeout(() => this.connect(), 2e3), this.debug(this.relay.url, "Relay complaining?", e)), this.emit("notice", this, e);
  }
  subscribe(e) {
    const { filter: r } = e, n = this.relay.sub([r], {
      id: e.subId
    });
    this.debug(`Subscribed to ${JSON.stringify(r)}`), n.on("event", (s) => {
      const o = new qe(void 0, s);
      o.relay = this, e.eventReceived(o, this);
    }), n.on("eose", () => {
      e.eoseReceived(this);
    });
    const i = n.unsub;
    return n.unsub = () => {
      this.debug(`Unsubscribing from ${JSON.stringify(r)}`), this.activeSubscriptions.delete(e), i();
    }, this.activeSubscriptions.add(e), e.on("close", () => {
      this.activeSubscriptions.delete(e);
    }), n;
  }
  async publish(e, r = 2500) {
    return this.status === 1 ? this.publishEvent(e, r) : (this.once("connect", () => {
      this.publishEvent(e, r);
    }), !0);
  }
  async publishEvent(e, r) {
    const n = await e.toNostrEvent(), i = this.relay.publish(n);
    let s;
    const o = new Promise((c, l) => {
      i.on("failed", (f) => {
        clearTimeout(s), this.debug("Publish failed", f, e.id), this.emit("publish:failed", e, f), l(f);
      }), i.on("ok", () => {
        clearTimeout(s), this.emit("published", e), c(!0);
      });
    });
    if (!r)
      return o;
    const a = new Promise((c, l) => {
      s = setTimeout(() => {
        this.debug("Publish timed out", e.rawEvent()), this.emit("publish:failed", e, "Timeout"), l(new Error("Publish operation timed out"));
      }, r);
    });
    return Promise.race([o, a]);
  }
  scoreSlowerEvent(e) {
  }
  get connectionStats() {
    return this._connectionStats;
  }
  tagReference(e) {
    const r = ["r", this.relay.url];
    return e && r.push(e), r;
  }
}, Cd = class extends dt {
  constructor(e = [], r) {
    super();
    I(this, "relays", /* @__PURE__ */ new Map());
    I(this, "debug");
    this.debug = r.debug.extend("pool");
    for (const n of e) {
      const i = new Ad(n);
      i.on("notice", (s, o) => this.emit("notice", s, o)), i.on("connect", () => this.handleRelayConnect(n)), i.on("disconnect", () => this.emit("relay:disconnect", i)), i.on("flapping", () => this.handleFlapping(i)), this.relays.set(n, i);
    }
  }
  handleRelayConnect(e) {
    this.debug(`Relay ${e} connected`), this.emit("relay:connect", this.relays.get(e)), this.stats().connected === this.relays.size && this.emit("connect");
  }
  async connect(e) {
    const r = [];
    this.debug(
      `Connecting to ${this.relays.size} relays${e ? `, timeout ${e}...` : ""}`
    );
    for (const n of this.relays.values())
      if (e) {
        const i = new Promise((s, o) => {
          setTimeout(() => o(`Timed out after ${e}ms`), e);
        });
        r.push(
          Promise.race([n.connect(), i]).catch((s) => {
            this.debug(`Failed to connect to relay ${n.url}: ${s}`);
          })
        );
      } else
        r.push(n.connect());
    e && setTimeout(() => {
      const n = this.stats().connected === this.relays.size, i = this.stats().connected > 0;
      !n && i && this.emit("connect");
    }, e), await Promise.all(r);
  }
  handleFlapping(e) {
    this.debug(`Relay ${e.url} is flapping`), this.relays.delete(e.url), this.emit("flapping", e);
  }
  size() {
    return this.relays.size;
  }
  stats() {
    const e = {
      total: 0,
      connected: 0,
      disconnected: 0,
      connecting: 0
    };
    for (const r of this.relays.values())
      e.total++, r.status === 1 ? e.connected++ : r.status === 3 ? e.disconnected++ : r.status === 0 && e.connecting++;
    return e;
  }
  urls() {
    return Array.from(this.relays.keys());
  }
};
function Id(t) {
  return !!(Rd(t.filter) && Td(t));
}
function Rd(t) {
  return !!t.ids;
}
function Td(t) {
  const e = t.filter.ids;
  return !!e && e.length === t.eventFirstSeen.size;
}
var Pd = {
  closeOnEose: !0,
  cacheUsage: "CACHE_FIRST",
  groupable: !0,
  groupableDelay: 100
}, Pa = class extends dt {
  constructor(e, r, n, i, s) {
    super();
    I(this, "subId");
    I(this, "filter");
    I(this, "opts");
    I(this, "relaySet");
    I(this, "ndk");
    I(this, "relaySubscriptions");
    I(this, "debug");
    I(this, "eventFirstSeen", /* @__PURE__ */ new Map());
    I(this, "eosesSeen", /* @__PURE__ */ new Set());
    I(this, "eventsPerRelay", /* @__PURE__ */ new Map());
    I(this, "eoseTimeout");
    if (this.ndk = e, this.opts = { ...Pd, ...n || {} }, this.subId = s || (n == null ? void 0 : n.subId) || qd(r), this.filter = r, this.relaySet = i, this.relaySubscriptions = /* @__PURE__ */ new Map(), this.debug = e.debug.extend(`subscription:${this.subId}`), this.opts.cacheUsage === "ONLY_CACHE" && !this.opts.closeOnEose)
      throw new Error("Cannot use cache-only options with a persistent subscription");
  }
  groupableId() {
    var i, s;
    if (!((i = this.opts) != null && i.groupable))
      return null;
    const e = (((s = this.filter.kinds) == null ? void 0 : s.length) || 0) > 0, r = !this.filter.since && !this.filter.until, n = !this.filter.limit;
    if (e && r && n) {
      let o = this.filter.kinds.join(",");
      const a = Object.keys(this.filter || {}).sort().join("-");
      return o += `-${a}`, o;
    }
    return null;
  }
  shouldQueryCache() {
    var e;
    return ((e = this.opts) == null ? void 0 : e.cacheUsage) !== "ONLY_RELAY";
  }
  shouldQueryRelays() {
    var e;
    return ((e = this.opts) == null ? void 0 : e.cacheUsage) !== "ONLY_CACHE";
  }
  shouldWaitForCache() {
    var e;
    return this.opts.closeOnEose && !!((e = this.ndk.cacheAdapter) != null && e.locking) && this.shouldQueryRelays() && this.opts.cacheUsage !== "PARALLEL";
  }
  async start() {
    let e;
    if (this.shouldQueryCache() && (e = this.startWithCache(), this.shouldWaitForCache() && (await e, Id(this)))) {
      this.debug("cache hit, fully filled: skipping relay query"), this.emit("eose", this);
      return;
    }
    this.shouldQueryRelays() && this.startWithRelaySet();
  }
  stop() {
    this.relaySubscriptions.forEach((e) => e.unsub()), this.relaySubscriptions.clear(), this.emit("close", this);
  }
  async startWithCache() {
    var e;
    if ((e = this.ndk.cacheAdapter) != null && e.query) {
      const r = this.ndk.cacheAdapter.query(this);
      this.ndk.cacheAdapter.locking && await r;
    }
  }
  startWithRelaySet() {
    this.relaySet || (this.relaySet = Ud(this.ndk, this.filter)), this.relaySet && this.relaySet.subscribe(this);
  }
  eventReceived(e, r, n = !1) {
    if (!n && r) {
      let i = this.eventsPerRelay.get(r);
      if (i || (i = /* @__PURE__ */ new Set(), this.eventsPerRelay.set(r, i)), i.add(e.id), this.eventFirstSeen.has(e.id)) {
        const o = Date.now() - (this.eventFirstSeen.get(e.id) || 0);
        r.scoreSlowerEvent(o), this.emit("event:dup", e, r, o, this);
        return;
      }
      this.ndk.cacheAdapter && this.ndk.cacheAdapter.setEvent(e, this.filter), this.eventFirstSeen.set(`${e.id}`, Date.now());
    } else
      this.eventFirstSeen.set(`${e.id}`, 0);
    this.emit("event", e, r, this);
  }
  eoseReceived(e) {
    var n, i, s;
    (n = this.opts) != null && n.closeOnEose && ((i = this.relaySubscriptions.get(e)) == null || i.unsub(), this.relaySubscriptions.delete(e), this.relaySubscriptions.size === 0 && this.emit("close", this)), this.eosesSeen.add(e), this.eosesSeen.size === ((s = this.relaySet) == null ? void 0 : s.size()) ? this.emit("eose") : (this.eoseTimeout && clearTimeout(this.eoseTimeout), this.eoseTimeout = setTimeout(() => {
      this.emit("eose");
    }, 500));
  }
}, Bd = class extends Pa {
  constructor(e, r) {
    const n = e.debug.extend("subscription-group"), i = Ld(r.map((s) => s.filter));
    super(
      e,
      i,
      r[0].opts,
      r[0].relaySet
    );
    I(this, "subscriptions");
    this.subscriptions = r, n("merged filters", {
      count: r.length,
      mergedFilters: this.filter
    }), this.on("event", this.forwardEvent), this.on("event:dup", this.forwardEventDup), this.on("eose", this.forwardEose), this.on("close", this.forwardClose);
  }
  isEventForSubscription(e, r) {
    const { filter: n } = r;
    return n ? ya(n, e.rawEvent()) : !1;
  }
  forwardEvent(e, r) {
    for (const n of this.subscriptions)
      !this.isEventForSubscription(e, n) || n.emit("event", e, r, n);
  }
  forwardEventDup(e, r, n) {
    for (const i of this.subscriptions)
      !this.isEventForSubscription(e, i) || i.emit("event:dup", e, r, n, i);
  }
  forwardEose() {
    for (const e of this.subscriptions)
      e.emit("eose", e);
  }
  forwardClose() {
    for (const e of this.subscriptions)
      e.emit("close", e);
  }
};
function Ld(t) {
  const e = {};
  return t.forEach((r) => {
    Object.entries(r).forEach(([n, i]) => {
      Array.isArray(i) ? e[n] === void 0 ? e[n] = [...i] : e[n] = Array.from(/* @__PURE__ */ new Set([...e[n], ...i])) : e[n] = i;
    });
  }), e;
}
function $d(t) {
  let e;
  try {
    switch (e = we.decode(t), e.type) {
      case "nevent":
        return { ids: [e.data.id] };
      case "note":
        return { ids: [e.data] };
      case "naddr":
        return {
          authors: [e.data.pubkey],
          "#d": [e.data.identifier],
          kinds: [e.data.kind]
        };
    }
  } catch {
  }
  return { ids: [t] };
}
function qd(t) {
  const e = Object.keys(t) || [], r = [];
  for (const n of e)
    if (n === "kinds") {
      const i = [n, t.kinds.join(",")];
      r.push(i.join(":"));
    } else
      r.push(n);
  return r.push(Math.floor(Math.random() * 999999999).toString()), r.join("-");
}
var Gr = class {
  constructor(t, e) {
    I(this, "relays");
    I(this, "debug");
    I(this, "ndk");
    this.relays = t, this.ndk = e, this.debug = e.debug.extend("relayset");
  }
  static fromRelayUrls(t, e) {
    const r = /* @__PURE__ */ new Set();
    for (const n of t) {
      const i = e.pool.relays.get(n);
      i && r.add(i);
    }
    return new Gr(new Set(r), e);
  }
  subscribeOnRelay(t, e) {
    const r = t.subscribe(e);
    e.relaySubscriptions.set(t, r);
  }
  getId() {
    const e = Array.from(this.relays).map((r) => r.url).sort().join(",");
    return ni(jr(e));
  }
  subscribe(t) {
    const e = t.groupableId(), r = `${this.getId()}:${e}`;
    if (!e)
      return this.executeSubscription(t), t;
    const n = this.ndk.delayedSubscriptions.get(r);
    return n ? n.push(t) : (setTimeout(() => {
      this.executeDelayedSubscription(r);
    }, t.opts.groupableDelay), this.ndk.delayedSubscriptions.set(r, [t])), t;
  }
  executeDelayedSubscription(t) {
    const e = this.ndk.delayedSubscriptions.get(t);
    this.ndk.delayedSubscriptions.delete(t), e && (e.length > 1 ? this.executeSubscriptions(e) : this.executeSubscription(e[0]));
  }
  executeSubscriptions(t) {
    const e = t[0].ndk, r = new Bd(e, t);
    this.executeSubscription(r);
  }
  executeSubscription(t) {
    this.debug("subscribing", { filter: t.filter });
    for (const e of this.relays)
      if (e.status === 1)
        this.subscribeOnRelay(e, t);
      else {
        const r = () => {
          this.debug("new relay coming online for active subscription", {
            relay: e.url,
            filter: t.filter
          }), this.subscribeOnRelay(e, t);
        };
        e.once("connect", r), t.once("close", () => {
          e.removeListener("connect", r);
        });
      }
    return t;
  }
  async publish(t, e) {
    const r = /* @__PURE__ */ new Set(), n = Array.from(this.relays).map((i) => new Promise((s) => {
      i.publish(t, e).then(() => {
        r.add(i), s();
      }).catch((o) => {
        this.debug("error publishing to relay", { relay: i.url, err: o }), s();
      });
    }));
    if (await Promise.all(n), r.size === 0)
      throw new Error("No relay was able to receive the event");
    return r;
  }
  size() {
    return this.relays.size;
  }
};
function Nd(t, e) {
  var n;
  const r = /* @__PURE__ */ new Set();
  return (n = t.pool) == null || n.relays.forEach((i) => r.add(i)), new Gr(r, t);
}
function Ud(t, e) {
  var n;
  const r = /* @__PURE__ */ new Set();
  return (n = t.pool) == null || n.relays.forEach((i) => {
    i.complaining ? t.debug(`Relay ${i.url} is complaining, not adding to set`) : r.add(i);
  }), new Gr(r, t);
}
var jd = class {
  constructor() {
    I(this, "_userPromise");
    I(this, "nip04Queue", []);
    I(this, "nip04Processing", !1);
    I(this, "debug");
    if (!window.nostr)
      throw new Error("NIP-07 extension not available");
    this.debug = Mn("ndk:nip07");
  }
  async blockUntilReady() {
    var e;
    const t = await ((e = window.nostr) == null ? void 0 : e.getPublicKey());
    if (!t)
      throw new Error("User rejected access");
    return new pe({ hexpubkey: t });
  }
  async user() {
    return this._userPromise || (this._userPromise = this.blockUntilReady()), this._userPromise;
  }
  async sign(t) {
    if (!window.nostr)
      throw new Error("NIP-07 extension not available");
    return (await window.nostr.signEvent(t)).sig;
  }
  async encrypt(t, e) {
    if (!window.nostr)
      throw new Error("NIP-07 extension not available");
    const r = t.hexpubkey();
    return this.queueNip04("encrypt", r, e);
  }
  async decrypt(t, e) {
    if (!window.nostr)
      throw new Error("NIP-07 extension not available");
    const r = t.hexpubkey();
    return this.queueNip04("decrypt", r, e);
  }
  async queueNip04(t, e, r) {
    return new Promise((n, i) => {
      this.nip04Queue.push({ type: t, counterpartyHexpubkey: e, value: r, resolve: n, reject: i }), this.nip04Processing || this.processNip04Queue();
    });
  }
  async processNip04Queue(t, e = 0) {
    if (!t && this.nip04Queue.length === 0) {
      this.nip04Processing = !1;
      return;
    }
    this.nip04Processing = !0;
    const { type: r, counterpartyHexpubkey: n, value: i, resolve: s, reject: o } = t || this.nip04Queue.shift();
    this.debug("Processing encryption queue item", { type: r, counterpartyHexpubkey: n, value: i });
    try {
      let a;
      r === "encrypt" ? a = await window.nostr.nip04.encrypt(n, i) : a = await window.nostr.nip04.decrypt(n, i), s(a);
    } catch (a) {
      if (a.message && a.message.includes("call already executing") && e < 5) {
        this.debug("Retrying encryption queue item", { type: r, counterpartyHexpubkey: n, value: i, retries: e }), setTimeout(() => {
          this.processNip04Queue(t, e + 1);
        }, 50 * e);
        return;
      }
      o(a);
    }
    this.processNip04Queue();
  }
}, Hd = class extends dt {
  constructor(e, r, n) {
    super();
    I(this, "ndk");
    I(this, "signer");
    I(this, "debug");
    this.ndk = e, this.signer = r, this.debug = n.extend("rpc");
  }
  async subscribe(e) {
    const r = this.ndk.subscribe(e, { closeOnEose: !1 });
    return r.on("event", async (n) => {
      try {
        const i = await this.parseEvent(n);
        i.method ? this.emit("request", i) : this.emit(`response-${i.id}`, i);
      } catch (i) {
        this.debug("error parsing event", i, n);
      }
    }), new Promise((n, i) => {
      r.on("eose", () => n(r));
    });
  }
  async parseEvent(e) {
    const r = this.ndk.getUser({ hexpubkey: e.pubkey });
    r.ndk = this.ndk;
    const n = await this.signer.decrypt(r, e.content), i = JSON.parse(n), { id: s, method: o, params: a, result: c, error: l } = i;
    return o ? { id: s, pubkey: e.pubkey, method: o, params: a, event: e } : { id: s, result: c, error: l, event: e };
  }
  async sendResponse(e, r, n, i = 24133, s) {
    const o = { id: e, result: n };
    s && (o.error = s);
    const a = await this.signer.user(), c = this.ndk.getUser({ hexpubkey: r }), l = new qe(this.ndk, {
      kind: i,
      content: JSON.stringify(o),
      tags: [["p", r]],
      pubkey: a.hexpubkey()
    });
    l.content = await this.signer.encrypt(c, l.content), await l.sign(this.signer), await this.ndk.publish(l);
  }
  async sendRequest(e, r, n = [], i = 24133, s) {
    const o = Math.random().toString(36).substring(7), a = await this.signer.user(), c = this.ndk.getUser({ hexpubkey: e }), l = { id: o, method: r, params: n }, f = new Promise((h) => {
      s && this.once(`response-${o}`, s);
    }), u = new qe(this.ndk, {
      kind: i,
      content: JSON.stringify(l),
      tags: [["p", e]],
      pubkey: a.hexpubkey()
    });
    return u.content = await this.signer.encrypt(c, u.content), await u.sign(this.signer), this.debug("sending request to", e), await this.ndk.publish(u), f;
  }
}, Md = class {
  constructor(t, e, r) {
    I(this, "ndk");
    I(this, "remoteUser");
    I(this, "remotePubkey");
    I(this, "token");
    I(this, "localSigner");
    I(this, "rpc");
    I(this, "debug");
    let n, i;
    if (e.includes("#")) {
      const s = e.split("#");
      n = new pe({ npub: s[0] }).hexpubkey(), i = s[1];
    } else
      e.startsWith("npub") ? n = new pe({ npub: e }).hexpubkey() : n = e;
    this.ndk = t, this.remotePubkey = n, this.token = i, this.debug = t.debug.extend("nip46:signer"), this.remoteUser = new pe({ hexpubkey: n }), r ? this.localSigner = r : this.localSigner = or.generate(), this.rpc = new Hd(t, this.localSigner, this.debug);
  }
  async user() {
    return this.remoteUser;
  }
  async blockUntilReady() {
    const t = await this.localSigner.user(), e = this.ndk.getUser({ npub: t.npub });
    return await this.rpc.subscribe({
      kinds: [24133],
      "#p": [t.hexpubkey()]
    }), new Promise((r, n) => {
      setTimeout(() => {
        const i = [t.hexpubkey()];
        this.token && i.push(this.token), this.rpc.sendRequest(
          this.remotePubkey,
          "connect",
          i,
          24133,
          (s) => {
            s.result === "ack" ? r(e) : n(s.error);
          }
        );
      }, 100);
    });
  }
  async encrypt(t, e) {
    return this.debug("asking for encryption"), new Promise((n, i) => {
      this.rpc.sendRequest(
        this.remotePubkey,
        "nip04_encrypt",
        [t.hexpubkey(), e],
        24133,
        (s) => {
          s.error ? i(s.error) : n(s.result);
        }
      );
    });
  }
  async decrypt(t, e) {
    return this.debug("asking for decryption"), new Promise((n, i) => {
      this.rpc.sendRequest(
        this.remotePubkey,
        "nip04_decrypt",
        [t.hexpubkey(), e],
        24133,
        (s) => {
          if (s.error)
            i(s.error);
          else {
            const o = JSON.parse(s.result);
            n(o[0]);
          }
        }
      );
    });
  }
  async sign(t) {
    return this.debug("asking for a signature"), new Promise((r, n) => {
      this.rpc.sendRequest(
        this.remotePubkey,
        "sign_event",
        [JSON.stringify(t)],
        24133,
        (i) => {
          if (this.debug("got a response", i), i.error)
            n(i.error);
          else {
            const s = JSON.parse(i.result);
            r(s.sig);
          }
        }
      );
    });
  }
}, or = class {
  constructor(t) {
    I(this, "_user");
    I(this, "privateKey");
    t && (this.privateKey = t, this._user = new pe({ hexpubkey: li(this.privateKey) }));
  }
  static generate() {
    const t = yf();
    return new or(t);
  }
  async blockUntilReady() {
    if (!this._user)
      throw new Error("NDKUser not initialized");
    return this._user;
  }
  async user() {
    return await this.blockUntilReady(), this._user;
  }
  async sign(t) {
    if (!this.privateKey)
      throw Error("Attempted to sign without a private key");
    return pa(t, this.privateKey);
  }
  async encrypt(t, e) {
    if (!this.privateKey)
      throw Error("Attempted to encrypt without a private key");
    const r = t.hexpubkey();
    return await Un.encrypt(this.privateKey, r, e);
  }
  async decrypt(t, e) {
    if (!this.privateKey)
      throw Error("Attempted to decrypt without a private key");
    const r = t.hexpubkey();
    return await Un.decrypt(this.privateKey, r, e);
  }
}, Dd = class extends dt {
  constructor(e = {}) {
    super();
    I(this, "pool");
    I(this, "signer");
    I(this, "cacheAdapter");
    I(this, "debug");
    I(this, "devWriteRelaySet");
    I(this, "delayedSubscriptions");
    this.debug = e.debug || Mn("ndk"), this.pool = new Cd(e.explicitRelayUrls || [], this), this.signer = e.signer, this.cacheAdapter = e.cacheAdapter, this.delayedSubscriptions = /* @__PURE__ */ new Map(), e.devWriteRelayUrls && (this.devWriteRelaySet = Gr.fromRelayUrls(e.devWriteRelayUrls, this));
  }
  toJSON() {
    return { relayCount: this.pool.relays.size }.toString();
  }
  async connect(e) {
    return this.debug("Connecting to relays", { timeoutMs: e }), this.pool.connect(e);
  }
  getUser(e) {
    const r = new pe(e);
    return r.ndk = this, r;
  }
  subscribe(e, r, n, i = !0) {
    const s = new Pa(this, e, r, n);
    return i && s.start(), s;
  }
  async publish(e, r, n) {
    return r || (r = this.devWriteRelaySet || Nd(this)), r.publish(e, n);
  }
  async fetchEvent(e, r = {}, n) {
    let i;
    if (typeof e == "string" ? i = $d(e) : i = e, !i)
      throw new Error(`Invalid filter: ${JSON.stringify(e)}`);
    return new Promise((s) => {
      const o = this.subscribe(i, { ...r, closeOnEose: !0 }, n, !1);
      o.on("event", (a) => {
        a.ndk = this, s(a);
      }), o.on("eose", () => {
        s(null);
      }), o.start();
    });
  }
  async fetchEvents(e, r = {}, n) {
    return new Promise((i) => {
      const s = /* @__PURE__ */ new Map(), o = this.subscribe(e, { ...r, closeOnEose: !0 }, n, !1);
      o.on("event", (a) => {
        const c = s.get(a.tagId());
        c && (a = pd(c, a)), a.ndk = this, s.set(a.tagId(), a);
      }), o.on("eose", () => {
        i(new Set(s.values()));
      }), o.start();
    });
  }
  async assertSigner() {
    if (!this.signer)
      throw this.emit("signerRequired"), new Error("Signer required");
  }
};
function zd(t) {
  const e = Go(!1), [r, n] = Sn(void 0), [i, s] = Sn(void 0);
  uc(() => {
    async function f() {
      r === void 0 && e.current === !1 && (e.current = !0, await o(t));
    }
    f();
  }, []);
  async function o(f, u) {
    const h = new Dd({ explicitRelayUrls: f, signer: u });
    u && s(u);
    try {
      await h.connect(), n(h);
    } catch (d) {
      console.error("ERROR loading NDK NDKInstance", d);
    }
  }
  async function a(f) {
    o(t, f);
  }
  async function c(f) {
    return r === void 0 ? [] : new Promise((u) => {
      const h = /* @__PURE__ */ new Map(), d = r.subscribe(f, {
        closeOnEose: !0
      });
      d.on("event", (p) => {
        p.ndk = r, h.set(p.tagId(), p);
      }), d.on("eose", () => {
        setTimeout(() => u(Array.from(new Set(h.values()))), 3e3);
      });
    });
  }
  async function l(f, u = {
    repost: !1,
    publish: !0
  }) {
    if (r !== void 0)
      return f.ndk = r, u.repost ? await f.repost() : await f.sign(), u.publish && await f.publish(), f;
  }
  return {
    ndk: r,
    signer: i,
    loadNdk: o,
    setSigner: a,
    fetchEvents: c,
    signPublishEvent: l
  };
}
async function Fd(t) {
  try {
    let e = t;
    e.substring(0, 4) === "nsec" && (e = we.decode(e).data);
    const r = new or(e);
    return r.user().then(async (n) => {
      if (n.npub)
        return {
          user: n,
          npub: n.npub,
          sk: e,
          signer: r
        };
    });
  } catch (e) {
    throw e;
  }
}
async function Kd(t, e, r) {
  try {
    let n = or.generate();
    r && (n = new or(r));
    const i = new Md(t, e, n);
    return i.user().then(async (s) => {
      if (s.npub)
        return await i.blockUntilReady(), {
          user: s,
          npub: (await i.user()).npub,
          sk: n.privateKey,
          token: e,
          remoteSigner: i,
          localSigner: n
        };
    });
  } catch (n) {
    throw n;
  }
}
async function Wd() {
  try {
    const t = new jd();
    return t.user().then(async (e) => {
      if (e.npub)
        return { user: e, npub: e.npub, signer: t };
    });
  } catch (t) {
    throw t;
  }
}
const Vd = (t) => {
  const [e, r] = Sn({}), n = Go({});
  async function i(a) {
    if (t == null || n.current[a])
      return;
    n.current = {
      ...n.current,
      [a]: pe.prototype
    };
    let c;
    a.startsWith("npub") ? c = t.getUser({
      npub: a
    }) : c = t.getUser({
      hexpubkey: a
    }), await c.fetchProfile(), c.profile && (n.current = {
      ...n.current,
      [a]: c
    }, r(n.current));
  }
  function s(a) {
    return e[a] ? e[a] : (i(a), pe.prototype);
  }
  function o(a) {
    return e[a] ? e[a].profile : (i(a), {});
  }
  return {
    getUser: s,
    getProfile: o
  };
};
var Ba = { exports: {} }, Xt = {};
/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var Mo;
function Gd() {
  if (Mo)
    return Xt;
  Mo = 1;
  var t = Vo, e = Symbol.for("react.element"), r = Symbol.for("react.fragment"), n = Object.prototype.hasOwnProperty, i = t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner, s = { key: !0, ref: !0, __self: !0, __source: !0 };
  function o(a, c, l) {
    var f, u = {}, h = null, d = null;
    l !== void 0 && (h = "" + l), c.key !== void 0 && (h = "" + c.key), c.ref !== void 0 && (d = c.ref);
    for (f in c)
      n.call(c, f) && !s.hasOwnProperty(f) && (u[f] = c[f]);
    if (a && a.defaultProps)
      for (f in c = a.defaultProps, c)
        u[f] === void 0 && (u[f] = c[f]);
    return { $$typeof: e, type: a, key: h, ref: d, props: u, _owner: i.current };
  }
  return Xt.Fragment = r, Xt.jsx = o, Xt.jsxs = o, Xt;
}
var Qt = {};
/**
 * @license React
 * react-jsx-runtime.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var Do;
function Zd() {
  return Do || (Do = 1, process.env.NODE_ENV !== "production" && function() {
    var t = Vo, e = Symbol.for("react.element"), r = Symbol.for("react.portal"), n = Symbol.for("react.fragment"), i = Symbol.for("react.strict_mode"), s = Symbol.for("react.profiler"), o = Symbol.for("react.provider"), a = Symbol.for("react.context"), c = Symbol.for("react.forward_ref"), l = Symbol.for("react.suspense"), f = Symbol.for("react.suspense_list"), u = Symbol.for("react.memo"), h = Symbol.for("react.lazy"), d = Symbol.for("react.offscreen"), p = Symbol.iterator, y = "@@iterator";
    function g(b) {
      if (b === null || typeof b != "object")
        return null;
      var k = p && b[p] || b[y];
      return typeof k == "function" ? k : null;
    }
    var v = t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
    function _(b) {
      {
        for (var k = arguments.length, T = new Array(k > 1 ? k - 1 : 0), $ = 1; $ < k; $++)
          T[$ - 1] = arguments[$];
        m("error", b, T);
      }
    }
    function m(b, k, T) {
      {
        var $ = v.ReactDebugCurrentFrame, M = $.getStackAddendum();
        M !== "" && (k += "%s", T = T.concat([M]));
        var K = T.map(function(j) {
          return String(j);
        });
        K.unshift("Warning: " + k), Function.prototype.apply.call(console[b], console, K);
      }
    }
    var C = !1, O = !1, w = !1, x = !1, A = !1, B;
    B = Symbol.for("react.module.reference");
    function L(b) {
      return !!(typeof b == "string" || typeof b == "function" || b === n || b === s || A || b === i || b === l || b === f || x || b === d || C || O || w || typeof b == "object" && b !== null && (b.$$typeof === h || b.$$typeof === u || b.$$typeof === o || b.$$typeof === a || b.$$typeof === c || b.$$typeof === B || b.getModuleId !== void 0));
    }
    function P(b, k, T) {
      var $ = b.displayName;
      if ($)
        return $;
      var M = k.displayName || k.name || "";
      return M !== "" ? T + "(" + M + ")" : T;
    }
    function F(b) {
      return b.displayName || "Context";
    }
    function z(b) {
      if (b == null)
        return null;
      if (typeof b.tag == "number" && _("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue."), typeof b == "function")
        return b.displayName || b.name || null;
      if (typeof b == "string")
        return b;
      switch (b) {
        case n:
          return "Fragment";
        case r:
          return "Portal";
        case s:
          return "Profiler";
        case i:
          return "StrictMode";
        case l:
          return "Suspense";
        case f:
          return "SuspenseList";
      }
      if (typeof b == "object")
        switch (b.$$typeof) {
          case a:
            var k = b;
            return F(k) + ".Consumer";
          case o:
            var T = b;
            return F(T._context) + ".Provider";
          case c:
            return P(b, b.render, "ForwardRef");
          case u:
            var $ = b.displayName || null;
            return $ !== null ? $ : z(b.type) || "Memo";
          case h: {
            var M = b, K = M._payload, j = M._init;
            try {
              return z(j(K));
            } catch {
              return null;
            }
          }
        }
      return null;
    }
    var G = Object.assign, E = 0, R, q, H, D, X, oe, re;
    function _e() {
    }
    _e.__reactDisabledLog = !0;
    function Oe() {
      {
        if (E === 0) {
          R = console.log, q = console.info, H = console.warn, D = console.error, X = console.group, oe = console.groupCollapsed, re = console.groupEnd;
          var b = {
            configurable: !0,
            enumerable: !0,
            value: _e,
            writable: !0
          };
          Object.defineProperties(console, {
            info: b,
            log: b,
            warn: b,
            error: b,
            group: b,
            groupCollapsed: b,
            groupEnd: b
          });
        }
        E++;
      }
    }
    function Ue() {
      {
        if (E--, E === 0) {
          var b = {
            configurable: !0,
            enumerable: !0,
            writable: !0
          };
          Object.defineProperties(console, {
            log: G({}, b, {
              value: R
            }),
            info: G({}, b, {
              value: q
            }),
            warn: G({}, b, {
              value: H
            }),
            error: G({}, b, {
              value: D
            }),
            group: G({}, b, {
              value: X
            }),
            groupCollapsed: G({}, b, {
              value: oe
            }),
            groupEnd: G({}, b, {
              value: re
            })
          });
        }
        E < 0 && _("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
      }
    }
    var Pe = v.ReactCurrentDispatcher, ye;
    function je(b, k, T) {
      {
        if (ye === void 0)
          try {
            throw Error();
          } catch (M) {
            var $ = M.stack.trim().match(/\n( *(at )?)/);
            ye = $ && $[1] || "";
          }
        return `
` + ye + b;
      }
    }
    var me = !1, xe;
    {
      var lr = typeof WeakMap == "function" ? WeakMap : Map;
      xe = new lr();
    }
    function Be(b, k) {
      if (!b || me)
        return "";
      {
        var T = xe.get(b);
        if (T !== void 0)
          return T;
      }
      var $;
      me = !0;
      var M = Error.prepareStackTrace;
      Error.prepareStackTrace = void 0;
      var K;
      K = Pe.current, Pe.current = null, Oe();
      try {
        if (k) {
          var j = function() {
            throw Error();
          };
          if (Object.defineProperty(j.prototype, "props", {
            set: function() {
              throw Error();
            }
          }), typeof Reflect == "object" && Reflect.construct) {
            try {
              Reflect.construct(j, []);
            } catch (Le) {
              $ = Le;
            }
            Reflect.construct(b, [], j);
          } else {
            try {
              j.call();
            } catch (Le) {
              $ = Le;
            }
            b.call(j.prototype);
          }
        } else {
          try {
            throw Error();
          } catch (Le) {
            $ = Le;
          }
          b();
        }
      } catch (Le) {
        if (Le && $ && typeof Le.stack == "string") {
          for (var U = Le.stack.split(`
`), se = $.stack.split(`
`), W = U.length - 1, Z = se.length - 1; W >= 1 && Z >= 0 && U[W] !== se[Z]; )
            Z--;
          for (; W >= 1 && Z >= 0; W--, Z--)
            if (U[W] !== se[Z]) {
              if (W !== 1 || Z !== 1)
                do
                  if (W--, Z--, Z < 0 || U[W] !== se[Z]) {
                    var ge = `
` + U[W].replace(" at new ", " at ");
                    return b.displayName && ge.includes("<anonymous>") && (ge = ge.replace("<anonymous>", b.displayName)), typeof b == "function" && xe.set(b, ge), ge;
                  }
                while (W >= 1 && Z >= 0);
              break;
            }
        }
      } finally {
        me = !1, Pe.current = K, Ue(), Error.prepareStackTrace = M;
      }
      var yt = b ? b.displayName || b.name : "", $i = yt ? je(yt) : "";
      return typeof b == "function" && xe.set(b, $i), $i;
    }
    function fe(b, k, T) {
      return Be(b, !1);
    }
    function He(b) {
      var k = b.prototype;
      return !!(k && k.isReactComponent);
    }
    function it(b, k, T) {
      if (b == null)
        return "";
      if (typeof b == "function")
        return Be(b, He(b));
      if (typeof b == "string")
        return je(b);
      switch (b) {
        case l:
          return je("Suspense");
        case f:
          return je("SuspenseList");
      }
      if (typeof b == "object")
        switch (b.$$typeof) {
          case c:
            return fe(b.render);
          case u:
            return it(b.type, k, T);
          case h: {
            var $ = b, M = $._payload, K = $._init;
            try {
              return it(K(M), k, T);
            } catch {
            }
          }
        }
      return "";
    }
    var ot = Object.prototype.hasOwnProperty, Ei = {}, ki = v.ReactDebugCurrentFrame;
    function fr(b) {
      if (b) {
        var k = b._owner, T = it(b.type, b._source, k ? k.type : null);
        ki.setExtraStackFrame(T);
      } else
        ki.setExtraStackFrame(null);
    }
    function Ma(b, k, T, $, M) {
      {
        var K = Function.call.bind(ot);
        for (var j in b)
          if (K(b, j)) {
            var U = void 0;
            try {
              if (typeof b[j] != "function") {
                var se = Error(($ || "React class") + ": " + T + " type `" + j + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof b[j] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                throw se.name = "Invariant Violation", se;
              }
              U = b[j](k, j, $, T, null, "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED");
            } catch (W) {
              U = W;
            }
            U && !(U instanceof Error) && (fr(M), _("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", $ || "React class", T, j, typeof U), fr(null)), U instanceof Error && !(U.message in Ei) && (Ei[U.message] = !0, fr(M), _("Failed %s type: %s", T, U.message), fr(null));
          }
      }
    }
    var Da = Array.isArray;
    function Zr(b) {
      return Da(b);
    }
    function za(b) {
      {
        var k = typeof Symbol == "function" && Symbol.toStringTag, T = k && b[Symbol.toStringTag] || b.constructor.name || "Object";
        return T;
      }
    }
    function Fa(b) {
      try {
        return Si(b), !1;
      } catch {
        return !0;
      }
    }
    function Si(b) {
      return "" + b;
    }
    function Oi(b) {
      if (Fa(b))
        return _("The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.", za(b)), Si(b);
    }
    var Ct = v.ReactCurrentOwner, Ka = {
      key: !0,
      ref: !0,
      __self: !0,
      __source: !0
    }, Ai, Ci, Yr;
    Yr = {};
    function Wa(b) {
      if (ot.call(b, "ref")) {
        var k = Object.getOwnPropertyDescriptor(b, "ref").get;
        if (k && k.isReactWarning)
          return !1;
      }
      return b.ref !== void 0;
    }
    function Va(b) {
      if (ot.call(b, "key")) {
        var k = Object.getOwnPropertyDescriptor(b, "key").get;
        if (k && k.isReactWarning)
          return !1;
      }
      return b.key !== void 0;
    }
    function Ga(b, k) {
      if (typeof b.ref == "string" && Ct.current && k && Ct.current.stateNode !== k) {
        var T = z(Ct.current.type);
        Yr[T] || (_('Component "%s" contains the string ref "%s". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref', z(Ct.current.type), b.ref), Yr[T] = !0);
      }
    }
    function Za(b, k) {
      {
        var T = function() {
          Ai || (Ai = !0, _("%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", k));
        };
        T.isReactWarning = !0, Object.defineProperty(b, "key", {
          get: T,
          configurable: !0
        });
      }
    }
    function Ya(b, k) {
      {
        var T = function() {
          Ci || (Ci = !0, _("%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", k));
        };
        T.isReactWarning = !0, Object.defineProperty(b, "ref", {
          get: T,
          configurable: !0
        });
      }
    }
    var Ja = function(b, k, T, $, M, K, j) {
      var U = {
        $$typeof: e,
        type: b,
        key: k,
        ref: T,
        props: j,
        _owner: K
      };
      return U._store = {}, Object.defineProperty(U._store, "validated", {
        configurable: !1,
        enumerable: !1,
        writable: !0,
        value: !1
      }), Object.defineProperty(U, "_self", {
        configurable: !1,
        enumerable: !1,
        writable: !1,
        value: $
      }), Object.defineProperty(U, "_source", {
        configurable: !1,
        enumerable: !1,
        writable: !1,
        value: M
      }), Object.freeze && (Object.freeze(U.props), Object.freeze(U)), U;
    };
    function Xa(b, k, T, $, M) {
      {
        var K, j = {}, U = null, se = null;
        T !== void 0 && (Oi(T), U = "" + T), Va(k) && (Oi(k.key), U = "" + k.key), Wa(k) && (se = k.ref, Ga(k, M));
        for (K in k)
          ot.call(k, K) && !Ka.hasOwnProperty(K) && (j[K] = k[K]);
        if (b && b.defaultProps) {
          var W = b.defaultProps;
          for (K in W)
            j[K] === void 0 && (j[K] = W[K]);
        }
        if (U || se) {
          var Z = typeof b == "function" ? b.displayName || b.name || "Unknown" : b;
          U && Za(j, Z), se && Ya(j, Z);
        }
        return Ja(b, U, se, M, $, Ct.current, j);
      }
    }
    var Jr = v.ReactCurrentOwner, Ii = v.ReactDebugCurrentFrame;
    function pt(b) {
      if (b) {
        var k = b._owner, T = it(b.type, b._source, k ? k.type : null);
        Ii.setExtraStackFrame(T);
      } else
        Ii.setExtraStackFrame(null);
    }
    var Xr;
    Xr = !1;
    function Qr(b) {
      return typeof b == "object" && b !== null && b.$$typeof === e;
    }
    function Ri() {
      {
        if (Jr.current) {
          var b = z(Jr.current.type);
          if (b)
            return `

Check the render method of \`` + b + "`.";
        }
        return "";
      }
    }
    function Qa(b) {
      {
        if (b !== void 0) {
          var k = b.fileName.replace(/^.*[\\\/]/, ""), T = b.lineNumber;
          return `

Check your code at ` + k + ":" + T + ".";
        }
        return "";
      }
    }
    var Ti = {};
    function ec(b) {
      {
        var k = Ri();
        if (!k) {
          var T = typeof b == "string" ? b : b.displayName || b.name;
          T && (k = `

Check the top-level render call using <` + T + ">.");
        }
        return k;
      }
    }
    function Pi(b, k) {
      {
        if (!b._store || b._store.validated || b.key != null)
          return;
        b._store.validated = !0;
        var T = ec(k);
        if (Ti[T])
          return;
        Ti[T] = !0;
        var $ = "";
        b && b._owner && b._owner !== Jr.current && ($ = " It was passed a child from " + z(b._owner.type) + "."), pt(b), _('Each child in a list should have a unique "key" prop.%s%s See https://reactjs.org/link/warning-keys for more information.', T, $), pt(null);
      }
    }
    function Bi(b, k) {
      {
        if (typeof b != "object")
          return;
        if (Zr(b))
          for (var T = 0; T < b.length; T++) {
            var $ = b[T];
            Qr($) && Pi($, k);
          }
        else if (Qr(b))
          b._store && (b._store.validated = !0);
        else if (b) {
          var M = g(b);
          if (typeof M == "function" && M !== b.entries)
            for (var K = M.call(b), j; !(j = K.next()).done; )
              Qr(j.value) && Pi(j.value, k);
        }
      }
    }
    function tc(b) {
      {
        var k = b.type;
        if (k == null || typeof k == "string")
          return;
        var T;
        if (typeof k == "function")
          T = k.propTypes;
        else if (typeof k == "object" && (k.$$typeof === c || k.$$typeof === u))
          T = k.propTypes;
        else
          return;
        if (T) {
          var $ = z(k);
          Ma(T, b.props, "prop", $, b);
        } else if (k.PropTypes !== void 0 && !Xr) {
          Xr = !0;
          var M = z(k);
          _("Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?", M || "Unknown");
        }
        typeof k.getDefaultProps == "function" && !k.getDefaultProps.isReactClassApproved && _("getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.");
      }
    }
    function rc(b) {
      {
        for (var k = Object.keys(b.props), T = 0; T < k.length; T++) {
          var $ = k[T];
          if ($ !== "children" && $ !== "key") {
            pt(b), _("Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.", $), pt(null);
            break;
          }
        }
        b.ref !== null && (pt(b), _("Invalid attribute `ref` supplied to `React.Fragment`."), pt(null));
      }
    }
    function Li(b, k, T, $, M, K) {
      {
        var j = L(b);
        if (!j) {
          var U = "";
          (b === void 0 || typeof b == "object" && b !== null && Object.keys(b).length === 0) && (U += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.");
          var se = Qa(M);
          se ? U += se : U += Ri();
          var W;
          b === null ? W = "null" : Zr(b) ? W = "array" : b !== void 0 && b.$$typeof === e ? (W = "<" + (z(b.type) || "Unknown") + " />", U = " Did you accidentally export a JSX literal instead of a component?") : W = typeof b, _("React.jsx: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s", W, U);
        }
        var Z = Xa(b, k, T, M, K);
        if (Z == null)
          return Z;
        if (j) {
          var ge = k.children;
          if (ge !== void 0)
            if ($)
              if (Zr(ge)) {
                for (var yt = 0; yt < ge.length; yt++)
                  Bi(ge[yt], b);
                Object.freeze && Object.freeze(ge);
              } else
                _("React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.");
            else
              Bi(ge, b);
        }
        return b === n ? rc(Z) : tc(Z), Z;
      }
    }
    function nc(b, k, T) {
      return Li(b, k, T, !0);
    }
    function ic(b, k, T) {
      return Li(b, k, T, !1);
    }
    var oc = ic, sc = nc;
    Qt.Fragment = n, Qt.jsx = oc, Qt.jsxs = sc;
  }()), Qt;
}
(function(t) {
  process.env.NODE_ENV === "production" ? t.exports = Gd() : t.exports = Zd();
})(Ba);
const Yd = Ba.exports.jsx, La = lc({
  ndk: void 0,
  signer: void 0,
  fetchEvents: (t) => Promise.resolve([]),
  loginWithNip46: (t, e) => Promise.resolve(void 0),
  loginWithSecret: (t) => Promise.resolve(void 0),
  loginWithNip07: () => Promise.resolve(void 0),
  signPublishEvent: (t, e) => Promise.resolve(void 0),
  getUser: (t) => pe.prototype,
  getProfile: (t) => ({})
}), Pp = ({
  children: t,
  relayUrls: e
}) => {
  const {
    ndk: r,
    signer: n,
    setSigner: i,
    fetchEvents: s,
    signPublishEvent: o
  } = zd(e), {
    getUser: a,
    getProfile: c
  } = Vd(r);
  async function l(h, d) {
    if (r === void 0)
      return;
    const p = await Kd(r, h, d);
    if (p)
      return await i(p.remoteSigner), p;
  }
  async function f(h) {
    const d = await Fd(h);
    if (d) {
      const {
        signer: p
      } = d;
      return await i(p), d;
    }
  }
  async function u() {
    const h = await Wd();
    if (h) {
      const {
        signer: d
      } = h;
      return await i(d), h;
    }
  }
  return /* @__PURE__ */ Yd(La.Provider, {
    value: {
      ndk: r,
      signer: n,
      fetchEvents: s,
      loginWithNip07: u,
      loginWithNip46: l,
      loginWithSecret: f,
      signPublishEvent: o,
      getUser: a,
      getProfile: c
    },
    children: t
  });
}, Bp = () => {
  const t = fc(La);
  if (t === void 0)
    throw new Error("import NDKProvider to use useNDK");
  return t;
};
function Xe(t) {
  return t != null && typeof t == "object" && t["@@functional/placeholder"] === !0;
}
function ht(t) {
  return function e(r) {
    return arguments.length === 0 || Xe(r) ? e : t.apply(this, arguments);
  };
}
function ur(t) {
  return function e(r, n) {
    switch (arguments.length) {
      case 0:
        return e;
      case 1:
        return Xe(r) ? e : ht(function(i) {
          return t(r, i);
        });
      default:
        return Xe(r) && Xe(n) ? e : Xe(r) ? ht(function(i) {
          return t(i, n);
        }) : Xe(n) ? ht(function(i) {
          return t(r, i);
        }) : t(r, n);
    }
  };
}
function $a(t, e) {
  switch (t) {
    case 0:
      return function() {
        return e.apply(this, arguments);
      };
    case 1:
      return function(r) {
        return e.apply(this, arguments);
      };
    case 2:
      return function(r, n) {
        return e.apply(this, arguments);
      };
    case 3:
      return function(r, n, i) {
        return e.apply(this, arguments);
      };
    case 4:
      return function(r, n, i, s) {
        return e.apply(this, arguments);
      };
    case 5:
      return function(r, n, i, s, o) {
        return e.apply(this, arguments);
      };
    case 6:
      return function(r, n, i, s, o, a) {
        return e.apply(this, arguments);
      };
    case 7:
      return function(r, n, i, s, o, a, c) {
        return e.apply(this, arguments);
      };
    case 8:
      return function(r, n, i, s, o, a, c, l) {
        return e.apply(this, arguments);
      };
    case 9:
      return function(r, n, i, s, o, a, c, l, f) {
        return e.apply(this, arguments);
      };
    case 10:
      return function(r, n, i, s, o, a, c, l, f, u) {
        return e.apply(this, arguments);
      };
    default:
      throw new Error("First argument to _arity must be a non-negative integer no greater than ten");
  }
}
function qa(t, e, r) {
  return function() {
    for (var n = [], i = 0, s = t, o = 0; o < e.length || i < arguments.length; ) {
      var a;
      o < e.length && (!Xe(e[o]) || i >= arguments.length) ? a = e[o] : (a = arguments[i], i += 1), n[o] = a, Xe(a) || (s -= 1), o += 1;
    }
    return s <= 0 ? r.apply(this, n) : $a(s, qa(t, n, r));
  };
}
var Jd = /* @__PURE__ */ ur(function(e, r) {
  return e === 1 ? ht(r) : $a(e, qa(e, [], r));
});
const Xd = Jd, Qd = Array.isArray || function(e) {
  return e != null && e.length >= 0 && Object.prototype.toString.call(e) === "[object Array]";
};
function ep(t) {
  return t != null && typeof t["@@transducer/step"] == "function";
}
function tp(t, e, r) {
  return function() {
    if (arguments.length === 0)
      return r();
    var n = arguments[arguments.length - 1];
    if (!Qd(n)) {
      for (var i = 0; i < t.length; ) {
        if (typeof n[t[i]] == "function")
          return n[t[i]].apply(n, Array.prototype.slice.call(arguments, 0, -1));
        i += 1;
      }
      if (ep(n)) {
        var s = e.apply(null, Array.prototype.slice.call(arguments, 0, -1));
        return s(n);
      }
    }
    return r.apply(this, arguments);
  };
}
const zo = {
  init: function() {
    return this.xf["@@transducer/init"]();
  },
  result: function(t) {
    return this.xf["@@transducer/result"](t);
  }
};
function jn(t, e) {
  return Object.prototype.hasOwnProperty.call(e, t);
}
var Fo = Object.prototype.toString, rp = /* @__PURE__ */ function() {
  return Fo.call(arguments) === "[object Arguments]" ? function(e) {
    return Fo.call(e) === "[object Arguments]";
  } : function(e) {
    return jn("callee", e);
  };
}();
const np = rp;
var ip = !/* @__PURE__ */ {
  toString: null
}.propertyIsEnumerable("toString"), Ko = ["constructor", "valueOf", "isPrototypeOf", "toString", "propertyIsEnumerable", "hasOwnProperty", "toLocaleString"], Wo = /* @__PURE__ */ function() {
  return arguments.propertyIsEnumerable("length");
}(), op = function(e, r) {
  for (var n = 0; n < e.length; ) {
    if (e[n] === r)
      return !0;
    n += 1;
  }
  return !1;
}, sp = /* @__PURE__ */ ht(typeof Object.keys == "function" && !Wo ? function(e) {
  return Object(e) !== e ? [] : Object.keys(e);
} : function(e) {
  if (Object(e) !== e)
    return [];
  var r, n, i = [], s = Wo && np(e);
  for (r in e)
    jn(r, e) && (!s || r !== "length") && (i[i.length] = r);
  if (ip)
    for (n = Ko.length - 1; n >= 0; )
      r = Ko[n], jn(r, e) && !op(i, r) && (i[i.length] = r), n -= 1;
  return i;
});
const ap = sp;
function cp(t, e) {
  for (var r = 0, n = e.length, i = Array(n); r < n; )
    i[r] = t(e[r]), r += 1;
  return i;
}
function up(t, e, r) {
  for (var n = 0, i = r.length; n < i; )
    e = t(e, r[n]), n += 1;
  return e;
}
var lp = /* @__PURE__ */ function() {
  function t(e, r) {
    this.xf = r, this.f = e;
  }
  return t.prototype["@@transducer/init"] = zo.init, t.prototype["@@transducer/result"] = zo.result, t.prototype["@@transducer/step"] = function(e, r) {
    return this.xf["@@transducer/step"](e, this.f(r));
  }, t;
}(), fp = function(e) {
  return function(r) {
    return new lp(e, r);
  };
};
const hp = fp;
var dp = /* @__PURE__ */ ur(
  /* @__PURE__ */ tp(["fantasy-land/map", "map"], hp, function(e, r) {
    switch (Object.prototype.toString.call(r)) {
      case "[object Function]":
        return Xd(r.length, function() {
          return e.call(this, r.apply(this, arguments));
        });
      case "[object Object]":
        return up(function(n, i) {
          return n[i] = e(r[i]), n;
        }, {}, ap(r));
      default:
        return cp(e, r);
    }
  })
);
const pp = dp, yp = Number.isInteger || function(e) {
  return e << 0 === e;
};
function gp(t) {
  return Object.prototype.toString.call(t) === "[object String]";
}
var bp = /* @__PURE__ */ ur(function(e, r) {
  var n = e < 0 ? r.length + e : e;
  return gp(r) ? r.charAt(n) : r[n];
});
const Na = bp;
var vp = /* @__PURE__ */ ur(function(e, r) {
  if (r != null)
    return yp(e) ? Na(e, r) : r[e];
});
const wp = vp;
var _p = /* @__PURE__ */ ur(function(e, r) {
  return pp(wp(e), r);
});
const mp = _p;
function xp(t) {
  return t;
}
var Ep = /* @__PURE__ */ ht(xp);
const kp = Ep;
var Sp = /* @__PURE__ */ Na(-1);
const Ua = Sp, Op = "newline", Hn = "text", ja = "topic", xi = "link", Ha = "invoice", Lp = "nostr:note", $p = "nostr:nevent", qp = "nostr:npub", Np = "nostr:nprofile", Up = "nostr:naddr";
function gt(t) {
  return t ? t[0] : void 0;
}
const Ap = (t) => t.replace(/^[\w\+]+:\/?\/?/, ""), Cp = (t) => !t.match(/\.(apk|docx|xlsx|csv|dmg)/) && Ua(t.split("://")).includes("/"), jp = ({
  content: t,
  tags: e = []
}) => {
  const r = [];
  let n = t.trim(), i = "";
  const s = () => {
    const u = gt(n.match(/^\n+/));
    if (u)
      return [Op, u, u];
  }, o = () => {
    const u = n.match(/^#\[(\d+)\]/i);
    if (u) {
      const h = parseInt(u[1]);
      if (e[h]) {
        const [d, p, y] = e[h], g = [y].filter(kp);
        let v, _, m;
        return d === "p" ? (v = "nprofile", _ = { pubkey: p, relays: g }, m = we.nprofileEncode(_)) : (v = "nevent", _ = { id: p, relays: g, pubkey: null }, m = we.neventEncode(_)), [`nostr:${v}`, u[0], { ..._, entity: m }];
      }
    }
  }, a = () => {
    const u = gt(n.match(/^#\w+/i));
    if (u && !u.match(/^#\d+$/))
      return [ja, u, u.slice(1)];
  }, c = () => {
    const u = gt(
      n.match(
        /^(web\+)?(nostr:)?\/?\/?n(event|ote|profile|pub|addr)1[\d\w]+/i
      )
    );
    if (u)
      try {
        const h = Ap(u), { type: d, data: p } = we.decode(h);
        let y = p;
        return d === "note" ? y = { id: p } : d === "npub" && (y = { pubkey: p }), [`nostr:${d}`, u, { ...y, entity: h }];
      } catch (h) {
        console.log(h);
      }
  }, l = () => {
    const u = gt(n.match(/^ln(bc|url)[\d\w]{50,1000}/i));
    if (u)
      return [Ha, u, u];
  }, f = () => {
    const u = gt(
      n.match(/^([a-z\+:]{2,30}:\/\/)?[^\s]+\.[a-z]{2,6}[^\s]*[^\.!?,:\s]/gi)
    );
    if (u) {
      const h = Ua(r);
      if ((h == null ? void 0 : h.type) === "text" && h.value.endsWith("/"))
        return;
      let d = u;
      return d.match(/\.\./) ? void 0 : (d.match("://") || (d = "https://" + d), [xi, u, { url: d, isMedia: Cp(d) }]);
    }
  };
  for (; n; ) {
    const u = s() || o() || a() || c() || f() || l();
    if (u) {
      i && (r.push({ type: "text", value: i }), i = "");
      const [h, d, p] = u;
      r.push({ type: h, value: p }), n = n.slice(d.length);
    } else {
      const h = gt(n.match(/^[\w\d]+ ?/i)) || n[0];
      i += h, n = n.slice(h.length);
    }
  }
  return i && r.push({ type: Hn, value: i }), r;
}, Hp = (t, { showEntire: e, maxLength: r, showMedia: n = !1 }) => {
  if (e)
    return t;
  let i = 0;
  const s = [], o = r * 0.6;
  return t.every((a, c) => {
    const l = [ja, Hn].includes(a.type) || a.type === xi && !a.value.isMedia, f = a.type === Ha || a.type.startsWith("nostr:") || a.value.isMedia;
    return l && (i += a.value.length), f && (i += n ? r / 3 : a.value.length), s.push(a), i > o && c < t.length - 1 ? ((l || f && !n) && s.push({ type: Hn, value: "..." }), !1) : !0;
  }), s;
}, Mp = (t) => mp(
  "value",
  t.filter((e) => e.type === xi && e.isMedia)
);
export {
  Ha as INVOICE,
  xi as LINK,
  Pp as NDKProvider,
  Op as NEWLINE,
  Up as NOSTR_NADDR,
  $p as NOSTR_NEVENT,
  Lp as NOSTR_NOTE,
  Np as NOSTR_NPROFILE,
  qp as NOSTR_NPUB,
  Hn as TEXT,
  ja as TOPIC,
  Ap as fromNostrURI,
  Mp as getLinks,
  jp as parseContent,
  Hp as truncateContent,
  Cp as urlIsMedia,
  Bp as useNDK
};
