import { PropsWithChildren } from "react";
import NDK, { NDKEvent, NDKFilter, NDKNip07Signer, NDKNip46Signer, NDKPrivateKeySigner, NDKUser, NDKUserProfile } from "@nostr-dev-kit/ndk";
interface NDKContext {
    ndk: NDK | undefined;
    signer: NDKPrivateKeySigner | NDKNip46Signer | NDKNip07Signer | undefined;
    fetchEvents: (filter: NDKFilter) => Promise<NDKEvent[]>;
    loginWithNip46: (npub: string, sk?: string) => Promise<undefined | {
        npub: string;
        sk: string | undefined;
        token: string;
        remoteSigner: NDKNip46Signer;
        localSigner: NDKPrivateKeySigner;
    }>;
    loginWithSecret: (skOrNsec: string) => Promise<undefined | {
        npub: string;
        sk: string;
        signer: NDKPrivateKeySigner;
    }>;
    loginWithNip07: () => Promise<undefined | {
        npub: string;
        signer: NDKNip07Signer;
    }>;
    signPublishEvent: (event: NDKEvent, params?: {
        repost: boolean;
        publish: boolean;
    } | undefined) => Promise<undefined | NDKEvent>;
    getUser: (_: string) => NDKUser;
    getProfile: (_: string) => NDKUserProfile;
}
declare const NDKContext: import("react").Context<NDKContext>;
declare const NDKProvider: ({ children, relayUrls, }: PropsWithChildren<{
    relayUrls: string[];
}>) => import("react/jsx-runtime").JSX.Element;
declare const useNDK: () => NDKContext;
export { NDKProvider, useNDK };
//# sourceMappingURL=index.d.ts.map