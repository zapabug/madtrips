"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/community/page",{

/***/ "(app-pages-browser)/./src/lib/hooks/useProfileImage.ts":
/*!******************************************!*\
  !*** ./src/lib/hooks/useProfileImage.ts ***!
  \******************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useProfileImage: () => (/* binding */ useProfileImage)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* __next_internal_client_entry_do_not_use__ useProfileImage auto */ \n/**\n * A hook to handle Nostr profile image loading with multiple fallback strategies\n * @param npub The Nostr public key (npub) to fetch the profile image for\n * @param initialProfilePic Optional initial profile picture URL\n * @returns An object with the profile picture URL and loading state\n */ function useProfileImage(npub, initialProfilePic) {\n    const [profilePic, setProfilePic] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(initialProfilePic || null);\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!!npub); // Only start loading if npub is provided\n    const [source, setSource] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(initialProfilePic ? 'known' : null);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    // Generate a default profile picture based on npub\n    const getDefaultProfilePic = (inputNpub)=>{\n        if (!inputNpub) {\n            return '';\n        }\n        // Generate a color based on the npub hash\n        const hash = inputNpub.split('').reduce((acc, char)=>{\n            return char.charCodeAt(0) + ((acc << 5) - acc);\n        }, 0);\n        const h = Math.abs(hash) % 360;\n        // Create a data URI for a colored circle with the first letter\n        const firstLetter = (inputNpub.replace('npub1', '') || 'N').charAt(0).toUpperCase();\n        return \"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='40' height='40' viewBox='0 0 40 40'%3E%3Ccircle cx='20' cy='20' r='20' fill='hsl(\".concat(h, \", 70%25, 60%25)'/%3E%3Ctext x='20' y='25' font-family='Arial' font-size='16' fill='white' text-anchor='middle'%3E\").concat(firstLetter, \"%3C/text%3E%3C/svg%3E\");\n    };\n    // Check if an image exists at a given URL with a shorter timeout\n    const checkImageExists = (url)=>{\n        return new Promise((resolve)=>{\n            const img = document.createElement('img');\n            img.onload = ()=>resolve(true);\n            img.onerror = ()=>resolve(false);\n            img.crossOrigin = 'anonymous';\n            // Shorter timeout to avoid waiting too long\n            setTimeout(()=>resolve(false), 1500);\n            img.src = url;\n        });\n    };\n    // Effect to load profile image when npub changes\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useProfileImage.useEffect\": ()=>{\n            if (!npub) {\n                setLoading(false);\n                return;\n            }\n            // Don't reload if we already have the image and the npub hasn't changed\n            if (profilePic && !loading) return;\n            // Create a cache key for this npub\n            const cacheKey = \"nostr-profile-pic-\".concat(npub);\n            // Check if we have a cached image\n            const cachedImage = localStorage.getItem(cacheKey);\n            if (cachedImage) {\n                try {\n                    const cached = JSON.parse(cachedImage);\n                    if (cached.url && cached.timestamp && Date.now() - cached.timestamp < 3600000) {\n                        setProfilePic(cached.url);\n                        setSource(cached.source);\n                        setLoading(false);\n                        return;\n                    }\n                } catch (e) {\n                    // Invalid cache, continue with normal loading\n                    console.warn('Invalid profile image cache:', e);\n                }\n            }\n            const loadProfileImage = {\n                \"useProfileImage.useEffect.loadProfileImage\": async ()=>{\n                    setLoading(true);\n                    setError(null);\n                    try {\n                        // Try both sources in parallel for faster loading\n                        const [nostrBuildExists, primalExists] = await Promise.all([\n                            checkImageExists(\"https://avatar.nostr.build/\".concat(npub, \".png\")),\n                            checkImageExists(\"https://primal.net/api/v1/profile/picture/\".concat(npub))\n                        ]);\n                        // Use the first available image\n                        if (nostrBuildExists) {\n                            const url = \"https://avatar.nostr.build/\".concat(npub, \".png\");\n                            setProfilePic(url);\n                            setSource('nostr-build');\n                            // Cache the result\n                            localStorage.setItem(cacheKey, JSON.stringify({\n                                url,\n                                source: 'nostr-build',\n                                timestamp: Date.now()\n                            }));\n                        } else if (primalExists) {\n                            const url = \"https://primal.net/api/v1/profile/picture/\".concat(npub);\n                            setProfilePic(url);\n                            setSource('primal');\n                            // Cache the result\n                            localStorage.setItem(cacheKey, JSON.stringify({\n                                url,\n                                source: 'primal',\n                                timestamp: Date.now()\n                            }));\n                        } else {\n                            // Final fallback - generate an SVG with the first letter\n                            const defaultPic = getDefaultProfilePic(npub);\n                            setProfilePic(defaultPic);\n                            setSource('default');\n                        }\n                    } catch (error) {\n                        console.error('All profile picture sources failed:', error);\n                        setError('Failed to load profile picture');\n                        const defaultPic = getDefaultProfilePic(npub);\n                        setProfilePic(defaultPic);\n                        setSource('default');\n                    } finally{\n                        setLoading(false);\n                    }\n                }\n            }[\"useProfileImage.useEffect.loadProfileImage\"];\n            loadProfileImage();\n        }\n    }[\"useProfileImage.useEffect\"], [\n        npub,\n        profilePic,\n        loading\n    ]);\n    return {\n        profilePic,\n        loading,\n        source,\n        error\n    };\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/hooks/useProfileImage.ts\n"));

/***/ })

});