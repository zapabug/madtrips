{"version":3,"file":"static/chunks/app/nostr-test/page-0337ff3586d3d051.js","mappings":"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","sources":["webpack://_N_E/../../../../src/shared/lib/lazy-dynamic/preload-chunks.tsx","webpack://_N_E/../../../../src/shared/lib/lazy-dynamic/dynamic-bailout-to-csr.tsx","webpack://_N_E/./node_modules/next/dist/server/app-render/async-local-storage.js","webpack://_N_E/./node_modules/next/dist/api/app-dynamic.js","webpack://_N_E/?3b9a","webpack://_N_E/./node_modules/next/dist/server/app-render/work-async-storage.external.js","webpack://_N_E/../../../src/shared/lib/app-dynamic.tsx","webpack://_N_E/../../../../src/shared/lib/lazy-dynamic/loadable.tsx","webpack://_N_E/./node_modules/next/dist/server/app-render/work-async-storage-instance.js","webpack://_N_E/./src/app/nostr-test/page.tsx"],"sourcesContent":["'use client'\n\nimport { preload } from 'react-dom'\n\nimport { workAsyncStorage } from '../../../server/app-render/work-async-storage.external'\nimport { encodeURIPath } from '../encode-uri-path'\n\nexport function PreloadChunks({\n  moduleIds,\n}: {\n  moduleIds: string[] | undefined\n}) {\n  // Early return in client compilation and only load requestStore on server side\n  if (typeof window !== 'undefined') {\n    return null\n  }\n\n  const workStore = workAsyncStorage.getStore()\n  if (workStore === undefined) {\n    return null\n  }\n\n  const allFiles = []\n\n  // Search the current dynamic call unique key id in react loadable manifest,\n  // and find the corresponding CSS files to preload\n  if (workStore.reactLoadableManifest && moduleIds) {\n    const manifest = workStore.reactLoadableManifest\n    for (const key of moduleIds) {\n      if (!manifest[key]) continue\n      const chunks = manifest[key].files\n      allFiles.push(...chunks)\n    }\n  }\n\n  if (allFiles.length === 0) {\n    return null\n  }\n\n  return (\n    <>\n      {allFiles.map((chunk) => {\n        const href = `${workStore.assetPrefix}/_next/${encodeURIPath(chunk)}`\n        const isCss = chunk.endsWith('.css')\n        // If it's stylesheet we use `precedence` o help hoist with React Float.\n        // For stylesheets we actually need to render the CSS because nothing else is going to do it so it needs to be part of the component tree.\n        // The `preload` for stylesheet is not optional.\n        if (isCss) {\n          return (\n            <link\n              key={chunk}\n              // @ts-ignore\n              precedence=\"dynamic\"\n              href={href}\n              rel=\"stylesheet\"\n              as=\"style\"\n            />\n          )\n        } else {\n          // If it's script we use ReactDOM.preload to preload the resources\n          preload(href, {\n            as: 'script',\n            fetchPriority: 'low',\n          })\n          return null\n        }\n      })}\n    </>\n  )\n}\n","'use client'\n\nimport type { ReactElement } from 'react'\nimport { BailoutToCSRError } from './bailout-to-csr'\n\ninterface BailoutToCSRProps {\n  reason: string\n  children: ReactElement\n}\n\n/**\n * If rendered on the server, this component throws an error\n * to signal Next.js that it should bail out to client-side rendering instead.\n */\nexport function BailoutToCSR({ reason, children }: BailoutToCSRProps) {\n  if (typeof window === 'undefined') {\n    throw new BailoutToCSRError(reason)\n  }\n\n  return children\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n0 && (module.exports = {\n    bindSnapshot: null,\n    createAsyncLocalStorage: null,\n    createSnapshot: null\n});\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    bindSnapshot: function() {\n        return bindSnapshot;\n    },\n    createAsyncLocalStorage: function() {\n        return createAsyncLocalStorage;\n    },\n    createSnapshot: function() {\n        return createSnapshot;\n    }\n});\nconst sharedAsyncLocalStorageNotAvailableError = Object.defineProperty(new Error('Invariant: AsyncLocalStorage accessed in runtime where it is not available'), \"__NEXT_ERROR_CODE\", {\n    value: \"E504\",\n    enumerable: false,\n    configurable: true\n});\nclass FakeAsyncLocalStorage {\n    disable() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n    getStore() {\n        // This fake implementation of AsyncLocalStorage always returns `undefined`.\n        return undefined;\n    }\n    run() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n    exit() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n    enterWith() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n    static bind(fn) {\n        return fn;\n    }\n}\nconst maybeGlobalAsyncLocalStorage = typeof globalThis !== 'undefined' && globalThis.AsyncLocalStorage;\nfunction createAsyncLocalStorage() {\n    if (maybeGlobalAsyncLocalStorage) {\n        return new maybeGlobalAsyncLocalStorage();\n    }\n    return new FakeAsyncLocalStorage();\n}\nfunction bindSnapshot(fn) {\n    if (maybeGlobalAsyncLocalStorage) {\n        return maybeGlobalAsyncLocalStorage.bind(fn);\n    }\n    return FakeAsyncLocalStorage.bind(fn);\n}\nfunction createSnapshot() {\n    if (maybeGlobalAsyncLocalStorage) {\n        return maybeGlobalAsyncLocalStorage.snapshot();\n    }\n    return function(fn, ...args) {\n        return fn(...args);\n    };\n}\n\n//# sourceMappingURL=async-local-storage.js.map","export * from '../shared/lib/app-dynamic';\nexport { default } from '../shared/lib/app-dynamic';\n\n//# sourceMappingURL=app-dynamic.js.map","import(/* webpackMode: \"eager\" */ \"/home/lfg/Git/Madtrips/src/app/nostr-test/page.tsx\");\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"workAsyncStorage\", {\n    enumerable: true,\n    get: function() {\n        return _workasyncstorageinstance.workAsyncStorageInstance;\n    }\n});\nconst _workasyncstorageinstance = require(\"./work-async-storage-instance\");\n\n//# sourceMappingURL=work-async-storage.external.js.map","import type React from 'react'\nimport type { JSX } from 'react'\nimport Loadable from './lazy-dynamic/loadable'\n\nimport type {\n  LoadableGeneratedOptions,\n  DynamicOptionsLoadingProps,\n  Loader,\n  LoaderComponent,\n} from './lazy-dynamic/types'\n\nexport {\n  type LoadableGeneratedOptions,\n  type DynamicOptionsLoadingProps,\n  type Loader,\n  type LoaderComponent,\n}\n\nexport type DynamicOptions<P = {}> = LoadableGeneratedOptions & {\n  loading?: () => JSX.Element | null\n  loader?: Loader<P>\n  loadableGenerated?: LoadableGeneratedOptions\n  modules?: string[]\n  ssr?: boolean\n}\n\nexport type LoadableOptions<P = {}> = DynamicOptions<P>\n\nexport type LoadableFn<P = {}> = (\n  opts: LoadableOptions<P>\n) => React.ComponentType<P>\n\nexport type LoadableComponent<P = {}> = React.ComponentType<P>\n\nexport default function dynamic<P = {}>(\n  dynamicOptions: DynamicOptions<P> | Loader<P>,\n  options?: DynamicOptions<P>\n): React.ComponentType<P> {\n  const loadableOptions: LoadableOptions<P> = {}\n\n  if (typeof dynamicOptions === 'function') {\n    loadableOptions.loader = dynamicOptions\n  }\n\n  const mergedOptions = {\n    ...loadableOptions,\n    ...options,\n  }\n\n  return Loadable({\n    ...mergedOptions,\n    modules: mergedOptions.loadableGenerated?.modules,\n  })\n}\n","import { Suspense, Fragment, lazy } from 'react'\nimport { BailoutToCSR } from './dynamic-bailout-to-csr'\nimport type { ComponentModule } from './types'\nimport { PreloadChunks } from './preload-chunks'\n\n// Normalize loader to return the module as form { default: Component } for `React.lazy`.\n// Also for backward compatible since next/dynamic allows to resolve a component directly with loader\n// Client component reference proxy need to be converted to a module.\nfunction convertModule<P>(\n  mod: React.ComponentType<P> | ComponentModule<P> | undefined\n): {\n  default: React.ComponentType<P>\n} {\n  // Check \"default\" prop before accessing it, as it could be client reference proxy that could break it reference.\n  // Cases:\n  // mod: { default: Component }\n  // mod: Component\n  // mod: { default: proxy(Component) }\n  // mod: proxy(Component)\n  const hasDefault = mod && 'default' in mod\n  return {\n    default: hasDefault\n      ? (mod as ComponentModule<P>).default\n      : (mod as React.ComponentType<P>),\n  }\n}\n\nconst defaultOptions = {\n  loader: () => Promise.resolve(convertModule(() => null)),\n  loading: null,\n  ssr: true,\n}\n\ninterface LoadableOptions {\n  loader?: () => Promise<React.ComponentType<any> | ComponentModule<any>>\n  loading?: React.ComponentType<any> | null\n  ssr?: boolean\n  modules?: string[]\n}\n\nfunction Loadable(options: LoadableOptions) {\n  const opts = { ...defaultOptions, ...options }\n  const Lazy = lazy(() => opts.loader().then(convertModule))\n  const Loading = opts.loading\n\n  function LoadableComponent(props: any) {\n    const fallbackElement = Loading ? (\n      <Loading isLoading={true} pastDelay={true} error={null} />\n    ) : null\n\n    // If it's non-SSR or provided a loading component, wrap it in a suspense boundary\n    const hasSuspenseBoundary = !opts.ssr || !!opts.loading\n    const Wrap = hasSuspenseBoundary ? Suspense : Fragment\n    const wrapProps = hasSuspenseBoundary ? { fallback: fallbackElement } : {}\n    const children = opts.ssr ? (\n      <>\n        {/* During SSR, we need to preload the CSS from the dynamic component to avoid flash of unstyled content */}\n        {typeof window === 'undefined' ? (\n          <PreloadChunks moduleIds={opts.modules} />\n        ) : null}\n        <Lazy {...props} />\n      </>\n    ) : (\n      <BailoutToCSR reason=\"next/dynamic\">\n        <Lazy {...props} />\n      </BailoutToCSR>\n    )\n\n    return <Wrap {...wrapProps}>{children}</Wrap>\n  }\n\n  LoadableComponent.displayName = 'LoadableComponent'\n\n  return LoadableComponent\n}\n\nexport default Loadable\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"workAsyncStorageInstance\", {\n    enumerable: true,\n    get: function() {\n        return workAsyncStorageInstance;\n    }\n});\nconst _asynclocalstorage = require(\"./async-local-storage\");\nconst workAsyncStorageInstance = (0, _asynclocalstorage.createAsyncLocalStorage)();\n\n//# sourceMappingURL=work-async-storage-instance.js.map","'use client';\n\nimport dynamic from 'next/dynamic';\n\n// Use dynamic import with no SSR to avoid hydration issues with client components\nconst NostrIntegrationTest = dynamic(\n  () => import('../../lib/nostr/test-integration'),\n  { ssr: false }\n);\n\nexport default function NostrTestPage() {\n  return (\n    <div className=\"container mx-auto\">\n      <div className=\"max-w-3xl mx-auto p-6 bg-white dark:bg-gray-900 shadow-md rounded-lg mb-8\">\n        <h1 className=\"text-2xl font-bold mb-4\">Nostr Payment Integration</h1>\n        <p className=\"mb-4\">\n          This page demonstrates the MadTrips implementation of NIP-47 payments using Nostr Wallet Connect. \n          The implementation supports making payments via NIP-47-compatible wallets.\n        </p>\n        <p className=\"mb-4\">\n          Key features implemented:\n        </p>\n        <ul className=\"list-disc pl-6 mb-4 space-y-2\">\n          <li>NIP-47 client for connecting to remote signers</li>\n          <li>Lightning invoice payment processing via NIP-47</li>\n          <li>Payment capability detection based on login method</li>\n          <li>QR code display for manual payments</li>\n          <li>Reusable payment components for the booking process</li>\n        </ul>\n        <p>\n          Test integration with various clients and learn how to use the payment system.\n        </p>\n      </div>\n\n      <div className=\"bg-white dark:bg-gray-900 shadow-md rounded-lg p-6\">\n        <h2 className=\"text-xl font-bold mb-4\">Usage Instructions</h2>\n        \n        <div className=\"space-y-4\">\n          <div>\n            <h3 className=\"font-bold\">1. Connecting with NIP-47</h3>\n            <p>Use a NIP-47 compatible wallet like Alby or nsec.app to connect to your account.</p>\n          </div>\n          \n          <div>\n            <h3 className=\"font-bold\">2. Making Payments</h3>\n            <p>After connecting, you can pay Lightning invoices directly from your wallet.</p>\n          </div>\n          \n          <div>\n            <h3 className=\"font-bold\">3. Testing</h3>\n            <p>You can test the payment flow by generating a test invoice and attempting to pay it.</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n// Metadata removed - should be in a metadata.ts file or similar "],"names":["PreloadChunks","moduleIds","BailoutToCSR","reason","children","dynamic","dynamicOptions","options","mergedOptions","loadableOptions","loader","Loadable","modules","loadableGenerated","convertModule","mod","default","defaultOptions","Promise","resolve","loading","ssr","opts","Lazy","lazy","then","Loading","LoadableComponent","props","fallbackElement","isLoading","pastDelay","error","hasSuspenseBoundary","Wrap","Suspense","Fragment","fallback","wrapProps","displayName","NostrTestPage","div","className","h1","p","ul","li","h2","h3"],"sourceRoot":"","ignoreList":[2,3,5,8]}