{"version":3,"file":"static/chunks/app/community/page-41fb842dacfab406.js","mappings":"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","sources":["webpack://_N_E/../../../../src/shared/lib/lazy-dynamic/preload-chunks.tsx","webpack://_N_E/../../../../src/shared/lib/lazy-dynamic/dynamic-bailout-to-csr.tsx","webpack://_N_E/./src/utils/graphUtils.ts","webpack://_N_E/./src/constants/brandColors.ts","webpack://_N_E/./src/utils/profileUtils.ts","webpack://_N_E/./src/components/community/SocialGraph.tsx","webpack://_N_E/./src/components/community/NostrProfileImage.tsx","webpack://_N_E/./src/app/community/page.tsx","webpack://_N_E/./node_modules/next/dist/server/app-render/async-local-storage.js","webpack://_N_E/./node_modules/next/dist/api/app-dynamic.js","webpack://_N_E/./node_modules/next/dist/server/app-render/work-async-storage.external.js","webpack://_N_E/../../../src/shared/lib/app-dynamic.tsx","webpack://_N_E/../../../../src/shared/lib/lazy-dynamic/loadable.tsx","webpack://_N_E/./node_modules/next/dist/server/app-render/work-async-storage-instance.js","webpack://_N_E/?48b8"],"sourcesContent":["'use client'\n\nimport { preload } from 'react-dom'\n\nimport { workAsyncStorage } from '../../../server/app-render/work-async-storage.external'\nimport { encodeURIPath } from '../encode-uri-path'\n\nexport function PreloadChunks({\n  moduleIds,\n}: {\n  moduleIds: string[] | undefined\n}) {\n  // Early return in client compilation and only load requestStore on server side\n  if (typeof window !== 'undefined') {\n    return null\n  }\n\n  const workStore = workAsyncStorage.getStore()\n  if (workStore === undefined) {\n    return null\n  }\n\n  const allFiles = []\n\n  // Search the current dynamic call unique key id in react loadable manifest,\n  // and find the corresponding CSS files to preload\n  if (workStore.reactLoadableManifest && moduleIds) {\n    const manifest = workStore.reactLoadableManifest\n    for (const key of moduleIds) {\n      if (!manifest[key]) continue\n      const chunks = manifest[key].files\n      allFiles.push(...chunks)\n    }\n  }\n\n  if (allFiles.length === 0) {\n    return null\n  }\n\n  return (\n    <>\n      {allFiles.map((chunk) => {\n        const href = `${workStore.assetPrefix}/_next/${encodeURIPath(chunk)}`\n        const isCss = chunk.endsWith('.css')\n        // If it's stylesheet we use `precedence` o help hoist with React Float.\n        // For stylesheets we actually need to render the CSS because nothing else is going to do it so it needs to be part of the component tree.\n        // The `preload` for stylesheet is not optional.\n        if (isCss) {\n          return (\n            <link\n              key={chunk}\n              // @ts-ignore\n              precedence=\"dynamic\"\n              href={href}\n              rel=\"stylesheet\"\n              as=\"style\"\n            />\n          )\n        } else {\n          // If it's script we use ReactDOM.preload to preload the resources\n          preload(href, {\n            as: 'script',\n            fetchPriority: 'low',\n          })\n          return null\n        }\n      })}\n    </>\n  )\n}\n","'use client'\n\nimport type { ReactElement } from 'react'\nimport { BailoutToCSRError } from './bailout-to-csr'\n\ninterface BailoutToCSRProps {\n  reason: string\n  children: ReactElement\n}\n\n/**\n * If rendered on the server, this component throws an error\n * to signal Next.js that it should bail out to client-side rendering instead.\n */\nexport function BailoutToCSR({ reason, children }: BailoutToCSRProps) {\n  if (typeof window === 'undefined') {\n    throw new BailoutToCSRError(reason)\n  }\n\n  return children\n}\n","import { GraphNode } from '../types';\n\n/**\n * Preloads images for graph nodes with better error handling\n * @param nodes Array of graph nodes\n * @param onLoad Callback when all images are loaded\n * @param onError Callback when an error occurs\n */\nexport const preloadImages = (nodes: GraphNode[], onLoad: () => void, onError: (error: any) => void) => {\n  let loadedImages = 0;\n  let validNodes = 0;\n  \n  // If there are no nodes, call onLoad immediately\n  if (!nodes || nodes.length === 0) {\n    console.log('No nodes to preload images for');\n    onLoad();\n    return;\n  }\n  \n  try {\n    // Filter nodes that have both picture and npub\n    const nodesWithImages = nodes.filter(node => \n      node && node.picture && typeof node.picture === 'string' && \n      node.picture.trim() !== '' && node.picture.startsWith('http')\n    );\n    \n    validNodes = nodesWithImages.length;\n    \n    // If no valid nodes with images, call onLoad immediately\n    if (validNodes === 0) {\n      console.log('No valid nodes with images to preload');\n      onLoad();\n      return;\n    }\n    \n    console.log(`Preloading ${validNodes} images...`);\n    \n    // Process each node with an image\n    nodesWithImages.forEach((node) => {\n      const img = new Image();\n      \n      // Set crossOrigin to anonymous to avoid CORS issues\n      img.crossOrigin = 'anonymous';\n      \n      // Handle successful image load\n      img.onload = () => {\n        loadedImages += 1;\n        if (loadedImages === validNodes) {\n          console.log(`Successfully preloaded ${loadedImages} images`);\n          onLoad();\n        }\n      };\n      \n      // Handle image loading error\n      img.onerror = (err) => {\n        console.warn(`Failed to load image for node: ${node.id || 'unknown'}`, err);\n        loadedImages += 1;\n        if (loadedImages === validNodes) {\n          console.log(`Finished preloading with ${loadedImages} images (some may have failed)`);\n          onLoad();\n        }\n      };\n      \n      // Set a timeout to handle cases where the image might hang\n      const timeout = setTimeout(() => {\n        console.warn(`Image load timeout for node: ${node.id || 'unknown'}`);\n        if (img.complete) return;\n        \n        // Cancel the image loading\n        img.src = '';\n        loadedImages += 1;\n        if (loadedImages === validNodes) {\n          console.log(`Finished preloading with ${loadedImages} images (some timed out)`);\n          onLoad();\n        }\n      }, 5000); // 5 second timeout\n      \n      // Start loading the image\n      try {\n        img.src = node.picture as string;\n      } catch (err) {\n        console.error('Error setting image source:', err);\n        clearTimeout(timeout);\n        loadedImages += 1;\n        if (loadedImages === validNodes) {\n          onLoad();\n        }\n      }\n    });\n  } catch (err) {\n    console.error('Error in preloadImages:', err);\n    onError(err);\n    onLoad(); // Still call onLoad to prevent UI from being stuck\n  }\n};\n\nexport const handleNodeClick = (node: GraphNode) => {\n  if (node.npub) {\n    window.open(`https://njump.me/${node.npub}`, '_blank');\n  }\n}; ","export const BRAND_COLORS = {\n  bitcoinOrange: '#F7931A', // Bitcoin & innovation\n  deepBlue: '#1E3A8A',     // Atlantic Ocean\n  forestGreen: '#0F4C35',  // Lush landscapes\n  lightSand: '#F5E3C3',    // Beach-inspired\n}; ","import { useProfileImage } from '@/lib/hooks/useProfileImage';\n\n// Known profile pictures for specific npubs\nexport const KNOWN_PROFILES: Record<string, string> = {\n  'npub1freemadeir39t3zlklv2yq2espvmhqnntwlvf34jp9xy2k79gqmqrg9g7w': 'https://freemadeira.com/wp-content/uploads/2023/03/freemadeira-logo-01.png',\n  'npub1etgqcj9gc6yaxttuwu9eqgs3ynt2dzaudvwnrssrn2zdt2useaasfj8n6e': 'https://m.primal.net/LveZ.png', // FREE Madeira\n};\n\n// Default profile image to use as fallback\nexport const DEFAULT_PROFILE_IMAGE = \"https://nostr.build/i/nostr.build_d421c1d7fd21c5d73c3428f0fc5ed7359cedb81bcad8074de350bec2d02e9a67.jpeg\";\n\n// Helper function to shorten NPUBs for display\nexport const shortenNpub = (npub: string | undefined): string => {\n  if (!npub) return '';\n  return `${npub.substring(0, 6)}...${npub.substring(npub.length - 4)}`;\n}; ","'use client'\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport dynamic from 'next/dynamic';\nimport * as d3 from 'd3';\nimport { useNostr } from '@/lib/contexts/NostrContext';\nimport { GraphNode, GraphLink } from '../../types';\nimport { preloadImages, handleNodeClick } from '../../utils/graphUtils';\nimport { BRAND_COLORS } from '../../constants/brandColors';\nimport { DEFAULT_PROFILE_IMAGE, shortenNpub } from '../../utils/profileUtils';\n\n// Dynamically import the ForceGraph2D component with no SSR\nconst ForceGraph2D = dynamic(() => import('react-force-graph-2d').then(mod => mod.default), { ssr: false });\n\n// Define the core NPUBs that we want to focus on\nconst CORE_NPUBS = [\n  \"npub1etgqcj9gc6yaxttuwu9eqgs3ynt2dzaudvwnrssrn2zdt2useaasfj8n6e\", // Free Madeira\n  \"npub1s0veng2gvfwr62acrxhnqexq76sj6ldg3a5t935jy8e6w3shr5vsnwrmq5\", // Bitcoin Madeira\n  \"npub1dxd02kcjhgpkyrx60qnkd6j42kmc72u5lum0rp2ud8x5zfhnk4zscjj6hh\", // Madtrips\n  \"npub1funchalx8v747rsee6ahsuyrcd2s3rnxlyrtumfex9lecpmgwars6hq8kc\", // Funchal\n];\n\ninterface GraphData {\n  nodes: GraphNode[];\n  links: GraphLink[];\n}\n\ninterface SocialGraphProps {\n  // Primary NPUB to center the graph on (optional, defaults to first core NPUB)\n  centerNpub?: string;\n  // Additional NPUBs to include (optional, defaults to CORE_NPUBS)\n  npubs?: string[];\n  // Maximum connections to display per node\n  maxConnections?: number;\n  // Height of the graph container\n  height?: number | string;\n  // Width of the graph container\n  width?: number | string;\n  // Custom class names\n  className?: string;\n  // Include social data directly (optional)\n  data?: GraphData;\n}\n\n// Convert graph data to the format expected by ForceGraph2D\nconst convertGraphData = (data: GraphData) => {\n  return {\n    nodes: data.nodes.map(node => ({\n      ...node,\n      val: node.val || (node.isCoreNode ? 15 : 5),\n      color: node.color || (node.isCoreNode ? BRAND_COLORS.bitcoinOrange : BRAND_COLORS.lightSand),\n    })),\n    links: data.links.map(link => ({\n      source: typeof link.source === 'string' ? link.source : link.source?.id || '',\n      target: typeof link.target === 'string' ? link.target : link.target?.id || '',\n      value: link.value || 1,\n      color: link.color || (link.type === 'mutual' \n        ? BRAND_COLORS.bitcoinOrange  // Use bitcoin orange for mutual connections\n        : BRAND_COLORS.lightSand + '99'), // Use light sand with transparency for regular connections\n    })),\n  };\n};\n\n// Add humorous loading messages\nconst LOADING_MESSAGES = [\n  \"Fetching relays… or maybe just relaying nonsense.\",\n  \"Decrypting private messages… hope they're not just memes!\",\n  \"Relay lag detected! Blame the plebs.\",\n  \"Loading… because decentralized things take time.\",\n  \"Verifying pubkeys… definitely not reading your DMs.\",\n  \"Fetching Nostr notes… please hold, the relays are gossiping.\",\n  \"Buffering Nostr… because even freedom takes a second to load.\",\n  \"Rounding up relays… they're herding notes like digital catz.\"\n];\n\nexport const SocialGraph: React.FC<SocialGraphProps> = ({\n  centerNpub = CORE_NPUBS[0],\n  npubs = CORE_NPUBS,\n  maxConnections = 25,\n  height = 600,\n  width = '100%',\n  className = '',\n  data,\n}) => {\n  const [graphData, setGraphData] = useState<GraphData | null>(null);\n  const [selectedNode, setSelectedNode] = useState<GraphNode | null>(null);\n  const [nodeImages, setNodeImages] = useState<Map<string, HTMLImageElement>>(new Map());\n  const [loadingImages, setLoadingImages] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const { ndk, user, getSocialGraph } = useNostr();\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [dimensions, setDimensions] = useState({ width: 800, height: 600 });\n  const [loadingMessageIndex, setLoadingMessageIndex] = useState(0);\n\n  // Ensure user is not null before accessing properties\n  const isUserLoggedIn = user !== null && !!user;\n\n  // Rotate loading messages with slower timing\n  useEffect(() => {\n    let interval: NodeJS.Timeout;\n    \n    if (isLoading) {\n      interval = setInterval(() => {\n        setLoadingMessageIndex(prev => (prev + 1) % LOADING_MESSAGES.length);\n      }, 6000); // Increased from 4000ms to 6000ms to make messages change less frequently\n    }\n    \n    return () => {\n      if (interval) clearInterval(interval);\n    };\n  }, [isLoading]);\n\n  // Fetch real data from Nostr\n  const fetchNostrData = async () => {\n    // First check if we have NDK and user available\n    if (!ndk) {\n      console.log(\"NDK not initialized - showing connection prompt\");\n      setError(\"Nostr client not initialized. Please connect using a Nostr extension.\");\n      setIsLoading(false);\n      return;\n    }\n    \n    setIsLoading(true);\n    setError(null);\n    \n    try {\n      // Validate NPUBs before making the API call\n      const validNpubs = npubs.filter(npub => \n        typeof npub === 'string' && \n        npub.startsWith('npub1') && \n        npub.length >= 60 // slightly more lenient check\n      );\n      \n      if (validNpubs.length === 0) {\n        console.error(\"No valid NPUBs found in:\", npubs);\n        setError(\"No valid NPUBs provided to fetch social graph data. Please check your configuration.\");\n        setIsLoading(false);\n        return;\n      }\n      \n      console.log(\"Fetching Nostr social graph data for NPUBs:\", validNpubs);\n      \n      // Use the getSocialGraph function from the NostrContext\n      try {\n        const realData = await getSocialGraph(validNpubs, maxConnections);\n        \n        // Add debugging to check data structure\n        console.log(\"Raw graph data received:\", JSON.stringify(realData, null, 2).substring(0, 500) + \"...\");\n        \n        // Validate nodes and links\n        if (!realData) {\n          throw new Error(\"No data returned from getSocialGraph. Please try again later.\");\n        }\n        \n        if (!Array.isArray(realData.nodes)) {\n          throw new Error(\"Invalid nodes data - not an array. Please try again later.\");\n        }\n        \n        if (!Array.isArray(realData.links)) {\n          throw new Error(\"Invalid links data - not an array. Please try again later.\");\n        }\n        \n        // Check node data for all required fields\n        realData.nodes.forEach((node, index) => {\n          if (!node.id) {\n            console.warn(`Node at index ${index} missing id:`, node);\n          }\n          if (!node.npub) {\n            console.warn(`Node at index ${index} missing npub:`, node);\n          }\n        });\n        \n        // Check if we got valid data\n        if (realData && realData.nodes && realData.nodes.length > 0) {\n          console.log(`Successfully fetched social graph with ${realData.nodes.length} nodes and ${realData.links.length} links`);\n          console.log(\"Sample node:\", realData.nodes[0]);\n          setGraphData(realData);\n        } else {\n          throw new Error(\"Received empty or invalid graph data from Nostr. Please try again later.\");\n        }\n      } catch (error) {\n        console.error(\"Error in getSocialGraph:\", error);\n        throw error; // Re-throw to be caught by outer catch\n      }\n    } catch (error) {\n      const errorMessage = error instanceof Error ? error.message : String(error);\n      console.error(\"Error fetching social graph data:\", errorMessage);\n      setError(`Failed to fetch social graph: ${errorMessage}`);\n      \n      // Don't fall back to mock data, as per user's request\n      // Instead, show the error and let the user retry\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Initialize data on component mount\n  useEffect(() => {\n    const updateDimensions = () => {\n      if (containerRef.current) {\n        setDimensions({\n          width: containerRef.current.offsetWidth,\n          height: containerRef.current.offsetHeight || 600,\n        });\n      }\n    };\n\n    // Initial dimensions update\n    updateDimensions();\n    \n    // Add resize listener\n    window.addEventListener('resize', updateDimensions);\n    \n    // Cleanup\n    return () => window.removeEventListener('resize', updateDimensions);\n  }, []);\n\n  // Update graph data based on login status\n  useEffect(() => {\n    // Always attempt to fetch real data from Nostr\n    // Don't use fallback data, as per user's request\n    fetchNostrData();\n    \n    // Note: This might result in longer loading times, but will ensure\n    // we're always showing real data rather than mock/static data\n  }, [isUserLoggedIn, user?.npub]);\n\n  // Initialize data when dependencies change\n  useEffect(() => {\n    const initializeData = async () => {\n      // If we already have data (passed as prop), use that\n      if (data) {\n        console.log(\"Using provided data:\", data);\n        setGraphData(data);\n        return;\n      }\n      \n      // Otherwise, try to fetch from Nostr\n      // Always attempt to fetch real data, even if it takes longer\n      await fetchNostrData();\n    };\n    \n    initializeData();\n  }, [ndk, npubs.join(','), centerNpub, maxConnections]); // Re-fetch when these dependencies change\n\n  // Update preloadImages call with better error handling\n  useEffect(() => {\n    if (graphData?.nodes) {\n      try {\n        setLoadingImages(true);\n        \n        // Create a map to store loaded images\n        const imageMap = new Map<string, HTMLImageElement>();\n        \n        // Custom preload function that updates our local imageMap\n        const handleImagesLoaded = () => {\n          console.log('All images loaded or handled');\n          setNodeImages(prev => {\n            // Merge previous images with new ones to avoid losing already loaded images\n            const newMap = new Map(prev);\n            imageMap.forEach((img, key) => {\n              newMap.set(key, img);\n            });\n            return newMap;\n          });\n          setLoadingImages(false);\n        };\n        \n        // Handle image loading errors\n        const handleImageError = (error: any) => {\n          console.error('Image loading error:', error);\n          // Still finish loading to prevent UI from being stuck\n          setLoadingImages(false);\n        };\n        \n        // Custom preload function that updates our local imageMap\n        const customPreloadImages = (nodes: GraphNode[]) => {\n          let loadedImages = 0;\n          \n          // Filter nodes that have both picture and npub\n          const nodesWithImages = nodes.filter(node => \n            node && node.picture && node.npub && \n            typeof node.picture === 'string' && \n            typeof node.npub === 'string'\n          );\n          \n          const validNodes = nodesWithImages.length;\n          \n          if (validNodes === 0) {\n            handleImagesLoaded();\n            return;\n          }\n          \n          nodesWithImages.forEach(node => {\n            // Skip if we already have this image\n            if (nodeImages.has(node.npub as string)) {\n              loadedImages++;\n              if (loadedImages === validNodes) {\n                handleImagesLoaded();\n              }\n              return;\n            }\n            \n            const img = new Image();\n            img.crossOrigin = 'anonymous';\n            \n            img.onload = () => {\n              imageMap.set(node.npub as string, img);\n              loadedImages++;\n              if (loadedImages === validNodes) {\n                handleImagesLoaded();\n              }\n            };\n            \n            img.onerror = () => {\n              // On error, try with the default image\n              const defaultImg = new Image();\n              defaultImg.crossOrigin = 'anonymous';\n              defaultImg.src = DEFAULT_PROFILE_IMAGE;\n              \n              defaultImg.onload = () => {\n                imageMap.set(node.npub as string, defaultImg);\n                loadedImages++;\n                if (loadedImages === validNodes) {\n                  handleImagesLoaded();\n                }\n              };\n              \n              defaultImg.onerror = () => {\n                // If even the default fails, increment counter\n                loadedImages++;\n                if (loadedImages === validNodes) {\n                  handleImagesLoaded();\n                }\n              };\n            };\n            \n            // Set a timeout to handle cases where the image might hang\n            const timeout = setTimeout(() => {\n              if (img.complete) return;\n              \n              // Cancel the image loading\n              img.src = '';\n              loadedImages++;\n              if (loadedImages === validNodes) {\n                handleImagesLoaded();\n              }\n            }, 5000); // 5 second timeout\n            \n            try {\n              img.src = node.picture as string;\n            } catch (err) {\n              clearTimeout(timeout);\n              loadedImages++;\n              if (loadedImages === validNodes) {\n                handleImagesLoaded();\n              }\n            }\n          });\n        };\n        \n        // Use our custom preload function\n        customPreloadImages(graphData.nodes);\n      } catch (error) {\n        console.error('Error in image preloading:', error);\n        setLoadingImages(false);\n      }\n    }\n  }, [graphData]);\n\n  // Render appropriate UI based on loading/error state\n  if (isLoading) {\n    return (\n      <div \n        className={`flex flex-col items-center justify-center bg-forest rounded-lg ${className}`} \n        style={{ height, width }}\n      >\n        <div className=\"text-lg font-medium text-center text-sand\">\n          Loading Nostr social graph...\n        </div>\n        \n        <div className=\"mt-4 text-center max-w-md px-4 h-16 flex items-center justify-center\">\n          <div \n            key={loadingMessageIndex} \n            className=\"animate-fade-in-out text-lg font-medium text-bitcoin\"\n          >\n            {LOADING_MESSAGES[loadingMessageIndex]}\n          </div>\n        </div>\n        \n        {/* Bitcoin Orange to Ocean Blue gradient bar that fills and empties */}\n        <div className=\"mt-6 w-64 h-3 bg-sand dark:bg-sand/30 rounded-full overflow-hidden relative shadow-inner\">\n          <div \n            className=\"absolute h-full rounded-full animate-fill-empty-bar\"\n            style={{ \n              background: `linear-gradient(to right, \n                ${BRAND_COLORS.bitcoinOrange}, \n                ${BRAND_COLORS.deepBlue})`,\n              boxShadow: '0 0 10px rgba(247, 147, 26, 0.5)'\n            }}\n          ></div>\n        </div>\n        \n        <div className=\"mt-6 text-sm text-sand italic\">\n          Real-time data takes a moment to load\n        </div>\n      </div>\n    );\n  }\n\n  if (error && !graphData) {\n    return (\n      <div className={`flex flex-col items-center justify-center ${className}`} style={{ height, width }}>\n        <div className=\"text-center p-6 bg-red-50 dark:bg-red-950 rounded-lg border border-red-200 dark:border-red-800 max-w-md\">\n          <h3 className=\"text-lg font-semibold text-red-700 dark:text-red-400 mb-2\">Error Loading Social Graph</h3>\n          <p className=\"text-red-600 dark:text-red-300 mb-4\">{error}</p>\n          \n          <div className=\"mt-4\">\n            <button \n              onClick={fetchNostrData}\n              className=\"px-4 py-2 bg-red-600 hover:bg-red-700 text-white rounded-md shadow-sm transition-colors\"\n            >\n              Try Again\n            </button>\n          </div>\n          \n          {!ndk && (\n            <div className=\"p-4 mt-4 bg-amber-50 dark:bg-amber-950 rounded-lg border border-amber-200 dark:border-amber-800\">\n              <p className=\"text-amber-700 dark:text-amber-300 mb-2\">\n                To use the social graph, you need a Nostr extension. \n                Try installing one of these:\n              </p>\n              <ul className=\"list-disc list-inside text-amber-600 dark:text-amber-400\">\n                <li><a href=\"https://getalby.com/\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"underline hover:text-amber-800 dark:hover:text-amber-200\">Alby</a></li>\n                <li><a href=\"https://github.com/fiatjaf/nos2x\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"underline hover:text-amber-800 dark:hover:text-amber-200\">nos2x</a></li>\n                <li><a href=\"https://getflamingo.org/\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"underline hover:text-amber-800 dark:hover:text-amber-200\">Flamingo</a></li>\n              </ul>\n            </div>\n          )}\n          \n          <div className=\"mt-4 text-sm text-gray-600 dark:text-gray-400\">\n            <p>We prioritize showing real-time data from the Nostr network rather than using static or mock data.</p>\n            <p className=\"mt-1\">This ensures you always see the most up-to-date social connections.</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div \n      ref={containerRef}\n      className=\"social-graph-container rounded-lg shadow-lg overflow-hidden w-full h-full\"\n      style={{ \n        height: typeof height === 'number' ? `${height}px` : height,\n        width: typeof width === 'number' ? `${width}px` : width,\n        background: `linear-gradient(135deg, ${BRAND_COLORS.deepBlue} 0%, ${BRAND_COLORS.forestGreen} 100%)`,\n      }}\n    >\n      <div className=\"w-full h-full relative\">\n        <div className=\"absolute top-0 left-0 z-10 p-2 flex items-center space-x-2\">\n          <div className=\"font-medium px-3 py-1 bg-white/30 border border-gray-200 rounded shadow-sm text-sm\" style={{ color: BRAND_COLORS.lightSand }}>\n            Bitcoin Madeira Social Graph\n          </div>\n          <button \n            onClick={fetchNostrData}\n            disabled={isLoading}\n            className={`px-3 py-1 bg-white/20 hover:bg-white/30 rounded shadow-sm text-sm font-medium border border-gray-200 flex items-center ${isLoading ? 'opacity-50' : ''}`}\n            aria-label=\"Reload graph\"\n            style={{ color: BRAND_COLORS.lightSand }}\n          >\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className={`h-4 w-4 mr-1 ${isLoading ? 'animate-spin' : ''}`} fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\" />\n            </svg>\n            {isLoading ? 'Loading...' : 'Reload'}\n          </button>\n        </div>\n\n        {error && (\n          <div className=\"absolute top-12 left-0 z-10 p-2 w-full\">\n            <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-2 rounded max-w-md mx-auto\">\n              <p className=\"text-sm\">{error}</p>\n              <div className=\"flex justify-end mt-1\">\n                <button \n                  onClick={() => setError(null)} \n                  className=\"text-xs text-red-600 hover:text-red-800\"\n                >\n                  Dismiss\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {selectedNode && (\n          <div className=\"absolute bottom-0 left-0 z-10 p-2 w-full\">\n            <div className=\"shadow-sm p-3 max-w-xs mx-auto border border-gray-200 rounded-lg\" style={{ backgroundColor: BRAND_COLORS.deepBlue }}>\n              <div className=\"flex items-center\">\n                <div className=\"w-10 h-10 rounded-full overflow-hidden mr-3 border-2\" style={{ borderColor: BRAND_COLORS.bitcoinOrange }}>\n                  <img \n                    src={selectedNode.picture || DEFAULT_PROFILE_IMAGE} \n                    alt={selectedNode.name || shortenNpub(selectedNode.npub)}\n                    className=\"w-full h-full object-cover\"\n                    onError={(e) => {\n                      (e.target as HTMLImageElement).src = DEFAULT_PROFILE_IMAGE;\n                    }}\n                  />\n                </div>\n                <div>\n                  <div className=\"font-medium\" style={{ color: BRAND_COLORS.lightSand }}>{selectedNode.name || shortenNpub(selectedNode.npub)}</div>\n                  <div className=\"text-xs\" style={{ color: BRAND_COLORS.lightSand + '99' }}>{shortenNpub(selectedNode.npub)}</div>\n                </div>\n              </div>\n              <div className=\"mt-2 flex justify-end\">\n                <a \n                  href={`https://njump.me/${selectedNode.npub}`}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  className=\"text-xs hover:underline\"\n                  style={{ color: BRAND_COLORS.bitcoinOrange }}\n                >\n                  View on Nostr →\n                </a>\n              </div>\n            </div>\n          </div>\n        )}\n\n        <div className=\"w-full h-full\">\n          {graphData && (\n            <ForceGraph2D\n              graphData={convertGraphData(graphData)}\n              nodeColor={(node: any) => node.color || BRAND_COLORS.lightSand}\n              nodeVal={(node: any) => node.val || 1}\n              linkColor={(link: any) => link.color || BRAND_COLORS.lightSand + '99'}\n              linkWidth={(link: any) => Math.sqrt(link.value || 1) * 1.5}\n              onNodeClick={(node: any, event: MouseEvent) => {\n                setSelectedNode(node as GraphNode);\n                handleNodeClick(node as GraphNode);\n              }}\n              width={dimensions.width}\n              height={dimensions.height}\n              nodeCanvasObject={(node: any, ctx: CanvasRenderingContext2D, globalScale: number) => {\n                // Helper function to draw fallback circle\n                const drawFallbackCircle = (node: GraphNode, ctx: CanvasRenderingContext2D, size: number) => {\n                  try {\n                    ctx.beginPath();\n                    ctx.fillStyle = node.color as string || BRAND_COLORS.lightSand;\n                    ctx.arc(node.x as number, node.y as number, size, 0, 2 * Math.PI);\n                    ctx.fill();\n                    \n                    // Add highlight border for core nodes\n                    if (node.isCoreNode) {\n                      ctx.beginPath();\n                      ctx.strokeStyle = BRAND_COLORS.bitcoinOrange; // Bitcoin orange for core nodes\n                      ctx.lineWidth = 2;\n                      ctx.arc(node.x as number, node.y as number, size + 2, 0, 2 * Math.PI);\n                      ctx.stroke();\n                    }\n                  } catch (err) {\n                    console.error('Error drawing fallback circle:', err);\n                  }\n                };\n\n                try {\n                  const graphNode = node as GraphNode;\n                  const nodeSize = graphNode.val || 5;\n                  const npubKey = graphNode.npub || '';\n                  const imageSource = npubKey ? nodeImages.get(npubKey) : null;\n                  \n                  // Draw the node with profile image if available\n                  if (imageSource && imageSource.complete && imageSource.naturalWidth > 0) {\n                    try {\n                      // Create circular clipping path\n                      ctx.save();\n                      ctx.beginPath();\n                      ctx.arc(graphNode.x as number, graphNode.y as number, nodeSize, 0, 2 * Math.PI);\n                      ctx.clip();\n                      \n                      // Draw the profile image\n                      const imgSize = nodeSize * 2;\n                      ctx.drawImage(\n                        imageSource, \n                        (graphNode.x as number) - nodeSize, \n                        (graphNode.y as number) - nodeSize, \n                        imgSize, \n                        imgSize\n                      );\n                      \n                      ctx.restore();\n                      \n                      // Add highlight border for core nodes\n                      if (graphNode.isCoreNode) {\n                        ctx.beginPath();\n                        ctx.strokeStyle = BRAND_COLORS.bitcoinOrange; // Bitcoin orange for core nodes\n                        ctx.lineWidth = 2;\n                        ctx.arc(graphNode.x as number, graphNode.y as number, nodeSize + 2, 0, 2 * Math.PI);\n                        ctx.stroke();\n                      }\n                    } catch (err) {\n                      // Fallback to circle if image drawing fails\n                      drawFallbackCircle(graphNode, ctx, nodeSize);\n                    }\n                  } else {\n                    // Fallback to plain circle if no image\n                    drawFallbackCircle(graphNode, ctx, nodeSize);\n                  }\n                } catch (err) {\n                  console.error('Error rendering node:', err);\n                  // In case of any error, don't crash the rendering\n                }\n              }}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SocialGraph;","'use client'\n\nimport Image from 'next/image'\nimport { useEffect, useState } from 'react'\nimport { useNostr } from '@/lib/contexts/NostrContext'\n\ninterface NostrProfileImageProps {\n  npub: string\n  width?: number\n  height?: number\n  className?: string\n  alt?: string\n}\n\nexport function NostrProfileImage({ \n  npub, \n  width = 64, \n  height = 64, \n  className = '', \n  alt = 'Nostr Profile' \n}: NostrProfileImageProps) {\n  const [profilePic, setProfilePic] = useState<string | null>(null)\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState<string | null>(null)\n  const { ndk, getUserProfile } = useNostr()\n\n  useEffect(() => {\n    const fetchProfileData = async () => {\n      if (!ndk || !npub) {\n        setLoading(false)\n        return\n      }\n\n      setLoading(true)\n      setError(null)\n\n      try {\n        // Use the getUserProfile function from NostrContext\n        const user = await getUserProfile(npub)\n        \n        if (user && user.profile?.picture) {\n          setProfilePic(user.profile.picture)\n        } else {\n          // If no profile picture is found, use bitcoin image as fallback\n          setProfilePic('/assets/bitcoin.png')\n        }\n      } catch (err) {\n        console.error(`Failed to fetch profile for ${npub}:`, err)\n        setError('Failed to load profile')\n        setProfilePic('/assets/bitcoin.png')\n      } finally {\n        setLoading(false)\n      }\n    }\n\n    fetchProfileData()\n  }, [ndk, npub, getUserProfile])\n\n  return (\n    <div className={`relative ${className}`}>\n      {loading ? (\n        <div className=\"animate-pulse bg-gray-300 dark:bg-gray-700 rounded-full\" style={{ width, height }} />\n      ) : (\n        <div className=\"rounded-full overflow-hidden\" style={{ width, height }}>\n          <Image\n            src={profilePic || '/assets/bitcoin.png'} // Fallback to bitcoin image if no profile pic\n            alt={alt}\n            width={width}\n            height={height} \n            className=\"object-cover w-full h-full\"\n            priority\n            unoptimized\n          />\n        </div>\n      )}\n    </div>\n  )\n} ","'use client';\n\nimport React, { useEffect, useState } from 'react';\nimport Link from 'next/link';\nimport SocialGraph from '@/components/community/SocialGraph';\nimport { NostrProfileImage } from '@/components/community/NostrProfileImage';\nimport { useNostr } from '@/lib/contexts/NostrContext';\nimport { BRAND_COLORS } from '@/constants/brandColors';\n\n// Function to generate Nostr profile URL\nconst getNostrProfileUrl = (npub: string) => {\n  // You can choose any popular Nostr web client\n  return `https://njump.me/${npub}`;\n};\n\nexport default function CommunityPage() {\n  // Define the core NPUBs with their descriptions\n  const coreProfiles = [\n    {\n      npub: \"npub1etgqcj9gc6yaxttuwu9eqgs3ynt2dzaudvwnrssrn2zdt2useaasfj8n6e\",\n      description: \"Madeira Community focused on Bitcoin adoption and education.\"\n    },\n    {\n      npub: \"npub1s0veng2gvfwr62acrxhnqexq76sj6ldg3a5t935jy8e6w3shr5vsnwrmq5\",\n      description: \"The Sovereign Individual\"\n    },\n    {\n      npub: \"npub1dxd02kcjhgpkyrx60qnkd6j42kmc72u5lum0rp2ud8x5zfhnk4zscjj6hh\",\n      description: \"Pleb Travel Solutions.\"\n    },\n    {\n      npub: \"npub1funchalx8v747rsee6ahsuyrcd2s3rnxlyrtumfex9lecpmgwars6hq8kc\",\n      description: \"Descentralized Community Ads Madeira\"\n    }\n  ];\n\n  const [profileNames, setProfileNames] = useState<{[key: string]: string}>({});\n  const { getUserProfile } = useNostr();\n\n  // Fetch profile names using NDK\n  useEffect(() => {\n    const fetchProfileNames = async () => {\n      const names: {[key: string]: string} = {};\n      \n      for (const profile of coreProfiles) {\n        try {\n          const user = await getUserProfile(profile.npub);\n          if (user && user.profile?.name) {\n            names[profile.npub] = user.profile.displayName || user.profile.name;\n          }\n        } catch (err) {\n          console.error(`Failed to fetch name for ${profile.npub}:`, err);\n        }\n      }\n      \n      setProfileNames(names);\n    };\n\n    fetchProfileNames();\n  }, [getUserProfile]);\n\n  return (\n    <div className=\"container mx-auto px-4 py-8\">\n      <h1 className=\"text-3xl font-bold mb-6\"><span className=\"text-bitcoin\">Bitcoin Madeira Community</span></h1>\n      \n      <div className=\"bg-forest text-white rounded-lg shadow-md p-4 mb-8\">\n        <h3 className=\"text-xl font-semibold mb-4 text-sand\">This visualization shows the connections between key community members</h3>\n        <div className=\"h-[600px] w-full mb-6\">\n          <SocialGraph \n            height={600} \n            className=\"rounded-lg border border-gray-200\"\n          />\n        </div>\n        \n        <p className=\"mb-6\">\n          The Bitcoin Madeira community is a network of individuals, businesses, and organizations \n          committed to promoting Bitcoin adoption and education in Madeira.\n        </p>\n        \n        <h2 className=\"text-2xl font-bold mb-4 text-sand\">Community Members</h2>\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6 mb-4\">\n          {coreProfiles.map((profile) => (\n            <Link \n              href={getNostrProfileUrl(profile.npub)} \n              key={profile.npub}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"block transition-transform hover:scale-105 focus:scale-105 hover:shadow-lg focus:shadow-lg outline-none\"\n            >\n              <div className=\"bg-white/10 rounded-lg p-5 flex flex-col items-center h-full border border-transparent hover:border-bitcoin focus:border-bitcoin transition-all duration-300\" style={{ minHeight: '220px' }}>\n                <NostrProfileImage \n                  npub={profile.npub} \n                  width={80} \n                  height={80} \n                  className=\"mb-4\"\n                  alt={profileNames[profile.npub] || \"Community Member\"}\n                />\n                <h3 className=\"text-lg font-semibold text-bitcoin mb-3\">\n                  {profileNames[profile.npub] || \"Loading...\"}\n                </h3>\n                <p className=\"text-center text-sm text-sand\">{profile.description}</p>\n              </div>\n            </Link>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n} ","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n0 && (module.exports = {\n    bindSnapshot: null,\n    createAsyncLocalStorage: null,\n    createSnapshot: null\n});\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    bindSnapshot: function() {\n        return bindSnapshot;\n    },\n    createAsyncLocalStorage: function() {\n        return createAsyncLocalStorage;\n    },\n    createSnapshot: function() {\n        return createSnapshot;\n    }\n});\nconst sharedAsyncLocalStorageNotAvailableError = Object.defineProperty(new Error('Invariant: AsyncLocalStorage accessed in runtime where it is not available'), \"__NEXT_ERROR_CODE\", {\n    value: \"E504\",\n    enumerable: false,\n    configurable: true\n});\nclass FakeAsyncLocalStorage {\n    disable() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n    getStore() {\n        // This fake implementation of AsyncLocalStorage always returns `undefined`.\n        return undefined;\n    }\n    run() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n    exit() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n    enterWith() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n    static bind(fn) {\n        return fn;\n    }\n}\nconst maybeGlobalAsyncLocalStorage = typeof globalThis !== 'undefined' && globalThis.AsyncLocalStorage;\nfunction createAsyncLocalStorage() {\n    if (maybeGlobalAsyncLocalStorage) {\n        return new maybeGlobalAsyncLocalStorage();\n    }\n    return new FakeAsyncLocalStorage();\n}\nfunction bindSnapshot(fn) {\n    if (maybeGlobalAsyncLocalStorage) {\n        return maybeGlobalAsyncLocalStorage.bind(fn);\n    }\n    return FakeAsyncLocalStorage.bind(fn);\n}\nfunction createSnapshot() {\n    if (maybeGlobalAsyncLocalStorage) {\n        return maybeGlobalAsyncLocalStorage.snapshot();\n    }\n    return function(fn, ...args) {\n        return fn(...args);\n    };\n}\n\n//# sourceMappingURL=async-local-storage.js.map","export * from '../shared/lib/app-dynamic';\nexport { default } from '../shared/lib/app-dynamic';\n\n//# sourceMappingURL=app-dynamic.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"workAsyncStorage\", {\n    enumerable: true,\n    get: function() {\n        return _workasyncstorageinstance.workAsyncStorageInstance;\n    }\n});\nconst _workasyncstorageinstance = require(\"./work-async-storage-instance\");\n\n//# sourceMappingURL=work-async-storage.external.js.map","import type React from 'react'\nimport type { JSX } from 'react'\nimport Loadable from './lazy-dynamic/loadable'\n\nimport type {\n  LoadableGeneratedOptions,\n  DynamicOptionsLoadingProps,\n  Loader,\n  LoaderComponent,\n} from './lazy-dynamic/types'\n\nexport {\n  type LoadableGeneratedOptions,\n  type DynamicOptionsLoadingProps,\n  type Loader,\n  type LoaderComponent,\n}\n\nexport type DynamicOptions<P = {}> = LoadableGeneratedOptions & {\n  loading?: () => JSX.Element | null\n  loader?: Loader<P>\n  loadableGenerated?: LoadableGeneratedOptions\n  modules?: string[]\n  ssr?: boolean\n}\n\nexport type LoadableOptions<P = {}> = DynamicOptions<P>\n\nexport type LoadableFn<P = {}> = (\n  opts: LoadableOptions<P>\n) => React.ComponentType<P>\n\nexport type LoadableComponent<P = {}> = React.ComponentType<P>\n\nexport default function dynamic<P = {}>(\n  dynamicOptions: DynamicOptions<P> | Loader<P>,\n  options?: DynamicOptions<P>\n): React.ComponentType<P> {\n  const loadableOptions: LoadableOptions<P> = {}\n\n  if (typeof dynamicOptions === 'function') {\n    loadableOptions.loader = dynamicOptions\n  }\n\n  const mergedOptions = {\n    ...loadableOptions,\n    ...options,\n  }\n\n  return Loadable({\n    ...mergedOptions,\n    modules: mergedOptions.loadableGenerated?.modules,\n  })\n}\n","import { Suspense, Fragment, lazy } from 'react'\nimport { BailoutToCSR } from './dynamic-bailout-to-csr'\nimport type { ComponentModule } from './types'\nimport { PreloadChunks } from './preload-chunks'\n\n// Normalize loader to return the module as form { default: Component } for `React.lazy`.\n// Also for backward compatible since next/dynamic allows to resolve a component directly with loader\n// Client component reference proxy need to be converted to a module.\nfunction convertModule<P>(\n  mod: React.ComponentType<P> | ComponentModule<P> | undefined\n): {\n  default: React.ComponentType<P>\n} {\n  // Check \"default\" prop before accessing it, as it could be client reference proxy that could break it reference.\n  // Cases:\n  // mod: { default: Component }\n  // mod: Component\n  // mod: { default: proxy(Component) }\n  // mod: proxy(Component)\n  const hasDefault = mod && 'default' in mod\n  return {\n    default: hasDefault\n      ? (mod as ComponentModule<P>).default\n      : (mod as React.ComponentType<P>),\n  }\n}\n\nconst defaultOptions = {\n  loader: () => Promise.resolve(convertModule(() => null)),\n  loading: null,\n  ssr: true,\n}\n\ninterface LoadableOptions {\n  loader?: () => Promise<React.ComponentType<any> | ComponentModule<any>>\n  loading?: React.ComponentType<any> | null\n  ssr?: boolean\n  modules?: string[]\n}\n\nfunction Loadable(options: LoadableOptions) {\n  const opts = { ...defaultOptions, ...options }\n  const Lazy = lazy(() => opts.loader().then(convertModule))\n  const Loading = opts.loading\n\n  function LoadableComponent(props: any) {\n    const fallbackElement = Loading ? (\n      <Loading isLoading={true} pastDelay={true} error={null} />\n    ) : null\n\n    // If it's non-SSR or provided a loading component, wrap it in a suspense boundary\n    const hasSuspenseBoundary = !opts.ssr || !!opts.loading\n    const Wrap = hasSuspenseBoundary ? Suspense : Fragment\n    const wrapProps = hasSuspenseBoundary ? { fallback: fallbackElement } : {}\n    const children = opts.ssr ? (\n      <>\n        {/* During SSR, we need to preload the CSS from the dynamic component to avoid flash of unstyled content */}\n        {typeof window === 'undefined' ? (\n          <PreloadChunks moduleIds={opts.modules} />\n        ) : null}\n        <Lazy {...props} />\n      </>\n    ) : (\n      <BailoutToCSR reason=\"next/dynamic\">\n        <Lazy {...props} />\n      </BailoutToCSR>\n    )\n\n    return <Wrap {...wrapProps}>{children}</Wrap>\n  }\n\n  LoadableComponent.displayName = 'LoadableComponent'\n\n  return LoadableComponent\n}\n\nexport default Loadable\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"workAsyncStorageInstance\", {\n    enumerable: true,\n    get: function() {\n        return workAsyncStorageInstance;\n    }\n});\nconst _asynclocalstorage = require(\"./async-local-storage\");\nconst workAsyncStorageInstance = (0, _asynclocalstorage.createAsyncLocalStorage)();\n\n//# sourceMappingURL=work-async-storage-instance.js.map","import(/* webpackMode: \"eager\" */ \"/home/lfg/Git/Madtrips/src/app/community/page.tsx\");\n"],"names":["PreloadChunks","moduleIds","BailoutToCSR","reason","children","handleNodeClick","node","npub","open","bitcoinOrange","deepBlue","forestGreen","lightSand","substring","length","ForceGraph2D","dynamic","then","mod","default","ssr","CORE_NPUBS","convertGraphData","nodes","data","map","val","isCoreNode","color","BRAND_COLORS","links","link","source","id","target","value","type","LOADING_MESSAGES","centerNpub","npubs","maxConnections","height","width","className","graphData","setGraphData","useState","selectedNode","setSelectedNode","nodeImages","setNodeImages","Map","loadingImages","setLoadingImages","isLoading","setIsLoading","error","setError","ndk","user","getSocialGraph","useNostr","containerRef","useRef","dimensions","setDimensions","loadingMessageIndex","setLoadingMessageIndex","isUserLoggedIn","useEffect","interval","setInterval","prev","clearInterval","fetchNostrData","console","log","validNpubs","filter","startsWith","realData","JSON","stringify","Array","isArray","forEach","index","warn","errorMessage","Error","message","String","updateDimensions","current","offsetWidth","offsetHeight","window","addEventListener","removeEventListener","initializeData","join","imageMap","handleImagesLoaded","newMap","img","key","set","customPreloadImages","loadedImages","nodesWithImages","picture","validNodes","has","Image","crossOrigin","onload","onerror","defaultImg","src","DEFAULT_PROFILE_IMAGE","timeout","setTimeout","complete","err","clearTimeout","div","style","background","boxShadow","h3","p","button","onClick","ul","li","a","href","rel","ref","disabled","aria-label","svg","xmlns","fill","viewBox","stroke","path","strokeLinecap","strokeLinejoin","strokeWidth","d","backgroundColor","borderColor","alt","name","shortenNpub","onError","e","nodeColor","nodeVal","linkColor","linkWidth","Math","sqrt","onNodeClick","event","nodeCanvasObject","ctx","globalScale","drawFallbackCircle","size","beginPath","fillStyle","arc","x","y","PI","strokeStyle","lineWidth","nodeSize","graphNode","npubKey","imageSource","get","naturalWidth","save","clip","imgSize","drawImage","restore","NostrProfileImage","profilePic","setProfilePic","loading","setLoading","getUserProfile","fetchProfileData","profile","priority","unoptimized","getNostrProfileUrl","CommunityPage","coreProfiles","description","profileNames","setProfileNames","fetchProfileNames","names","displayName","h1","span","SocialGraph","h2","Link","minHeight","dynamicOptions","options","mergedOptions","loadableOptions","loader","Loadable","modules","loadableGenerated","convertModule","hasDefault","defaultOptions","Promise","resolve","opts","Lazy","lazy","Loading","LoadableComponent","props","fallbackElement","pastDelay","hasSuspenseBoundary","Wrap","Suspense","Fragment","fallback","wrapProps"],"sourceRoot":"","ignoreList":[8,9,10,13]}