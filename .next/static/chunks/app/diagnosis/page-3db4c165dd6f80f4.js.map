{"version":3,"file":"static/chunks/app/diagnosis/page-3db4c165dd6f80f4.js","mappings":"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","sources":["webpack://_N_E/?6593","webpack://_N_E/./src/app/diagnosis/page.tsx"],"sourcesContent":["import(/* webpackMode: \"eager\" */ \"/home/lfg/Git/Madtrips/src/app/diagnosis/page.tsx\");\n","'use client';\n\nimport { useEffect, useState } from 'react';\nimport Link from 'next/link';\n\nexport default function DiagnosisPage() {\n  const [isLoading, setIsLoading] = useState(true);\n  const [results, setResults] = useState<any>(null);\n  const [error, setError] = useState<string | null>(null);\n  const [clientChecks, setClientChecks] = useState<Record<string, any>>({\n    status: 'pending',\n    details: {}\n  });\n\n  useEffect(() => {\n    // Run server-side diagnostics\n    fetch('/api/diagnosis')\n      .then(response => {\n        if (!response.ok) {\n          throw new Error(`API returned status ${response.status}`);\n        }\n        return response.json();\n      })\n      .then(data => {\n        setResults(data);\n        setIsLoading(false);\n      })\n      .catch(err => {\n        setError(err.message);\n        setIsLoading(false);\n      });\n\n    // Run client-side diagnostics\n    runClientChecks();\n  }, []);\n\n  const runClientChecks = async () => {\n    const checks: Record<string, any> = {\n      status: 'checking',\n      details: {}\n    };\n\n    // Check if D3 is loaded\n    checks.details.d3Loaded = typeof window !== 'undefined' && 'window.d3' in window;\n\n    // Check for visualization SVG\n    if (typeof document !== 'undefined') {\n      const svgElement = document.querySelector('.visualization-container svg');\n      checks.details.svgExists = !!svgElement;\n\n      if (svgElement) {\n        const width = svgElement.getAttribute('width');\n        const height = svgElement.getAttribute('height');\n        checks.details.svgDimensions = { width, height };\n\n        const nodes = svgElement.querySelectorAll('.node');\n        const links = svgElement.querySelectorAll('.link');\n        checks.details.nodeCount = nodes.length;\n        checks.details.linkCount = links.length;\n      }\n    }\n\n    // Fetch data from API to check format\n    try {\n      const response = await fetch('/api/socialgraph');\n      if (!response.ok) {\n        checks.details.apiStatus = 'error';\n        checks.details.apiMessage = `API returned status ${response.status}`;\n      } else {\n        const data = await response.json();\n        checks.details.apiStatus = 'success';\n        checks.details.dataValid = !!(data && data.nodes && data.links);\n        checks.details.nodeCount = data.nodes?.length || 0;\n        checks.details.linkCount = data.links?.length || 0;\n      }\n    } catch (error) {\n      checks.details.apiStatus = 'error';\n      checks.details.apiMessage = (error as Error).message;\n    }\n\n    // Set overall status\n    if (\n      checks.details.apiStatus === 'error' ||\n      (checks.details.svgExists && !checks.details.nodeCount)\n    ) {\n      checks.status = 'error';\n      checks.message = 'Issues detected with client-side visualization';\n    } else if (!checks.details.svgExists) {\n      checks.status = 'warning';\n      checks.message = 'SVG not found - visualization may not be rendering';\n    } else {\n      checks.status = 'success';\n      checks.message = 'Client-side checks passed';\n    }\n\n    setClientChecks(checks);\n  };\n\n  const runBrowserDiagnostic = () => {\n    // This will be executed in the browser console\n    const script = document.createElement('script');\n    script.src = '/diagnosis.js';\n    document.body.appendChild(script);\n    \n    // Show a message to the user\n    alert('Browser diagnostic script loaded. Check your browser console for results.');\n  };\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'success': return 'text-green-600';\n      case 'warning': return 'text-yellow-600';\n      case 'error': return 'text-red-600';\n      default: return 'text-gray-600';\n    }\n  };\n\n  return (\n    <div className=\"container mx-auto px-4 py-8\">\n      <h1 className=\"text-3xl font-bold mb-8\">Social Graph Diagnosis</h1>\n      \n      {isLoading ? (\n        <div className=\"text-center py-12\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-gray-900 mx-auto mb-4\"></div>\n          <p>Running diagnostics...</p>\n        </div>\n      ) : error ? (\n        <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4\">\n          <p><strong>Error:</strong> {error}</p>\n          <p className=\"mt-2\">Please try again or check the server logs.</p>\n        </div>\n      ) : (\n        <div>\n          {/* Quick Actions */}\n          <div className=\"mb-8 flex gap-4 flex-wrap\">\n            <button \n              className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"\n              onClick={runBrowserDiagnostic}\n            >\n              Run Browser Diagnostic\n            </button>\n            <Link \n              href=\"/community\" \n              className=\"bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded inline-block\"\n            >\n              View Social Graph\n            </Link>\n            <Link \n              href=\"/admin/socialgraph\" \n              className=\"bg-purple-500 hover:bg-purple-700 text-white font-bold py-2 px-4 rounded inline-block\"\n            >\n              Go to Admin Page\n            </Link>\n            <Link \n              href=\"/api/socialgraph?update=true\" \n              className=\"bg-yellow-500 hover:bg-yellow-700 text-white font-bold py-2 px-4 rounded inline-block\"\n            >\n              Force Graph Update\n            </Link>\n          </div>\n\n          {/* Overall Status */}\n          <div className=\"bg-white shadow-md rounded p-6 mb-6\">\n            <h2 className=\"text-xl font-semibold mb-4\">Diagnosis Summary</h2>\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n              <div className={`p-4 rounded ${results.results.api.status === 'success' ? 'bg-green-100' : results.results.api.status === 'warning' ? 'bg-yellow-100' : 'bg-red-100'}`}>\n                <h3 className=\"font-medium\">API Status</h3>\n                <p className={`${getStatusColor(results.results.api.status)}`}>{results.results.api.message}</p>\n              </div>\n              <div className={`p-4 rounded ${results.results.files.status === 'success' ? 'bg-green-100' : results.results.files.status === 'warning' ? 'bg-yellow-100' : 'bg-red-100'}`}>\n                <h3 className=\"font-medium\">Files Status</h3>\n                <p className={`${getStatusColor(results.results.files.status)}`}>{results.results.files.message}</p>\n              </div>\n              <div className={`p-4 rounded ${results.results.data.status === 'success' ? 'bg-green-100' : results.results.data.status === 'warning' ? 'bg-yellow-100' : 'bg-red-100'}`}>\n                <h3 className=\"font-medium\">Data Status</h3>\n                <p className={`${getStatusColor(results.results.data.status)}`}>{results.results.data.message}</p>\n              </div>\n            </div>\n          </div>\n\n          {/* Client Status */}\n          <div className=\"bg-white shadow-md rounded p-6 mb-6\">\n            <h2 className=\"text-xl font-semibold mb-4\">Client-side Diagnosis</h2>\n            <div className={`p-4 rounded ${clientChecks.status === 'success' ? 'bg-green-100' : clientChecks.status === 'warning' ? 'bg-yellow-100' : 'bg-red-100'}`}>\n              <h3 className=\"font-medium\">Browser Status</h3>\n              <p className={`${getStatusColor(clientChecks.status)}`}>{clientChecks.message || 'Checking...'}</p>\n            </div>\n            \n            <div className=\"mt-4 grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <div>\n                <h3 className=\"font-medium mb-2\">API Check</h3>\n                <p>Status: {clientChecks.details.apiStatus || 'Unknown'}</p>\n                {clientChecks.details.apiMessage && <p>Message: {clientChecks.details.apiMessage}</p>}\n                {clientChecks.details.nodeCount !== undefined && <p>Nodes: {clientChecks.details.nodeCount}</p>}\n                {clientChecks.details.linkCount !== undefined && <p>Links: {clientChecks.details.linkCount}</p>}\n              </div>\n              <div>\n                <h3 className=\"font-medium mb-2\">SVG Check</h3>\n                <p>SVG Exists: {clientChecks.details.svgExists ? 'Yes' : 'No'}</p>\n                {clientChecks.details.svgDimensions && (\n                  <p>Dimensions: {clientChecks.details.svgDimensions.width} x {clientChecks.details.svgDimensions.height}</p>\n                )}\n                {clientChecks.details.nodeCount !== undefined && <p>Rendered Nodes: {clientChecks.details.nodeCount}</p>}\n                {clientChecks.details.linkCount !== undefined && <p>Rendered Links: {clientChecks.details.linkCount}</p>}\n              </div>\n            </div>\n          </div>\n\n          {/* Recommendations */}\n          <div className=\"bg-white shadow-md rounded p-6 mb-6\">\n            <h2 className=\"text-xl font-semibold mb-4\">Recommendations</h2>\n            <ul className=\"list-disc pl-5 space-y-2\">\n              {results.recommendations.map((rec: string, index: number) => (\n                <li key={index}>{rec}</li>\n              ))}\n            </ul>\n          </div>\n\n          {/* File Details */}\n          {results.results.files.details && (\n            <div className=\"bg-white shadow-md rounded p-6 mb-6\">\n              <h2 className=\"text-xl font-semibold mb-4\">File System Details</h2>\n              <div className=\"overflow-x-auto\">\n                <table className=\"min-w-full bg-white\">\n                  <thead>\n                    <tr>\n                      <th className=\"py-2 px-4 border-b text-left\">Property</th>\n                      <th className=\"py-2 px-4 border-b text-left\">Value</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr>\n                      <td className=\"py-2 px-4 border-b\">Data Directory</td>\n                      <td className=\"py-2 px-4 border-b\">{results.results.files.details.directoryExists ? 'Exists' : 'Missing'}</td>\n                    </tr>\n                    <tr>\n                      <td className=\"py-2 px-4 border-b\">social-graph.json</td>\n                      <td className=\"py-2 px-4 border-b\">\n                        {results.results.files.details.socialGraphExists ? 'Exists' : 'Missing'}{' '}\n                        {results.results.files.details.socialGraphValid === false && '(Invalid JSON)'}\n                      </td>\n                    </tr>\n                    {results.results.files.details.socialGraphExists && (\n                      <>\n                        <tr>\n                          <td className=\"py-2 px-4 border-b\">File Size</td>\n                          <td className=\"py-2 px-4 border-b\">{Math.round(results.results.files.details.socialGraphSize / 1024)} KB</td>\n                        </tr>\n                        <tr>\n                          <td className=\"py-2 px-4 border-b\">Last Modified</td>\n                          <td className=\"py-2 px-4 border-b\">{new Date(results.results.files.details.socialGraphModified).toLocaleString()}</td>\n                        </tr>\n                        {results.results.files.details.socialGraphValid && (\n                          <>\n                            <tr>\n                              <td className=\"py-2 px-4 border-b\">Nodes Count</td>\n                              <td className=\"py-2 px-4 border-b\">{results.results.files.details.nodesCount}</td>\n                            </tr>\n                            <tr>\n                              <td className=\"py-2 px-4 border-b\">Links Count</td>\n                              <td className=\"py-2 px-4 border-b\">{results.results.files.details.linksCount}</td>\n                            </tr>\n                          </>\n                        )}\n                      </>\n                    )}\n                    <tr>\n                      <td className=\"py-2 px-4 border-b\">known-pubkeys.json</td>\n                      <td className=\"py-2 px-4 border-b\">\n                        {results.results.files.details.knownPubkeysExists ? 'Exists' : 'Missing'}{' '}\n                        {results.results.files.details.knownPubkeysValid === false && '(Invalid JSON)'}\n                      </td>\n                    </tr>\n                    {results.results.files.details.knownPubkeysExists && results.results.files.details.knownPubkeysValid && (\n                      <tr>\n                        <td className=\"py-2 px-4 border-b\">Pubkeys Count</td>\n                        <td className=\"py-2 px-4 border-b\">{results.results.files.details.pubkeysCount}</td>\n                      </tr>\n                    )}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          )}\n\n          {/* Data Details */}\n          {results.results.data.details && results.results.data.details.sampleNodes && (\n            <div className=\"bg-white shadow-md rounded p-6 mb-6\">\n              <h2 className=\"text-xl font-semibold mb-4\">Data Sample</h2>\n              <h3 className=\"font-medium mb-2\">Node Type Distribution</h3>\n              {results.results.data.details.nodeTypeDistribution && (\n                <ul className=\"list-disc pl-5 mb-4\">\n                  {Object.entries(results.results.data.details.nodeTypeDistribution).map(([type, count]: [string, any]) => (\n                    <li key={type}>{type}: {count}</li>\n                  ))}\n                </ul>\n              )}\n              <h3 className=\"font-medium mb-2\">Sample Nodes (First 3)</h3>\n              <pre className=\"bg-gray-100 p-4 rounded overflow-x-auto text-xs\">\n                {JSON.stringify(results.results.data.details.sampleNodes, null, 2)}\n              </pre>\n            </div>\n          )}\n\n          {/* Raw Results (Collapsed) */}\n          <details className=\"bg-white shadow-md rounded p-6 mb-6\">\n            <summary className=\"text-xl font-semibold cursor-pointer\">Raw Diagnostic Data</summary>\n            <pre className=\"mt-4 bg-gray-100 p-4 rounded overflow-x-auto text-xs h-64\">\n              {JSON.stringify(results, null, 2)}\n            </pre>\n          </details>\n        </div>\n      )}\n    </div>\n  );\n} "],"names":["DiagnosisPage","isLoading","setIsLoading","useState","results","setResults","error","setError","clientChecks","setClientChecks","status","details","useEffect","fetch","then","response","ok","json","data","catch","err","message","runClientChecks","checks","d3Loaded","window","document","svgElement","querySelector","svgExists","width","getAttribute","height","svgDimensions","nodes","querySelectorAll","links","nodeCount","length","linkCount","apiStatus","dataValid","apiMessage","getStatusColor","div","className","h1","p","strong","button","onClick","runBrowserDiagnostic","script","createElement","src","body","appendChild","alert","Link","href","h2","api","h3","files","undefined","ul","recommendations","map","rec","index","li","table","thead","tr","th","tbody","td","directoryExists","socialGraphExists","socialGraphValid","Math","round","socialGraphSize","Date","socialGraphModified","toLocaleString","nodesCount","linksCount","knownPubkeysExists","knownPubkeysValid","pubkeysCount","sampleNodes","nodeTypeDistribution","Object","entries","type","count","pre","JSON","stringify","summary"],"sourceRoot":"","ignoreList":[]}