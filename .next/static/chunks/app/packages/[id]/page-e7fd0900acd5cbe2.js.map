{"version":3,"file":"static/chunks/app/packages/[id]/page-e7fd0900acd5cbe2.js","mappings":"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","sources":["webpack://_N_E/./src/data/packages.ts","webpack://_N_E/./src/app/packages/[id]/page.tsx","webpack://_N_E/?0e9c","webpack://_N_E/./node_modules/next/dist/api/navigation.js","webpack://_N_E/./src/lib/services/PaymentService.ts","webpack://_N_E/./src/components/NostrPayment.tsx"],"sourcesContent":["import { Package } from '@/types/index';\n\n// Shared packages data for use across the application\nexport const PACKAGES: Package[] = [\n  {\n    id: '1',\n    title: 'Beach Day Experience',\n    description: 'Enjoy a day at Madeira\\'s most beautiful beaches with transportation included.',\n    price: 1, // 1 sat for testing\n    duration: '1 Day',\n    includes: ['Transportation', 'Lunch', 'Beach Equipment'],\n    image: '/assets/packages/beach-day.jpg'\n  },\n  {\n    id: '2',\n    title: 'Mountain Explorer',\n    description: 'Discover the stunning mountains and levadas of Madeira with expert guides.',\n    price: 2, // 2 sats for testing\n    duration: '2 Days',\n    includes: ['Transportation', 'Accommodation', 'Meals', 'Guided Tours'],\n    image: '/assets/packages/mountains.jpg'\n  },\n  {\n    id: '3',\n    title: 'Bitcoin Conference Package',\n    description: 'All-inclusive package for the annual Bitcoin Madeira Conference.',\n    price: 3, // 3 sats for testing\n    duration: '3 Days',\n    includes: ['Conference Entry', 'Accommodation', 'Meals', 'Networking Events'],\n    image: '/assets/packages/conference.jpg'\n  },\n  {\n    id: '4',\n    title: 'Porto Santo Getaway',\n    description: 'Experience the golden beaches of Porto Santo island with this all-inclusive package.',\n    price: 4, // 4 sats for testing\n    duration: '3 Days',\n    includes: ['Ferry Transportation', 'Beach Hotel', 'Meals', 'Island Tour'],\n    image: '/assets/packages/porto-santo.jpg'\n  },\n  {\n    id: '5',\n    title: 'Madeira Food Tour',\n    description: 'Taste the unique flavors of Madeira with this guided food tour around the island.',\n    price: 5, // 5 sats for testing\n    duration: '1 Day',\n    includes: ['Multiple Food Tastings', 'Wine Tasting', 'Expert Guide', 'Transportation'],\n    image: '/assets/packages/food-tour.jpg'\n  },\n  {\n    id: '6',\n    title: 'Hiking Adventure',\n    description: 'Explore Madeira\\'s most breathtaking trails with experienced local guides.',\n    price: 6, // 6 sats for testing\n    duration: '2 Days',\n    includes: ['Trail Access', 'Safety Equipment', 'Meals', 'Transportation'],\n    image: '/assets/packages/hiking.jpg'\n  }\n];\n\n// Helper function to format satoshi amount to BTC\nexport const formatSats = (sats: number, includeRaw = false) => {\n  // For testing with small amounts, display in sats rather than BTC\n  return includeRaw \n    ? `${sats} sats` \n    : `${sats} sats`;\n};\n\n// Featured packages - just first 4 packages\nexport const FEATURED_PACKAGES = PACKAGES.slice(0, 4);\n\n// Get package by ID\nexport const getPackageById = (id: string): Package | undefined => {\n  return PACKAGES.find(pkg => pkg.id === id);\n}; ","'use client';\n\nimport { useState, useEffect } from 'react';\nimport Image from 'next/image';\nimport Link from 'next/link';\nimport { useParams } from 'next/navigation';\nimport { Package, PaymentData } from '@/types/index';\nimport { useNostr } from '@/lib/contexts/NostrContext';\nimport { NostrPayment } from '@/components/NostrPayment';\nimport React from 'react';\nimport { getPackageById, formatSats } from '@/data/packages';\n\n// Real lnbits payment functions\nconst createPayment = async (amount: number, description: string): Promise<PaymentData> => {\n  try {\n    // Call your lnbits API\n    const response = await fetch('/api/payments/create', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        amount,\n        description,\n      }),\n    });\n    \n    const data = await response.json();\n    \n    if (!response.ok) {\n      throw new Error(data.message || 'Failed to create payment');\n    }\n    \n    return data;\n  } catch (error) {\n    console.error('Error creating payment:', error);\n    throw error;\n  }\n};\n\nconst checkPaymentStatus = async (paymentId: string) => {\n  try {\n    // Call your lnbits API to check payment status\n    const response = await fetch(`/api/payments/status/${paymentId}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n    \n    const data = await response.json();\n    \n    if (!response.ok) {\n      throw new Error(data.message || 'Failed to check payment status');\n    }\n    \n    return data;\n  } catch (error) {\n    console.error('Error checking payment status:', error);\n    throw error;\n  }\n};\n\nconst createBooking = async (data: { packageId: string; nostrPubkey: string; invoice: string; preimage?: string }) => {\n  try {\n    // Call your lnbits API to create booking\n    const response = await fetch('/api/bookings/create', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(data),\n    });\n    \n    const responseData = await response.json();\n    \n    if (!response.ok) {\n      throw new Error(responseData.message || 'Failed to create booking');\n    }\n    \n    return responseData;\n  } catch (error) {\n    console.error('Error creating booking:', error);\n    throw error;\n  }\n};\n\nexport default function PackageDetailPage() {\n  // Use the useParams hook to get route params in a client component\n  const params = useParams();\n  const packageId = params.id as string;\n  \n  const [packageItem, setPackageItem] = useState<Package | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  \n  // Booking and payment states\n  const [showBookingForm, setShowBookingForm] = useState(false);\n  const [showNostrPayment, setShowNostrPayment] = useState(false);\n  const [paymentData, setPaymentData] = useState<PaymentData | null>(null);\n  const [bookingComplete, setBookingComplete] = useState(false);\n  const [bookingId, setBookingId] = useState<string | null>(null);\n  \n  // Nostr state\n  const { user, loginMethod } = useNostr();\n\n  useEffect(() => {\n    // Find the package by ID from our centralized data\n    const findPackage = () => {\n      setLoading(true);\n      \n      if (!packageId) {\n        setError('Invalid package ID');\n        setLoading(false);\n        return;\n      }\n      \n      const foundPackage = getPackageById(packageId);\n      \n      if (foundPackage) {\n        setPackageItem(foundPackage);\n        setError(null);\n      } else {\n        setError('Package not found');\n      }\n      \n      setLoading(false);\n    };\n\n    findPackage();\n  }, [packageId]);\n\n  const handleBookNow = () => {\n    setShowBookingForm(true);\n    // We'll handle the Nostr login separately\n  };\n\n  const handlePaymentRequest = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!packageItem) return;\n    \n    // Check if Nostr is connected\n    if (!user) {\n      setError('Please connect your Nostr wallet to continue with payment.');\n      return;\n    }\n    \n    try {\n      // Get a Lightning invoice from the API\n      const paymentResponse = await createPayment(\n        packageItem.price, \n        `MadTrips: ${packageItem.title}`\n      );\n      \n      setPaymentData(paymentResponse);\n      setShowNostrPayment(true);\n      \n    } catch (err) {\n      console.error('Error generating payment:', err);\n      setError('Failed to generate payment. Please try again.');\n    }\n  };\n  \n  // Handle payment success\n  const handlePaymentSuccess = async (preimage: string) => {\n    if (!packageItem || !user || !paymentData) return;\n    \n    try {\n      // Create booking with the preimage as proof of payment\n      const bookingResponse = await createBooking({\n        packageId: packageItem.id,\n        nostrPubkey: user.npub,\n        invoice: paymentData.invoice,\n        preimage: preimage\n      });\n      \n      setBookingId(bookingResponse.bookingId);\n      setBookingComplete(true);\n      setShowNostrPayment(false);\n    } catch (err) {\n      console.error('Error creating booking:', err);\n      setError('Payment confirmed, but booking creation failed. Please contact support.');\n    }\n  };\n\n  // Handle payment error\n  const handlePaymentError = (error: Error) => {\n    setError(`Payment failed: ${error.message}`);\n    setShowNostrPayment(false);\n  };\n\n  // Handle payment cancel\n  const handlePaymentCancel = () => {\n    setShowNostrPayment(false);\n  };\n\n  if (loading) {\n    return (\n      <div className=\"container mx-auto px-4 py-12 flex items-center justify-center h-screen\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-[#F7931A]\" />\n      </div>\n    );\n  }\n\n  if (error || !packageItem) {\n    return (\n      <div className=\"container mx-auto px-4 py-12\">\n        <div className=\"bg-red-50 p-4 rounded-md border border-red-200 text-red-700\">\n          {error || 'Package not found'}\n        </div>\n        <Link href=\"/packages\" className=\"mt-4 inline-block text-[#F7931A] hover:underline\">\n          &larr; Back to packages\n        </Link>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container mx-auto px-4 py-12\">\n      <Link href=\"/packages\" className=\"inline-block mb-8 text-[#F7931A] hover:underline\">\n        &larr; Back to packages\n      </Link>\n      \n      {/* Package details */}\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-lg overflow-hidden\">\n        <div className=\"relative h-96 w-full\">\n          <Image\n            src={packageItem.image || '/assets/placeholder.jpg'}\n            alt={packageItem.title}\n            fill\n            className=\"object-cover\"\n          />\n        </div>\n        \n        <div className=\"p-8\">\n          <h1 className=\"text-3xl font-bold mb-4 text-ocean dark:text-[#F7931A]\">{packageItem.title}</h1>\n          <p className=\"text-gray-600 dark:text-gray-400 text-lg mb-6\">{packageItem.description}</p>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8 mb-8\">\n            <div>\n              <h2 className=\"text-xl font-semibold mb-3 text-gray-800 dark:text-white\">Package Details</h2>\n              <div className=\"space-y-2\">\n                <p className=\"text-gray-600 dark:text-gray-400\">\n                  <span className=\"font-medium\">Duration:</span> {packageItem.duration}\n                </p>\n                <p className=\"text-gray-600 dark:text-gray-400\">\n                  <span className=\"font-medium\">Price:</span> <span className=\"text-[#F7931A] font-semibold\">{formatSats(packageItem.price)}</span>\n                </p>\n              </div>\n            </div>\n            \n            <div>\n              <h2 className=\"text-xl font-semibold mb-3 text-gray-800 dark:text-white\">What's Included</h2>\n              <ul className=\"list-disc pl-5 text-gray-600 dark:text-gray-400 space-y-1\">\n                {packageItem.includes.map((item, index) => (\n                  <li key={index}>{item}</li>\n                ))}\n              </ul>\n            </div>\n          </div>\n          \n          {!showBookingForm && !bookingComplete && (\n            <div className=\"text-center\">\n              <button\n                onClick={handleBookNow}\n                className=\"px-8 py-3 bg-[#F7931A] hover:bg-[#F7931A]/80 text-white rounded-md font-semibold transition-colors\"\n              >\n                Book Now with Bitcoin\n              </button>\n            </div>\n          )}\n          \n          {/* Booking Form */}\n          {showBookingForm && !paymentData && !bookingComplete && !showNostrPayment && (\n            <div className=\"mt-8 max-w-md mx-auto\">\n              <h2 className=\"text-xl font-semibold mb-4 text-gray-800 dark:text-white\">Ready to Book</h2>\n              \n              {error && (\n                <div className=\"mb-4 p-3 bg-red-100 dark:bg-red-900 text-red-700 dark:text-red-100 rounded\">\n                  <p>{error}</p>\n                </div>\n              )}\n              \n              {!user ? (\n                <div className=\"text-center mb-6\">\n                  <p className=\"text-gray-600 dark:text-gray-400 mb-4\">\n                    Please connect your Nostr wallet to continue with payment.\n                  </p>\n                  <div className=\"bg-yellow-50 dark:bg-yellow-900/20 p-4 rounded-lg border border-yellow-200 dark:border-yellow-800 mb-4\">\n                    <p className=\"text-sm text-yellow-700 dark:text-yellow-400\">\n                      Use the Nostr login button in the bottom right corner to connect.\n                    </p>\n                  </div>\n                </div>\n              ) : (\n                <div>\n                  <div className=\"mb-4 p-4 bg-gray-50 dark:bg-gray-700 rounded-lg\">\n                    <p className=\"text-sm text-gray-600 dark:text-gray-400 mb-1\">Connected with Nostr pubkey:</p>\n                    <p className=\"font-mono text-xs break-all\">{user.npub}</p>\n                    <div className=\"mt-2 flex items-center text-green-600\">\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 mr-1\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                        <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clipRule=\"evenodd\" />\n                      </svg>\n                      <span className=\"text-xs\">Connected with {loginMethod === 'nip07' ? 'Browser Extension' : loginMethod === 'nip47' ? 'Remote Signer' : 'View Only'}</span>\n                    </div>\n                  </div>\n                  <div className=\"pt-4\">\n                    <button\n                      onClick={handlePaymentRequest}\n                      disabled={loginMethod === 'viewonly'}\n                      className=\"w-full px-4 py-2 bg-[#F7931A] hover:bg-[#F7931A]/80 text-white rounded-md font-semibold transition-colors disabled:opacity-50\"\n                    >\n                      Proceed to Payment\n                    </button>\n                    \n                    {loginMethod === 'viewonly' && (\n                      <p className=\"mt-2 text-sm text-yellow-600 dark:text-yellow-400\">\n                        You are in view-only mode. Please connect with a signing method to make payments.\n                      </p>\n                    )}\n                  </div>\n                </div>\n              )}\n            </div>\n          )}\n          \n          {/* NostrPayment Component - New Implementation */}\n          {showNostrPayment && paymentData && !bookingComplete && (\n            <div className=\"mt-8\">\n              <NostrPayment\n                invoice={paymentData.invoice}\n                amount={formatSats(packageItem.price)}\n                description={`MadTrips: ${packageItem.title}`}\n                onSuccess={handlePaymentSuccess}\n                onError={handlePaymentError}\n                onCancel={handlePaymentCancel}\n              />\n            </div>\n          )}\n          \n          {/* Legacy Payment QR Code - Only show as fallback if NostrPayment not available */}\n          {paymentData && !bookingComplete && !showNostrPayment && (\n            <div className=\"mt-8 max-w-md mx-auto text-center\">\n              <h2 className=\"text-xl font-semibold mb-4 text-gray-800 dark:text-white\">Pay with Bitcoin</h2>\n              <p className=\"text-gray-600 dark:text-gray-400 mb-4\">\n                Scan the QR code with your Lightning wallet to complete payment.\n              </p>\n              <div className=\"bg-white p-4 rounded-lg inline-block mb-4\">\n                <Image\n                  src={paymentData.qrCode}\n                  alt=\"Lightning Invoice QR Code\"\n                  width={250}\n                  height={250}\n                />\n              </div>\n              <div className=\"text-xs text-gray-500 dark:text-gray-400 break-all mb-4\">\n                <p className=\"font-medium mb-1\">Lightning Invoice:</p>\n                <code className=\"bg-gray-100 dark:bg-gray-700 p-2 rounded block\">\n                  {paymentData.invoice.substring(0, 30)}...\n                </code>\n              </div>\n              <p className=\"text-gray-600 dark:text-gray-400\">\n                <span className=\"text-[#F7931A] font-semibold\">Note:</span> This is a demo payment. In the MVP version, the payment will be automatically \"confirmed\" after 5 seconds.\n              </p>\n            </div>\n          )}\n          \n          {/* Booking Complete */}\n          {bookingComplete && bookingId && (\n            <div className=\"mt-8 max-w-md mx-auto text-center\">\n              <div className=\"bg-green-50 dark:bg-green-900/20 p-6 rounded-lg border border-green-200 dark:border-green-800\">\n                <svg className=\"w-16 h-16 text-green-500 mx-auto mb-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                </svg>\n                <h2 className=\"text-2xl font-bold text-gray-800 dark:text-white mb-2\">Booking Confirmed!</h2>\n                <p className=\"text-gray-600 dark:text-gray-400 mb-4\">\n                  Thank you for your booking. Your confirmation ID is: <span className=\"font-mono font-medium\">{bookingId}</span>\n                </p>\n                <p className=\"text-gray-600 dark:text-gray-400\">\n                  You will receive a confirmation email shortly with all the details of your trip.\n                </p>\n                <div className=\"mt-6\">\n                  <Link \n                    href=\"/packages\" \n                    className=\"px-6 py-2 bg-[#F7931A] hover:bg-[#F7931A]/80 text-white rounded-md font-medium transition-colors\"\n                  >\n                    Browse More Packages\n                  </Link>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n} ","import(/* webpackMode: \"eager\" */ \"/home/lfg/Git/Madtrips/src/app/packages/[id]/page.tsx\");\n","export * from '../client/components/navigation';\n\n//# sourceMappingURL=navigation.js.map","import { NIP47Client } from '@/lib/nostr/nip47';\nimport NDK, { NDKEvent, NDKFilter, NDKSubscription } from '@nostr-dev-kit/ndk';\nimport { Event as NostrEvent } from 'nostr-tools';\n\n// Define a more accurate interface for payment responses\ninterface PaymentResponse {\n  id: string;\n  result?: {\n    preimage: string;\n    paymentHash: string;\n  };\n  error?: {\n    code: number;\n    message: string;\n  };\n}\n\n/**\n * PaymentService - Service to handle Lightning payments using NIP-47\n * This service integrates with the NIP47Client to manage payment operations\n */\nexport class PaymentService {\n  private ndk: NDK;\n  private client: NIP47Client | null = null;\n  private paymentSubscription: NDKSubscription | null = null;\n  private pendingPayments: Map<string, { \n    resolve: (value: any) => void;\n    reject: (error: any) => void;\n    invoice: string;\n  }> = new Map();\n\n  /**\n   * Create a new PaymentService\n   * @param ndk The NDK instance to use for communication\n   */\n  constructor(ndk: NDK) {\n    this.ndk = ndk;\n  }\n\n  /**\n   * Connect to a remote signer\n   * @param remoteUrl The NIP-47 compatible wallet URL or pubkey\n   * @param relayUrl Optional specific relay to use for communication\n   */\n  async connect(remoteUrl: string, relayUrl?: string): Promise<void> {\n    try {\n      // Disconnect any existing client\n      await this.disconnect();\n      \n      // Create a new client\n      this.client = new NIP47Client(remoteUrl, relayUrl);\n      \n      // Connect to the remote signer\n      await this.client.connect();\n      \n      // Set up subscription for payment responses\n      await this.setupPaymentResponseSubscription();\n      \n      console.log('Payment service connected to wallet');\n    } catch (error) {\n      console.error('Failed to connect payment service:', error);\n      this.client = null;\n      throw error;\n    }\n  }\n\n  /**\n   * Set up subscription for payment responses\n   */\n  private async setupPaymentResponseSubscription(): Promise<void> {\n    if (!this.client || !this.ndk) {\n      throw new Error('Client or NDK not initialized');\n    }\n    \n    // Get the remote signer's pubkey\n    const remotePubkey = this.client.getPublicKey ? await this.client.getPublicKey() : '';\n    \n    // Create a filter for payment response events\n    const filter: NDKFilter = {\n      kinds: [24133], // NIP-47 response event kind\n      '#p': [remotePubkey], // Events directed to our client\n    };\n    \n    // Create a subscription\n    this.paymentSubscription = this.ndk.subscribe(filter, {\n      closeOnEose: false,\n    });\n    \n    // Handle events\n    this.paymentSubscription.on('event', async (event: NDKEvent) => {\n      try {\n        if (!this.client) return;\n        \n        // Get the raw event and ensure it has the required properties\n        const rawEvent = event.rawEvent();\n        if (!rawEvent || typeof rawEvent.kind !== 'number') {\n          console.error('Invalid event received');\n          return;\n        }\n        \n        // Process the payment response\n        const response = await this.client.processPaymentResponse(rawEvent as NostrEvent) as PaymentResponse;\n        \n        if (response && response.id && this.pendingPayments.has(response.id)) {\n          const pendingPayment = this.pendingPayments.get(response.id)!;\n          \n          if (response.error) {\n            pendingPayment.reject(new Error(`Payment error: ${response.error.message}`));\n          } else if (response.result) {\n            pendingPayment.resolve(response.result);\n          } else {\n            pendingPayment.reject(new Error('Invalid payment response'));\n          }\n          \n          this.pendingPayments.delete(response.id);\n        }\n      } catch (error) {\n        console.error('Failed to process payment response event:', error);\n      }\n    });\n    \n    console.log('Payment response subscription set up');\n  }\n\n  /**\n   * Check if the service is connected to a wallet\n   */\n  isConnected(): boolean {\n    return this.client !== null;\n  }\n\n  /**\n   * Get wallet information\n   */\n  async getWalletInfo(): Promise<any> {\n    if (!this.client) {\n      throw new Error('Not connected to a wallet');\n    }\n    \n    return await this.client.getInfo();\n  }\n\n  /**\n   * Get wallet balance\n   */\n  async getBalance(): Promise<{ balance: number, currency: string }> {\n    if (!this.client) {\n      throw new Error('Not connected to a wallet');\n    }\n    \n    return await this.client.getBalance();\n  }\n\n  /**\n   * Pay a Lightning invoice\n   * @param invoice BOLT11 Lightning invoice to pay\n   * @returns Payment result including preimage and payment hash\n   */\n  async payInvoice(invoice: string): Promise<{ preimage: string, paymentHash: string }> {\n    if (!this.client) {\n      throw new Error('Not connected to a wallet');\n    }\n    \n    // For demonstration purposes, we'll just call the client method directly\n    // In a production app, you would use the event-based approach with proper\n    // subscription handling\n    return await this.client.payInvoice(invoice);\n  }\n\n  /**\n   * Process a payment using the event-based approach\n   * This is more complex but follows the correct NIP-47 flow\n   * @param invoice BOLT11 Lightning invoice to pay\n   */\n  async processPaymentEvent(invoice: string): Promise<{ preimage: string, paymentHash: string }> {\n    if (!this.client || !this.ndk) {\n      throw new Error('Not connected to a wallet');\n    }\n    \n    try {\n      // Create a payment request event\n      const event = await this.client.createPaymentRequestEvent(invoice);\n      \n      // Create a promise that will be resolved when the payment response is received\n      const paymentPromise = new Promise<{ preimage: string, paymentHash: string }>((resolve, reject) => {\n        if (!event.id) {\n          reject(new Error('Invalid payment request event'));\n          return;\n        }\n        \n        // Store the pending payment\n        this.pendingPayments.set(event.id, { resolve, reject, invoice });\n        \n        // Set a timeout for the payment\n        setTimeout(() => {\n          if (event.id && this.pendingPayments.has(event.id)) {\n            this.pendingPayments.delete(event.id);\n            reject(new Error('Payment timeout'));\n          }\n        }, 60000); // 60 second timeout\n      });\n      \n      // Create an NDK event and publish it\n      const ndkEvent = new NDKEvent(this.ndk);\n      if (event.kind) ndkEvent.kind = event.kind;\n      ndkEvent.tags = event.tags || [];\n      ndkEvent.content = event.content || '';\n      ndkEvent.created_at = event.created_at || Math.floor(Date.now() / 1000);\n      \n      // Publish the event\n      await ndkEvent.publish();\n      \n      console.log('Payment request published, waiting for response...');\n      \n      // Wait for the payment response\n      return await paymentPromise;\n    } catch (error) {\n      console.error('Failed to process payment:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Disconnect from the wallet\n   */\n  async disconnect(): Promise<void> {\n    if (this.paymentSubscription) {\n      this.paymentSubscription.stop();\n      this.paymentSubscription = null;\n    }\n    \n    if (this.client) {\n      this.client.disconnect();\n      this.client = null;\n    }\n    \n    // Clear any pending payments\n    for (const [id, { reject }] of this.pendingPayments) {\n      reject(new Error('Disconnected from wallet'));\n      this.pendingPayments.delete(id);\n    }\n    \n    console.log('Payment service disconnected');\n  }\n}\n\n// Create a singleton instance\nlet paymentServiceInstance: PaymentService | null = null;\n\n/**\n * Get or create the payment service instance\n */\nexport const getPaymentService = (ndk: NDK): PaymentService => {\n  if (!paymentServiceInstance) {\n    paymentServiceInstance = new PaymentService(ndk);\n  }\n  return paymentServiceInstance;\n}; ","'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { useNostr } from '@/lib/contexts/NostrContext';\nimport { getPaymentService } from '@/lib/services/PaymentService';\n\n// Define WebLN interface directly in this file\ninterface WebLNProvider {\n  enable: () => Promise<void>;\n  sendPayment: (invoice: string) => Promise<{\n    preimage: string;\n    paymentHash?: string;\n  }>;\n}\n\n// Add a type declaration that is specific to this file\ndeclare global {\n  interface Window {\n    webln?: WebLNProvider;\n  }\n}\n\ninterface NostrPaymentProps {\n  invoice: string;\n  amount: string;\n  description: string;\n  onSuccess?: (preimage: string) => void;\n  onError?: (error: Error) => void;\n  onCancel?: () => void;\n}\n\nexport const NostrPayment: React.FC<NostrPaymentProps> = ({\n  invoice,\n  amount,\n  description,\n  onSuccess,\n  onError,\n  onCancel\n}) => {\n  const { ndk, user, loginMethod } = useNostr();\n  const [status, setStatus] = useState<'idle' | 'connecting' | 'paying' | 'success' | 'error'>('idle');\n  const [error, setError] = useState<string | null>(null);\n  const [preimage, setPreimage] = useState<string | null>(null);\n  const [walletConnected, setWalletConnected] = useState(false);\n\n  // Check if the user is logged in with NIP-47\n  const isNip47 = loginMethod === 'nip47';\n\n  // Effect to handle payment when invoice changes\n  useEffect(() => {\n    setStatus('idle');\n    setError(null);\n    setPreimage(null);\n  }, [invoice]);\n\n  // Connect to the wallet\n  const connectWallet = async () => {\n    if (!ndk || !user) {\n      setError('You must be logged in to make a payment');\n      return;\n    }\n\n    try {\n      setStatus('connecting');\n      \n      const paymentService = getPaymentService(ndk);\n      \n      // If using NIP-47, we can use the existing connection\n      if (isNip47) {\n        setWalletConnected(true);\n        setStatus('idle');\n        return;\n      }\n      \n      // For NIP-07, we need to prompt the user\n      // NIP-07 doesn't need explicit connection for payments - the browser extension handles it\n      if (loginMethod === 'nip07') {\n        setWalletConnected(true);\n        setStatus('idle');\n        return;\n      }\n      \n      // If we're in view-only mode, we can't make payments\n      if (loginMethod === 'viewonly') {\n        throw new Error('Cannot make payments in view-only mode');\n      }\n      \n      // If no method is detected, show an error\n      throw new Error('No compatible payment method detected');\n      \n    } catch (err) {\n      console.error('Failed to connect wallet:', err);\n      setError(err instanceof Error ? err.message : 'Failed to connect wallet');\n      setStatus('error');\n    }\n  };\n\n  // Process payment\n  const processPayment = async () => {\n    if (!ndk || !user) {\n      setError('You must be logged in to make a payment');\n      return;\n    }\n\n    try {\n      setStatus('paying');\n      \n      const paymentService = getPaymentService(ndk);\n      \n      // Different payment approaches based on login method\n      if (isNip47) {\n        // For NIP-47, use the remote signer\n        const result = await paymentService.payInvoice(invoice);\n        setPreimage(result.preimage);\n        setStatus('success');\n        onSuccess?.(result.preimage);\n      } else if (loginMethod === 'nip07') {\n        // For NIP-07, use the extension's webln if available\n        if (typeof window !== 'undefined' && window.webln) {\n          try {\n            await window.webln.enable();\n            const result = await window.webln.sendPayment(invoice);\n            setPreimage(result.preimage);\n            setStatus('success');\n            onSuccess?.(result.preimage);\n          } catch (weblnError) {\n            console.error('WebLN payment failed:', weblnError);\n            throw new Error('WebLN payment failed. Please try again.');\n          }\n        } else {\n          throw new Error('Your browser extension does not support WebLN for payments');\n        }\n      } else {\n        throw new Error('No compatible payment method detected');\n      }\n    } catch (err) {\n      console.error('Payment failed:', err);\n      setError(err instanceof Error ? err.message : 'Payment failed');\n      setStatus('error');\n      onError?.(err instanceof Error ? err : new Error('Payment failed'));\n    }\n  };\n\n  // Handle cancel\n  const handleCancel = () => {\n    setStatus('idle');\n    setError(null);\n    onCancel?.();\n  };\n\n  return (\n    <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-md p-4 max-w-md mx-auto\">\n      <h3 className=\"text-lg font-medium mb-3 text-center dark:text-white\">Lightning Payment</h3>\n      \n      <div className=\"mb-4 text-center\">\n        <p className=\"text-2xl font-bold dark:text-white\">{amount} sats</p>\n        <p className=\"text-gray-600 dark:text-gray-300\">{description}</p>\n      </div>\n      \n      {status === 'error' && (\n        <div className=\"mb-4 p-3 bg-red-100 dark:bg-red-900 text-red-700 dark:text-red-100 rounded\">\n          <p>{error}</p>\n        </div>\n      )}\n      \n      {status === 'success' && (\n        <div className=\"mb-4 p-3 bg-green-100 dark:bg-green-900 text-green-700 dark:text-green-100 rounded\">\n          <p>Payment successful!</p>\n          {preimage && (\n            <details className=\"mt-2\">\n              <summary className=\"cursor-pointer\">Payment Proof</summary>\n              <p className=\"text-xs mt-1 break-all\">{preimage}</p>\n            </details>\n          )}\n        </div>\n      )}\n      \n      <div className=\"space-y-3\">\n        {!walletConnected && status !== 'success' ? (\n          <button \n            onClick={connectWallet}\n            disabled={status === 'connecting'}\n            className=\"w-full px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-md text-sm font-medium flex items-center justify-center disabled:opacity-50\"\n          >\n            {status === 'connecting' ? (\n              <>\n                <span className=\"mr-2 animate-spin\">⚡</span>\n                Connecting...\n              </>\n            ) : (\n              <>\n                <span className=\"mr-2\">⚡</span>\n                Connect Wallet\n              </>\n            )}\n          </button>\n        ) : status !== 'success' ? (\n          <button \n            onClick={processPayment}\n            disabled={status === 'paying'}\n            className=\"w-full px-4 py-2 bg-green-600 hover:bg-green-700 text-white rounded-md text-sm font-medium flex items-center justify-center disabled:opacity-50\"\n          >\n            {status === 'paying' ? (\n              <>\n                <span className=\"mr-2 animate-spin\">⚡</span>\n                Paying...\n              </>\n            ) : (\n              <>\n                <span className=\"mr-2\">⚡</span>\n                Pay with Nostr\n              </>\n            )}\n          </button>\n        ) : null}\n        \n        {(status === 'idle' || status === 'error') && (\n          <button \n            onClick={handleCancel}\n            className=\"w-full px-4 py-2 bg-gray-200 hover:bg-gray-300 dark:bg-gray-700 dark:hover:bg-gray-600 text-gray-800 dark:text-white rounded-md text-sm font-medium\"\n          >\n            Cancel\n          </button>\n        )}\n        \n        {status === 'success' && (\n          <button \n            onClick={() => {\n              setStatus('idle');\n              setPreimage(null);\n            }}\n            className=\"w-full px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-md text-sm font-medium\"\n          >\n            Done\n          </button>\n        )}\n      </div>\n      \n      <div className=\"mt-4 text-xs text-gray-500 dark:text-gray-400 text-center\">\n        Powered by Nostr + Lightning\n      </div>\n    </div>\n  );\n}; "],"names":["PACKAGES","id","title","description","price","duration","includes","image","sats","includeRaw","find","pkg","createPayment","amount","response","fetch","method","headers","body","JSON","stringify","data","json","ok","message","error","console","createBooking","responseData","PackageDetailPage","packageId","useParams","packageItem","setPackageItem","useState","loading","setLoading","setError","showBookingForm","setShowBookingForm","showNostrPayment","setShowNostrPayment","paymentData","setPaymentData","bookingComplete","setBookingComplete","bookingId","setBookingId","user","loginMethod","useNostr","useEffect","findPackage","foundPackage","getPackageById","handlePaymentRequest","e","preventDefault","paymentResponse","err","handlePaymentSuccess","preimage","bookingResponse","nostrPubkey","npub","invoice","div","className","Link","href","Image","src","alt","fill","h1","p","h2","span","formatSats","ul","map","item","index","li","button","onClick","handleBookNow","svg","xmlns","viewBox","path","fillRule","d","clipRule","disabled","NostrPayment","onSuccess","onError","handlePaymentError","onCancel","handlePaymentCancel","qrCode","width","height","code","substring","stroke","strokeLinecap","strokeLinejoin","strokeWidth","PaymentService","connect","remoteUrl","relayUrl","disconnect","client","NIP47Client","setupPaymentResponseSubscription","log","ndk","remotePubkey","getPublicKey","paymentSubscription","subscribe","kinds","closeOnEose","on","event","rawEvent","kind","processPaymentResponse","pendingPayments","has","pendingPayment","get","reject","result","resolve","delete","isConnected","getWalletInfo","getInfo","getBalance","payInvoice","processPaymentEvent","createPaymentRequestEvent","paymentPromise","Promise","set","setTimeout","ndkEvent","NDKEvent","tags","content","created_at","Math","floor","Date","now","publish","stop","constructor","Map","paymentServiceInstance","getPaymentService","status","setStatus","setPreimage","walletConnected","setWalletConnected","isNip47","connectWallet","Error","processPayment","paymentService","window","webln","enable","sendPayment","weblnError","h3","details","summary","handleCancel"],"sourceRoot":"","ignoreList":[3]}